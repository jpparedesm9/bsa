/*
 * Crédito en Línea
 * Servicios para aplicación de crédito en    
 *
 * OpenAPI spec version: 1.0.0
 * Contact: pablo.lopez@ndeveloper.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.cobiscorp.mobile.model;

import java.util.Objects;

/**
 * NotificationsInner
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaJerseyServerCodegen", date = "2018-11-16T15:36:20.152Z")
public class Notification {
	private String id = null;

	private String description = null;

	private String type = null;

	private String needsOtp = null;
	
	private boolean showTransaction;
	
	private String positiveButton=null;
	
	private String negativeButton=null;
	

	public Notification id(String id) {
		this.id = id;
		return this;
	}

	/**
	 * Get id
	 * 
	 * @return id
	 **/
	public String getId() {
		return id;
	}

	public void setId(String id) {
		this.id = id;
	}

	public Notification description(String description) {
		this.description = description;
		return this;
	}

	/**
	 * Get description
	 * 
	 * @return description
	 **/
	public String getDescription() {
		return description;
	}

	public void setDescription(String description) {
		this.description = description;
	}

	public Notification type(String type) {
		this.type = type;
		return this;
	}

	/**
	 * Get type
	 * 
	 * @return type
	 **/
	public String getType() {
		return type;
	}

	public void setType(String type) {
		this.type = type;
	}

	public Notification needsOtp(String needsOtp) {
		this.needsOtp = needsOtp;
		return this;
	}

	/**
	 * Get needsOtp
	 * 
	 * @return needsOtp
	 **/
	public String getNeedsOtp() {
		return needsOtp;
	}

	public void setNeedsOtp(String needsOtp) {
		this.needsOtp = needsOtp;
	}

	
	public boolean isShowTransaction() {
		return showTransaction;
	}

	public void setShowTransaction(boolean showTransaction) {
		this.showTransaction = showTransaction;
	}

	public String getPositiveButton() {
		return positiveButton;
	}

	public void setPositiveButton(String positiveButton) {
		this.positiveButton = positiveButton;
	}

	public String getNegativeButton() {
		return negativeButton;
	}

	public void setNegativeButton(String negativeButton) {
		this.negativeButton = negativeButton;
	}

	@Override
	public boolean equals(java.lang.Object o) {
		if (this == o) {
			return true;
		}
		if (o == null || getClass() != o.getClass()) {
			return false;
		}
		Notification notificationsInner = (Notification) o;
		return Objects.equals(this.id, notificationsInner.id)
				&& Objects.equals(this.description, notificationsInner.description)
				&& Objects.equals(this.type, notificationsInner.type)
				&& Objects.equals(this.needsOtp, notificationsInner.needsOtp);
	}

	@Override
	public int hashCode() {
		return Objects.hash(id, description, type, needsOtp);
	}

	@Override
	public String toString() {
		StringBuilder sb = new StringBuilder();
		sb.append("class NotificationsInner {\n");

		sb.append("    id: ").append(toIndentedString(id)).append("\n");
		sb.append("    description: ").append(toIndentedString(description)).append("\n");
		sb.append("    type: ").append(toIndentedString(type)).append("\n");
		sb.append("    needsOtp: ").append(toIndentedString(needsOtp)).append("\n");
		sb.append("    showTransaction: ").append(toIndentedString(showTransaction)).append("\n");
		sb.append("    postiveButton: ").append(positiveButton).append("\n");
		sb.append("    negativeButton: ").append(negativeButton).append("\n");
		sb.append("}");
		return sb.toString();
	}

	/**
	 * Convert the given object to string with each line indented by 4 spaces
	 * (except the first line).
	 */
	private String toIndentedString(java.lang.Object o) {
		if (o == null) {
			return "null";
		}
		return o.toString().replace("\n", "\n    ");
	}
}