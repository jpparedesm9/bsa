/************************************************************/
/*                     IMPORTANTE                           */
/*   Esta aplicacion es parte de los  paquetes bancarios    */
/*   propiedad de COBISCORP.                                */
/*   Su uso no autorizado queda  expresamente  prohibido    */
/*   asi como cualquier alteracion o agregado hecho  por    */
/*   alguno de sus usuarios sin el debido consentimiento    */
/*   por escrito de COBISCORP.                              */
/*   Este programa esta protegido por la ley de derechos    */
/*   de autor y por las y por las convenciones              */
/*   internacionales de  propiedad intelectual. Su uso no   */
/*   autorizado dara  derecho a  COBISCORP para obtener     */
/*   ordenes de  secuestro o retencion y  para perseguir    */
/*   penalmente a los autores de cualquier infraccion.      */
/************************************************************/
/*   This code was generated by CEN-SG.                     */
/*   Changes to this file may cause incorrect behavior      */
/*   and will be lost if the code is regenerated.           */
/************************************************************/

package cobiscorp.ecobis.ucsp.service.impl;

import javax.ws.rs.Consumes;
import javax.ws.rs.PUT;
import javax.ws.rs.Path;
import javax.ws.rs.PathParam;
import javax.ws.rs.Produces;
import javax.ws.rs.core.MediaType;

import org.apache.felix.scr.annotations.Component;
import org.apache.felix.scr.annotations.Reference;
import org.apache.felix.scr.annotations.ReferenceCardinality;
import org.apache.felix.scr.annotations.Service;

import cobiscorp.ecobis.commons.dto.ServiceRequestTO;
import cobiscorp.ecobis.commons.dto.ServiceResponseTO;
import cobiscorp.ecobis.cts.integration.services.ICTSServiceIntegration;
import cobiscorp.ecobis.ucsp.request.dto.AverageBalanceClientRequest;
import cobiscorp.ecobis.ucsp.request.dto.QueryClientByParametersNextRequest;
import cobiscorp.ecobis.ucsp.request.dto.QueryClientReferencesRequest;
import cobiscorp.ecobis.ucsp.request.dto.QueryLegalInformationRequest;
import cobiscorp.ecobis.ucsp.request.dto.QueryLegalRelationshipsRequest;
import cobiscorp.ecobis.ucsp.request.dto.QueryPartnersRequest;
import cobiscorp.ecobis.ucsp.service.IClientService;

import com.cobiscorp.cobis.commons.log.ILogger;
import com.cobiscorp.cobis.commons.log.LogFactory;
import com.cobiscorp.cobis.web.services.commons.model.ServiceResponse;
import com.cobiscorp.cobis.web.services.commons.utils.ServiceBase;
import com.cobiscorp.ecobis.customer.commons.dto.SearchCustomerDTO;
import com.cobiscorp.ecobis.customer.commons.dto.SearchGroupDTO;

@Path("/cobis/web/clientviewer/ClientService")
@Component
@Service({ IClientService.class })
public class ClientService extends ServiceBase implements IClientService {

	@Reference(bind = "setServiceIntegration", unbind = "unsetServiceIntegration", cardinality = ReferenceCardinality.MANDATORY_UNARY)
	private ICTSServiceIntegration serviceIntegration;

	private ILogger logger = LogFactory.getLogger(ClientService.class);

	private static final String AVERAGEBALANCECLIENT_SERVICE_ID = "UCSP.Client.AverageBalanceClient";

	/*
	 * (non-Javadoc)
	 * 
	 * @see
	 * cobiscorp.ecobis.ucsp.service.IClientService#averageBalanceClient(cobiscorp
	 * .ecobis.ucsp.request.dto.AverageBalanceClientRequest)
	 */
	@Override
	@PUT
	@Path("/averageBalanceClient")
	@Produces(MediaType.APPLICATION_JSON)
	@Consumes(MediaType.APPLICATION_JSON)
	public ServiceResponse averageBalanceClient(
			AverageBalanceClientRequest averageBalanceClientParam) {
		try {
			if (logger.isDebugEnabled()) {
				logger.logDebug("averageBalanceClient start");
			}

			ServiceRequestTO serviceRequest = new ServiceRequestTO();
			serviceRequest.addValue("inInputClientConsultation",
					averageBalanceClientParam.getInInputClientConsultation());

			return this.execute(serviceIntegration, logger,
					AVERAGEBALANCECLIENT_SERVICE_ID, serviceRequest);
		} catch (Exception ex) {
			return this.manageException(ex, logger);
		}
	}

	private static final String QUERYCLIENT_SERVICE_ID = "ClientViewer.Client.QueryClient";// "UCSP.Client.QueryClient";

	/*
	 * (non-Javadoc)
	 * 
	 * @see
	 * cobiscorp.ecobis.ucsp.service.IClientService#queryClient(java.lang.Integer
	 * )
	 */
	@Override
	@PUT
	@Path("/queryClient/{customerCode}")
	@Produces(MediaType.APPLICATION_JSON)
	@Consumes(MediaType.APPLICATION_JSON)
	public ServiceResponse queryClient(
			@PathParam("customerCode") Integer customerCode) {
		try {
			if (logger.isDebugEnabled()) {
				logger.logDebug("queryClient start");
			}

			return this.execute(serviceIntegration, logger,
					QUERYCLIENT_SERVICE_ID, new Object[] { customerCode });
		} catch (Exception ex) {
			return this.manageException(ex, logger);
		}
	}

	private static final String QUERYCLIENTBYPARAMETERS_SERVICE_ID = "ClientViewer.Client.QueryClientByParameters"; // "UCSP.Client.QueryClientByParameters";

	/*
	 * (non-Javadoc)
	 * 
	 * @see
	 * cobiscorp.ecobis.ucsp.service.IClientService#queryClientByParameters(
	 * com.cobiscorp.ecobis.customer.dto.SearchCustomerDTO)
	 */
	@Override
	@PUT
	@Path("/queryClientByParameters")
	@Produces(MediaType.APPLICATION_JSON)
	@Consumes(MediaType.APPLICATION_JSON)
	public ServiceResponse queryClientByParameters(
			SearchCustomerDTO searchCustomer) {
		try {
			if (logger.isDebugEnabled()) {
				logger.logDebug("queryClientByParameters start");
			}

			return this.execute(serviceIntegration, logger,
					QUERYCLIENTBYPARAMETERS_SERVICE_ID,
					new Object[] { searchCustomer });
		} catch (Exception ex) {
			return this.manageException(ex, logger);
		}
	}

	private static final String QUERYCLIENTBYPARAMETERSNEXT_SERVICE_ID = "UCSP.Client.QueryClientByParametersNext";

	/*
	 * (non-Javadoc)
	 * 
	 * @see
	 * cobiscorp.ecobis.ucsp.service.IClientService#queryClientByParametersNext
	 * (cobiscorp.ecobis.ucsp.request.dto.QueryClientByParametersNextRequest)
	 */
	@Override
	@PUT
	@Path("/queryClientByParametersNext")
	@Produces(MediaType.APPLICATION_JSON)
	@Consumes(MediaType.APPLICATION_JSON)
	public ServiceResponse queryClientByParametersNext(
			QueryClientByParametersNextRequest queryClientByParametersNextParam) {
		try {
			if (logger.isDebugEnabled()) {
				logger.logDebug("queryClientByParametersNext start");
			}

			ServiceRequestTO serviceRequest = new ServiceRequestTO();
			serviceRequest.addValue("inInputClientConsultation",
					queryClientByParametersNextParam
							.getInInputClientConsultation());

			return this.execute(serviceIntegration, logger,
					QUERYCLIENTBYPARAMETERSNEXT_SERVICE_ID, serviceRequest);
		} catch (Exception ex) {
			return this.manageException(ex, logger);
		}
	}

	private static final String QUERYCLIENTDIRECTIONS_SERVICE_ID = "ClientViewer.Client.QueryClientDirections";// "UCSP.Client.QueryClientDirections";

	/*
	 * (non-Javadoc)
	 * 
	 * @see
	 * cobiscorp.ecobis.ucsp.service.IClientService#queryClientDirections(java
	 * .lang.Integer)
	 */
	@Override
	@PUT
	@Path("/queryClientDirections/{customerCode}")
	@Produces(MediaType.APPLICATION_JSON)
	@Consumes(MediaType.APPLICATION_JSON)
	public ServiceResponse queryClientDirections(
			@PathParam("customerCode") Integer customerCode) {
		try {
			if (logger.isDebugEnabled()) {
				logger.logDebug("queryClientDirections start");
			}

			return this.execute(serviceIntegration, logger,
					QUERYCLIENTDIRECTIONS_SERVICE_ID,
					new Object[] { customerCode });
		} catch (Exception ex) {
			return this.manageException(ex, logger);
		}
	}

	private static final String QUERYCLIENTRATE_SERVICE_ID = "ClientViewer.Client.QueryClientRate"; // "UCSP.Client.QueryClientRate";

	/*
	 * (non-Javadoc)
	 * 
	 * @see
	 * cobiscorp.ecobis.ucsp.service.IClientService#queryClientRate(java.lang
	 * .Integer)
	 */
	@Override
	@PUT
	@Path("/queryClientRate/{customerCode}")
	@Produces(MediaType.APPLICATION_JSON)
	@Consumes(MediaType.APPLICATION_JSON)
	public ServiceResponse queryClientRate(
			@PathParam("customerCode") Integer customerCode) {
		try {
			if (logger.isDebugEnabled()) {
				logger.logDebug("queryClientRate start");
			}

			return this.execute(serviceIntegration, logger,
					QUERYCLIENTRATE_SERVICE_ID, new Object[] { customerCode });
		} catch (Exception ex) {
			return this.manageException(ex, logger);
		}
	}

	private static final String QUERYCLIENTREFERENCES_SERVICE_ID = "UCSP.Client.QueryClientReferences";

	/*
	 * (non-Javadoc)
	 * 
	 * @see
	 * cobiscorp.ecobis.ucsp.service.IClientService#queryClientReferences(cobiscorp
	 * .ecobis.ucsp.request.dto.QueryClientReferencesRequest)
	 */
	@Override
	@PUT
	@Path("/queryClientReferences")
	@Produces(MediaType.APPLICATION_JSON)
	@Consumes(MediaType.APPLICATION_JSON)
	public ServiceResponse queryClientReferences(
			QueryClientReferencesRequest queryClientReferencesParam) {
		try {
			if (logger.isDebugEnabled()) {
				logger.logDebug("queryClientReferences start");
			}

			ServiceRequestTO serviceRequest = new ServiceRequestTO();
			serviceRequest.addValue("inInputClientReferencesConsultation",
					queryClientReferencesParam
							.getInInputClientReferencesConsultation());

			return this.execute(serviceIntegration, logger,
					QUERYCLIENTREFERENCES_SERVICE_ID, serviceRequest);
		} catch (Exception ex) {
			return this.manageException(ex, logger);
		}
	}

	private static final String QUERYCLIENTTYPE_SERVICE_ID = "ClientViewer.Client.QueryClientType";// "UCSP.Client.QueryClientType";

	/*
	 * (non-Javadoc)
	 * 
	 * @see
	 * cobiscorp.ecobis.ucsp.service.IClientService#queryClientType(java.lang
	 * .Integer)
	 */
	@Override
	@PUT
	@Path("/queryClientType/{customerCode}")
	@Produces(MediaType.APPLICATION_JSON)
	@Consumes(MediaType.APPLICATION_JSON)
	public ServiceResponse queryClientType(
			@PathParam("customerCode") Integer customerCode) {
		try {
			if (logger.isDebugEnabled()) {
				logger.logDebug("queryClientType start");
			}

			return this.execute(serviceIntegration, logger,
					QUERYCLIENTTYPE_SERVICE_ID, new Object[] { customerCode });
		} catch (Exception ex) {
			return this.manageException(ex, logger);
		}
	}

	private static final String QUERYCONSOLIDATEDPOSITION_SERVICE_ID = "ClientViewer.Client.QueryConsolidatedPosition";// "UCSP.Client.QueryConsolidatedPosition";

	/*
	 * (non-Javadoc)
	 * 
	 * @see
	 * cobiscorp.ecobis.ucsp.service.IClientService#queryConsolidatedPosition
	 * (java.lang.Integer)
	 */
	@Override
	@PUT
	@Path("/queryConsolidatedPosition/{customerCode}")
	@Produces(MediaType.APPLICATION_JSON)
	@Consumes(MediaType.APPLICATION_JSON)
	public ServiceResponse queryConsolidatedPosition(
			@PathParam("customerCode") Integer customerCode) {
		try {
			if (logger.isDebugEnabled()) {
				logger.logDebug("queryConsolidatedPosition start");
			}

			return this.execute(serviceIntegration, logger,
					QUERYCONSOLIDATEDPOSITION_SERVICE_ID,
					new Object[] { customerCode });
		} catch (Exception ex) {
			return this.manageException(ex, logger);
		}
	}

	private static final String QUERYGROUP_SERVICE_ID = "ClientViewer.Client.QueryGroup";// "UCSP.Client.QueryGroup";

	/*
	 * (non-Javadoc)
	 * 
	 * @see
	 * cobiscorp.ecobis.ucsp.service.IClientService#queryGroup(com.cobiscorp
	 * .ecobis.customer.dto.SearchGroupDTO)
	 */
	@Override
	@PUT
	@Path("/queryGroup")
	@Produces(MediaType.APPLICATION_JSON)
	@Consumes(MediaType.APPLICATION_JSON)
	public ServiceResponse queryGroup(SearchGroupDTO searchGroup) {

		try {
			if (logger.isDebugEnabled()) {
				logger.logDebug("queryGroup start");
			}

			return this.execute(serviceIntegration, logger,
					QUERYGROUP_SERVICE_ID, new Object[] { searchGroup });
		} catch (Exception ex) {
			return this.manageException(ex, logger);
		}
	}

	private static final String QUERYGROUPDETAIL_SERVICE_ID = "ClientViewer.Client.QueryGroupDetail";// "UCSP.Client.QueryGroupDetail";

	/*
	 * (non-Javadoc)
	 * 
	 * @see
	 * cobiscorp.ecobis.ucsp.service.IClientService#queryGroupDetail(java.lang
	 * .Integer)
	 */
	@Override
	@PUT
	@Path("/queryGroupDetail/{groupCode}")
	@Produces(MediaType.APPLICATION_JSON)
	@Consumes(MediaType.APPLICATION_JSON)
	public ServiceResponse queryGroupDetail(
			@PathParam("groupCode") Integer groupCode) {
		try {
			if (logger.isDebugEnabled()) {
				logger.logDebug("queryGroupDetail start");
			}

			return this.execute(serviceIntegration, logger,
					QUERYGROUPDETAIL_SERVICE_ID, new Object[] { groupCode });
		} catch (Exception ex) {
			return this.manageException(ex, logger);
		}
	}

	private static final String QUERYGROUPMEMBERS_SERVICE_ID = "ClientViewer.Client.QueryGroupMembers"; // "UCSP.Client.QueryGroupMembers";

	/*
	 * (non-Javadoc)
	 * 
	 * @see
	 * cobiscorp.ecobis.ucsp.service.IClientService#queryGroupMembers(java.lang
	 * .Integer)
	 */
	@Override
	@PUT
	@Path("/queryGroupMembers/{groupCode}")
	@Produces(MediaType.APPLICATION_JSON)
	@Consumes(MediaType.APPLICATION_JSON)
	public ServiceResponse queryGroupMembers(
			@PathParam("groupCode") Integer groupCode) {
		try {
			if (logger.isDebugEnabled()) {
				logger.logDebug("queryGroupMembers start");
			}

			return this.execute(serviceIntegration, logger,
					QUERYGROUPMEMBERS_SERVICE_ID, new Object[] { groupCode });
		} catch (Exception ex) {
			return this.manageException(ex, logger);
		}
	}

	private static final String QUERYLEGALCLIENT_SERVICE_ID = "ClientViewer.Client.QueryLegalClient";// "UCSP.Client.QueryLegalClient";

	/*
	 * (non-Javadoc)
	 * 
	 * @see
	 * cobiscorp.ecobis.ucsp.service.IClientService#queryLegalClient(java.lang
	 * .Integer)
	 */
	@Override
	@PUT
	@Path("/queryLegalClient/{customerCode}")
	@Produces(MediaType.APPLICATION_JSON)
	@Consumes(MediaType.APPLICATION_JSON)
	public ServiceResponse queryLegalClient(
			@PathParam("customerCode") Integer customerCode) {
		try {
			if (logger.isDebugEnabled()) {
				logger.logDebug("queryLegalClient start");
			}

			return this.execute(serviceIntegration, logger,
					QUERYLEGALCLIENT_SERVICE_ID, new Object[] { customerCode });
		} catch (Exception ex) {
			return this.manageException(ex, logger);
		}
	}

	private static final String QUERYLEGALINFORMATION_SERVICE_ID = "UCSP.Client.QueryLegalInformation";

	/*
	 * (non-Javadoc)
	 * 
	 * @see
	 * cobiscorp.ecobis.ucsp.service.IClientService#queryLegalInformation(cobiscorp
	 * .ecobis.ucsp.request.dto.QueryLegalInformationRequest)
	 */
	@Override
	@PUT
	@Path("/queryLegalInformation")
	@Produces(MediaType.APPLICATION_JSON)
	@Consumes(MediaType.APPLICATION_JSON)
	public ServiceResponse queryLegalInformation(
			QueryLegalInformationRequest queryLegalInformationParam) {
		try {
			if (logger.isDebugEnabled()) {
				logger.logDebug("queryLegalInformation start");
			}

			ServiceRequestTO serviceRequest = new ServiceRequestTO();
			serviceRequest.addValue("inInputClientConsultation",
					queryLegalInformationParam.getInInputClientConsultation());

			return this.execute(serviceIntegration, logger,
					QUERYLEGALINFORMATION_SERVICE_ID, serviceRequest);
		} catch (Exception ex) {
			return this.manageException(ex, logger);
		}
	}

	private static final String QUERYLEGALRELATIONSHIPS_SERVICE_ID = "UCSP.Client.QueryLegalRelationships";

	/*
	 * (non-Javadoc)
	 * 
	 * @see
	 * cobiscorp.ecobis.ucsp.service.IClientService#queryLegalRelationships(
	 * cobiscorp.ecobis.ucsp.request.dto.QueryLegalRelationshipsRequest)
	 */
	@Override
	@PUT
	@Path("/queryLegalRelationships")
	@Produces(MediaType.APPLICATION_JSON)
	@Consumes(MediaType.APPLICATION_JSON)
	public ServiceResponse queryLegalRelationships(
			QueryLegalRelationshipsRequest queryLegalRelationshipsParam) {
		try {
			if (logger.isDebugEnabled()) {
				logger.logDebug("queryLegalRelationships start");
			}

			ServiceRequestTO serviceRequest = new ServiceRequestTO();
			serviceRequest
					.addValue("inInputClientConsultation",
							queryLegalRelationshipsParam
									.getInInputClientConsultation());

			return this.execute(serviceIntegration, logger,
					QUERYLEGALRELATIONSHIPS_SERVICE_ID, serviceRequest);
		} catch (Exception ex) {
			return this.manageException(ex, logger);
		}
	}

	private static final String QUERYPARTNERS_SERVICE_ID = "UCSP.Client.QueryPartners";

	/*
	 * (non-Javadoc)
	 * 
	 * @see
	 * cobiscorp.ecobis.ucsp.service.IClientService#queryPartners(cobiscorp.
	 * ecobis.ucsp.request.dto.QueryPartnersRequest)
	 */
	@Override
	@PUT
	@Path("/queryPartners")
	@Produces(MediaType.APPLICATION_JSON)
	@Consumes(MediaType.APPLICATION_JSON)
	public ServiceResponse queryPartners(QueryPartnersRequest queryPartnersParam) {
		try {
			if (logger.isDebugEnabled()) {
				logger.logDebug("queryPartners start");
			}

			ServiceRequestTO serviceRequest = new ServiceRequestTO();
			serviceRequest.addValue("inInputClientConsultation",
					queryPartnersParam.getInInputClientConsultation());

			return this.execute(serviceIntegration, logger,
					QUERYPARTNERS_SERVICE_ID, serviceRequest);
		} catch (Exception ex) {
			return this.manageException(ex, logger);
		}
	}	

	/**
	 * Method that set the instance of ICTSServiceIntegration
	 * 
	 * @param serviceIntegration
	 *            Instance of ICTSServiceIntegration
	 */
	public void setServiceIntegration(ICTSServiceIntegration serviceIntegration) {
		this.serviceIntegration = serviceIntegration;
	}

	/**
	 * Method that unset the instance of ICTSServiceIntegration
	 * 
	 * @param serviceIntegration
	 *            Instance of ICTSServiceIntegration
	 */
	public void unsetServiceIntegration(
			ICTSServiceIntegration serviceIntegration) {
		this.serviceIntegration = null;
	}

}