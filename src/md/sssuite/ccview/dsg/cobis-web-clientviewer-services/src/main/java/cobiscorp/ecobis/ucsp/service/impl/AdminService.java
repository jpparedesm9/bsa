/************************************************************/
/*                     IMPORTANTE                           */
/*   Esta aplicacion es parte de los  paquetes bancarios    */
/*   propiedad de COBISCORP.                                */
/*   Su uso no autorizado queda  expresamente  prohibido    */
/*   asi como cualquier alteracion o agregado hecho  por    */
/*   alguno de sus usuarios sin el debido consentimiento    */
/*   por escrito de COBISCORP.                              */
/*   Este programa esta protegido por la ley de derechos    */
/*   de autor y por las y por las convenciones              */
/*   internacionales de  propiedad intelectual. Su uso no   */
/*   autorizado dara  derecho a  COBISCORP para obtener     */
/*   ordenes de  secuestro o retencion y  para perseguir    */
/*   penalmente a los autores de cualquier infraccion.      */
/************************************************************/
/*   This code was generated by CEN-SG.                     */
/*   Changes to this file may cause incorrect behavior      */
/*   and will be lost if the code is regenerated.           */
/************************************************************/

package cobiscorp.ecobis.ucsp.service.impl;

import javax.ws.rs.Consumes;
import javax.ws.rs.PUT;
import javax.ws.rs.Path;
import javax.ws.rs.Produces;
import javax.ws.rs.core.MediaType;
import org.apache.felix.scr.annotations.Component;
import org.apache.felix.scr.annotations.Reference;
import org.apache.felix.scr.annotations.ReferenceCardinality;
import org.apache.felix.scr.annotations.Service;
import cobiscorp.ecobis.cts.integration.services.ICTSServiceIntegration;
import com.cobiscorp.cobis.commons.log.ILogger;
import com.cobiscorp.cobis.commons.log.LogFactory;
import com.cobiscorp.cobis.web.services.commons.model.ServiceResponse;
import com.cobiscorp.cobis.web.services.commons.utils.ServiceBase;

import cobiscorp.ecobis.commons.dto.ServiceRequestTO;
import cobiscorp.ecobis.ucsp.request.dto.*;
import cobiscorp.ecobis.ucsp.service.IAdminService;

//@Path("/cobiscorp/ecobis/ucsp/service/impl/AdminService")
@Path("/cobis/web/clientviewer/AdminService")
@Component
@Service({ IAdminService.class })
public class AdminService extends ServiceBase implements IAdminService {

	@Reference(bind = "setServiceIntegration", unbind = "unsetServiceIntegration", cardinality = ReferenceCardinality.MANDATORY_UNARY)
	private ICTSServiceIntegration serviceIntegration;

	private ILogger logger = LogFactory.getLogger(AdminService.class);

	private static final String DELETEPARAMETER_SERVICE_ID = "UCSP.Admin.DeleteParameter";

	@Override
	@PUT
	@Path("/deleteParameter")
	@Produces(MediaType.APPLICATION_JSON)
	@Consumes(MediaType.APPLICATION_JSON)
	public ServiceResponse deleteParameter(
			DeleteParameterRequest deleteParameterParam) {
		try {
			if (logger.isDebugEnabled()) {
				logger.logDebug("deleteParameter start");
			}

			ServiceRequestTO serviceRequest = new ServiceRequestTO();
			serviceRequest.addValue("inBplViewParameter",
					deleteParameterParam.getInBplViewParameter());

			return this.execute(serviceIntegration, logger,
					DELETEPARAMETER_SERVICE_ID, serviceRequest);
		} catch (Exception ex) {
			return this.manageException(ex, logger);
		}
	}

	private static final String DELETEPRODUCTFUNCIONALITY_SERVICE_ID = "UCSP.Admin.DeleteProductFuncionality";

	@Override
	@PUT
	@Path("/deleteProductFuncionality")
	@Produces(MediaType.APPLICATION_JSON)
	@Consumes(MediaType.APPLICATION_JSON)
	public ServiceResponse deleteProductFuncionality(
			DeleteProductFuncionalityRequest deleteProductFuncionalityParam) {
		try {
			if (logger.isDebugEnabled()) {
				logger.logDebug("deleteProductFuncionality start");
			}

			ServiceRequestTO serviceRequest = new ServiceRequestTO();
			serviceRequest.addValue("inBplView",
					deleteProductFuncionalityParam.getInBplView());

			return this.execute(serviceIntegration, logger,
					DELETEPRODUCTFUNCIONALITY_SERVICE_ID, serviceRequest);
		} catch (Exception ex) {
			return this.manageException(ex, logger);
		}
	}

	private static final String INSERTPARAMETER_SERVICE_ID = "UCSP.Admin.InsertParameter";

	@Override
	@PUT
	@Path("/insertParameter")
	@Produces(MediaType.APPLICATION_JSON)
	@Consumes(MediaType.APPLICATION_JSON)
	public ServiceResponse insertParameter(
			InsertParameterRequest insertParameterParam) {
		try {
			if (logger.isDebugEnabled()) {
				logger.logDebug("insertParameter start");
			}

			ServiceRequestTO serviceRequest = new ServiceRequestTO();
			serviceRequest.addValue("inBplViewParameter",
					insertParameterParam.getInBplViewParameter());

			return this.execute(serviceIntegration, logger,
					INSERTPARAMETER_SERVICE_ID, serviceRequest);
		} catch (Exception ex) {
			return this.manageException(ex, logger);
		}
	}

	private static final String INSERTPARAMETERVALUE_SERVICE_ID = "UCSP.Admin.InsertParameterValue";

	@Override
	@PUT
	@Path("/insertParameterValue")
	@Produces(MediaType.APPLICATION_JSON)
	@Consumes(MediaType.APPLICATION_JSON)
	public ServiceResponse insertParameterValue(
			InsertParameterValueRequest insertParameterValueParam) {
		try {
			if (logger.isDebugEnabled()) {
				logger.logDebug("insertParameterValue start");
			}

			ServiceRequestTO serviceRequest = new ServiceRequestTO();
			serviceRequest.addValue("inBplParameterValue",
					insertParameterValueParam.getInBplParameterValue());

			return this.execute(serviceIntegration, logger,
					INSERTPARAMETERVALUE_SERVICE_ID, serviceRequest);
		} catch (Exception ex) {
			return this.manageException(ex, logger);
		}
	}

	private static final String INSERTPRODUCTFUNCIONALITY_SERVICE_ID = "UCSP.Admin.InsertFuncionalityInProduct";

	@Override
	@PUT
	@Path("/insertProductFuncionality")
	@Produces(MediaType.APPLICATION_JSON)
	@Consumes(MediaType.APPLICATION_JSON)
	public ServiceResponse insertProductFuncionality(
			InsertProductFuncionalityRequest insertProductFuncionalityParam) {
		try {
			if (logger.isDebugEnabled()) {
				logger.logDebug("insertProductFuncionality start");
			}

			ServiceRequestTO serviceRequest = new ServiceRequestTO();
			serviceRequest.addValue("inBplAnPageView",
					insertProductFuncionalityParam.getInBplAnPageView());
			serviceRequest.addValue("inBplProduct",
					insertProductFuncionalityParam.getInBplProduct());
			serviceRequest.addValue("inBplView",
					insertProductFuncionalityParam.getInBplView());

			return this.execute(serviceIntegration, logger,
					INSERTPRODUCTFUNCIONALITY_SERVICE_ID, serviceRequest);
		} catch (Exception ex) {
			return this.manageException(ex, logger);
		}
	}

	private static final String QUERYFUNCIONALITIESATTACHED_SERVICE_ID = "UCSP.Admin.QueryFuncionalitiesAttached";

	@Override
	@PUT
	@Path("/queryFuncionalitiesAttached")
	@Produces(MediaType.APPLICATION_JSON)
	@Consumes(MediaType.APPLICATION_JSON)
	public ServiceResponse queryFuncionalitiesAttached(
			QueryFuncionalitiesAttachedRequest queryFuncionalitiesAttachedParam) {
		try {
			if (logger.isDebugEnabled()) {
				logger.logDebug("queryFuncionalitiesAttached start");
			}

			ServiceRequestTO serviceRequest = new ServiceRequestTO();
			serviceRequest.addValue("inBplProduct",
					queryFuncionalitiesAttachedParam.getInBplProduct());

			return this.execute(serviceIntegration, logger,
					QUERYFUNCIONALITIESATTACHED_SERVICE_ID, serviceRequest);
		} catch (Exception ex) {
			return this.manageException(ex, logger);
		}
	}

	private static final String QUERYFUNCIONALITIESBYPRODUCT_SERVICE_ID = "UCSP.Admin.QueryFuncionalitiesByProduct";

	@Override
	@PUT
	@Path("/queryFuncionalitiesByProduct")
	@Produces(MediaType.APPLICATION_JSON)
	@Consumes(MediaType.APPLICATION_JSON)
	public ServiceResponse queryFuncionalitiesByProduct(
			QueryFuncionalitiesByProductRequest queryFuncionalitiesByProductParam) {
		try {
			if (logger.isDebugEnabled()) {
				logger.logDebug("queryFuncionalitiesByProduct start");
			}

			ServiceRequestTO serviceRequest = new ServiceRequestTO();
			serviceRequest.addValue("inBplProduct",
					queryFuncionalitiesByProductParam.getInBplProduct());

			return this.execute(serviceIntegration, logger,
					QUERYFUNCIONALITIESBYPRODUCT_SERVICE_ID, serviceRequest);
		} catch (Exception ex) {
			return this.manageException(ex, logger);
		}
	}

	private static final String QUERYPARAMETERSANDVALUES_SERVICE_ID = "UCSP.Admin.QueryParametersAndValues";

	@Override
	@PUT
	@Path("/queryParametersAndValues")
	@Produces(MediaType.APPLICATION_JSON)
	@Consumes(MediaType.APPLICATION_JSON)
	public ServiceResponse queryParametersAndValues(
			QueryParametersAndValuesRequest queryParametersAndValuesParam) {
		try {
			if (logger.isDebugEnabled()) {
				logger.logDebug("queryParametersAndValues start");
			}

			ServiceRequestTO serviceRequest = new ServiceRequestTO();
			serviceRequest.addValue("inBplView",
					queryParametersAndValuesParam.getInBplView());

			return this.execute(serviceIntegration, logger,
					QUERYPARAMETERSANDVALUES_SERVICE_ID, serviceRequest);
		} catch (Exception ex) {
			return this.manageException(ex, logger);
		}
	}

	private static final String QUERYPRODUCTS_SERVICE_ID = "UCSP.Admin.QueryProducts";

	@Override
	@PUT
	@Path("/queryProducts")
	@Produces(MediaType.APPLICATION_JSON)
	@Consumes(MediaType.APPLICATION_JSON)
	public ServiceResponse queryProducts(QueryProductsRequest queryProductsParam) {
		try {
			if (logger.isDebugEnabled()) {
				logger.logDebug("queryProducts start");
			}

			ServiceRequestTO serviceRequest = new ServiceRequestTO();
			serviceRequest.addValue("inBplProduct",
					queryProductsParam.getInBplProduct());

			return this.execute(serviceIntegration, logger,
					QUERYPRODUCTS_SERVICE_ID, serviceRequest);
		} catch (Exception ex) {
			return this.manageException(ex, logger);
		}
	}

	private static final String UPDATEPARAMETER_SERVICE_ID = "UCSP.Admin.UpdateParameter";

	@Override
	@PUT
	@Path("/updateParameter")
	@Produces(MediaType.APPLICATION_JSON)
	@Consumes(MediaType.APPLICATION_JSON)
	public ServiceResponse updateParameter(
			UpdateParameterRequest updateParameterParam) {
		try {
			if (logger.isDebugEnabled()) {
				logger.logDebug("updateParameter start");
			}

			ServiceRequestTO serviceRequest = new ServiceRequestTO();
			serviceRequest.addValue("inBplViewParameter",
					updateParameterParam.getInBplViewParameter());

			return this.execute(serviceIntegration, logger,
					UPDATEPARAMETER_SERVICE_ID, serviceRequest);
		} catch (Exception ex) {
			return this.manageException(ex, logger);
		}
	}

	private static final String UPDATEPARAMETERVALUE_SERVICE_ID = "UCSP.Admin.UpdateParameterValue";

	@Override
	@PUT
	@Path("/updateParameterValue")
	@Produces(MediaType.APPLICATION_JSON)
	@Consumes(MediaType.APPLICATION_JSON)
	public ServiceResponse updateParameterValue(
			UpdateParameterValueRequest updateParameterValueParam) {
		try {
			if (logger.isDebugEnabled()) {
				logger.logDebug("updateParameterValue start");
			}

			ServiceRequestTO serviceRequest = new ServiceRequestTO();
			serviceRequest.addValue("inBplParameterValue",
					updateParameterValueParam.getInBplParameterValue());

			return this.execute(serviceIntegration, logger,
					UPDATEPARAMETERVALUE_SERVICE_ID, serviceRequest);
		} catch (Exception ex) {
			return this.manageException(ex, logger);
		}
	}

	/**
	 * Method that set the instance of ICTSServiceIntegration
	 * 
	 * @param serviceIntegration
	 *            Instance of ICTSServiceIntegration
	 */
	public void setServiceIntegration(ICTSServiceIntegration serviceIntegration) {
		this.serviceIntegration = serviceIntegration;
	}

	/**
	 * Method that unset the instance of ICTSServiceIntegration
	 * 
	 * @param serviceIntegration
	 *            Instance of ICTSServiceIntegration
	 */
	public void unsetServiceIntegration(
			ICTSServiceIntegration serviceIntegration) {
		this.serviceIntegration = null;
	}

}