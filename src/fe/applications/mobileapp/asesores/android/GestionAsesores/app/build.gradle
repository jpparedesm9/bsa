apply plugin: 'com.android.application'

//semantic version
def versionMajor = 1
def versionMinor = 4
def versionPatch = 0
def versionBuild = 1

android {
    signingConfigs {
        config {
            keyAlias 'tuiio'
            keyPassword 'bYQrb9re'
            storeFile file('./cobiscorp.jks')
            storePassword 'bYQrb9re'
        }
    }
    compileSdkVersion 27
    buildToolsVersion '27.0.3'
    defaultConfig {
        applicationId "com.cobis.gestionasesores"
        minSdkVersion 21
        targetSdkVersion 27
        multiDexEnabled true
        versionCode = getVersionCode(versionMajor, versionMinor, versionPatch, versionBuild)
        versionName = "${versionMajor}.${versionMinor}.${versionPatch}"
        vectorDrawables.useSupportLibrary true
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        buildConfigField("String", "MAP_API_KEY", "\"${map_api_key}\"")
        buildConfigField("String", "SMTP_SERVER", "\"${smtp_server}\"")
        buildConfigField("String", "COMMENTS_FROM", "\"${comments_from}\"")
        externalNativeBuild {
            cmake {
                cppFlags "-std=c++11"
            }
        }
    }
    packagingOptions {
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/MANIFEST'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/MANIFEST.MF'
    }
    buildTypes {
            debug {
                minifyEnabled false
                buildConfigField("boolean", "STORE", "false")
                buildConfigField("String", "USER", "\"${dev_user}\"")
                buildConfigField("String", "PASSWORD", "\"${dev_password}\"")
                buildConfigField("String", "IMEI", "\"${dev_imei}\"")
                signingConfig signingConfigs.config
            }
        quality{
            minifyEnabled true
            shrinkResources = true
            debuggable false
            proguardFiles 'proguard-butterknife.pro'
            proguardFiles 'proguard-google-analytics.pro'
            proguardFiles 'proguard-google-play-services.pro'
            proguardFiles 'proguard-gson.pro'
            proguardFiles 'proguard-mail.pro'
            proguardFiles 'proguard-picasso.pro'
            proguardFiles 'proguard-rules.pro'
            proguardFiles 'proguard-rx-java.pro'
            proguardFiles 'proguard-sqlite.pro'
            proguardFiles 'proguard-square-okhttp3.pro'
            proguardFiles 'proguard-support-design.pro'
            proguardFiles 'proguard-support-v7-appcompat.pro'
            proguardFiles 'proguard-support-v7-cardview.pro'
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            applicationVariants.all { variant ->
                renameAPK(variant, defaultConfig)
            }
            buildConfigField("boolean", "STORE", "false")
            buildConfigField("String", "USER", "\"\"")
            buildConfigField("String", "PASSWORD", "\"\"")
            buildConfigField("String", "IMEI", "\"\"")
            signingConfig signingConfigs.config
        }
        release {
            initWith quality
            buildConfigField("boolean", "STORE", "true")
        }
    }
    externalNativeBuild {
        cmake {
            path "CMakeLists.txt"
        }
    }
    flavorDimensions "default"
    productFlavors{
        dev{
            dimension "default"
            applicationIdSuffix ".dev"
            resValue "string", "app_name", "Asesor Móvil (dev)"
            buildConfigField("String", "ENVIRONMENT_DEV", "\"${environment_dev}\"")
            buildConfigField("String", "ENVIRONMENT_SAFE", "\"${environment_safe}\"")
            buildConfigField("String", "ENVIRONMENT_DEV_COBIS", "\"${environment_dev_cobis}\"")
            buildConfigField("String", "ENVIRONMENT_SUSTAINING", "\"${environment_sustaining}\"")
            buildConfigField("String", "ENVIRONMENT_SUSTAINING_2", "\"${environment_sustaining_2}\"")
            buildConfigField("String", "ENVIRONMENT_TEST", "\"${environment_test}\"")
            buildConfigField("String", "ENVIRONMENT_TEST_COBIS", "\"${environment_test_cobis}\"")
            buildConfigField("String", "ENVIRONMENT_PROD", "\"${environment_dev_cobis}\"")
            buildConfigField("String", "ENVIRONMENT_DRP", "\"${environment_dev2}\"")
            buildConfigField("String[]", "COMMENTS_TO", "${comments_to_dev}")
            externalNativeBuild.cmake {
                cppFlags '-DDEV'
            }
        }
        sust{
            dimension "default"
            applicationIdSuffix ".sust"
            resValue "string", "app_name", "Asesor Móvil (sust)"
            buildConfigField("String", "ENVIRONMENT_SUSTAINING", "\"${environment_sustaining}\"")
            buildConfigField("String", "ENVIRONMENT_SUSTAINING_2", "\"${environment_sustaining_2}\"")
            buildConfigField("String", "ENVIRONMENT_PROD", "\"${environment_sustaining_2}\"")
            buildConfigField("String", "ENVIRONMENT_DRP", "\"${environment_prod_drp}\"")
            buildConfigField("String[]", "COMMENTS_TO", "${comments_to_dev}")
            externalNativeBuild.cmake {
                cppFlags '-DSUST'
            }
        }
        prod{
            dimension "default"
            resValue "string", "app_name", "Asesor Móvil"
            buildConfigField("String", "ENVIRONMENT_PROD", "\"${environment_prod}\"")
            buildConfigField("String", "ENVIRONMENT_DRP", "\"${environment_prod_drp}\"")
            buildConfigField("String[]", "COMMENTS_TO", "${comments_to_release}")
            externalNativeBuild.cmake {
                cppFlags '-DPROD'
            }
        }
    }
}

static def renameAPK(variant, defaultConfig) {
    variant.outputs.all { output ->
        outputFileName = "Cobis_v" + defaultConfig.versionName + "(" + defaultConfig.versionCode + ").apk"
    }
}

//gradle function to compute version Code from Major, Minor, Patch and build values
static def getVersionCode(versionMajor, versionMinor, versionPatch, versionBuild) {
    return versionMajor * 100000 + versionMinor * 1000 + versionPatch * 100 + versionBuild
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    androidTestImplementation('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    implementation 'com.android.support:appcompat-v7:27.1.1'
    implementation 'com.android.support:cardview-v7:27.1.1'
    implementation 'com.android.support:design:27.1.1'
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    implementation 'com.bayteq:libCore:2.0.0_rc19'
    implementation 'com.bayteq.generators:DocumentGeneratorMx:1.0.8'
    implementation 'com.jakewharton:butterknife:8.8.1'
    implementation 'com.android.support:support-v4:27.1.1'
    implementation 'io.reactivex.rxjava2:rxandroid:2.1.0'
    implementation 'io.reactivex.rxjava2:rxjava:2.2.4'
    implementation 'com.google.code.gson:gson:2.8.5'
    testImplementation 'junit:junit:4.12'
    annotationProcessor 'com.jakewharton:butterknife-compiler:8.8.1'
    compileOnly 'javax.annotation:jsr250-api:1.0'
    implementation 'com.squareup.picasso:picasso:2.5.2'
    implementation 'com.github.chrisbanes:PhotoView:2.0.0'
    implementation 'com.googlecode.libphonenumber:libphonenumber:8.8.4'
    implementation 'com.squareup.okhttp3:okhttp:3.12.0'
    implementation files('libs/mail.jar')
    implementation files('libs/activation.jar')
    implementation files('libs/additionnal.jar')
    implementation files('libs/winzipaes.jar')
    implementation files('libs/lcrypto-jdk15.jar')
    implementation 'com.google.android.gms:play-services-location:16.0.0'
    implementation 'com.google.android.gms:play-services-maps:16.0.0'
    implementation 'com.android.support:multidex:1.0.3'
    implementation 'net.zetetic:android-database-sqlcipher:3.5.7@aar'
    implementation 'com.scottyab:secure-preferences-lib:0.1.4'
}
