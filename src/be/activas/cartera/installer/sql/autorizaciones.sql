
    /************************************************************/
    /*******************Service Operations Script*********************/
    /************************************************************/
    /*   This code was generated by CEN-SG.                     */
    /*   Changes to this file may cause incorrect behavior      */
    /*   and will be lost if the code is regenerated.           */
    /************************************************************/

    use cobis
    GO
    
      IF EXISTS (SELECT * FROM cts_serv_catalog WHERE csc_service_id = 'Loan.LoanTransaction.QueryLiquidation')
        UPDATE cts_serv_catalog SET csc_class_name = 'cobiscorp.ecobis.assets.cloud.service.ILoanTransaction', csc_method_name = 'queryLiquidation', csc_description = '', csc_trn = 7052 WHERE csc_service_id = 'Loan.LoanTransaction.QueryLiquidation'
      ELSE
        INSERT INTO cts_serv_catalog (csc_service_id, csc_class_name, csc_method_name, csc_description, csc_trn ) VALUES ('Loan.LoanTransaction.QueryLiquidation', 'cobiscorp.ecobis.assets.cloud.service.ILoanTransaction', 'queryLiquidation', '', 7052)
      GO	  
    
	 IF EXISTS (SELECT * FROM cts_serv_catalog WHERE csc_service_id = 'Loan.LoanTransaction.QueryDebtorInformation')
        UPDATE cts_serv_catalog SET csc_class_name = 'cobiscorp.ecobis.assets.cloud.service.ILoanTransaction', csc_method_name = 'queryDebtorInformation', csc_description = '', csc_trn = 7052 WHERE csc_service_id = 'Loan.LoanTransaction.QueryDebtorInformation'
      ELSE
        INSERT INTO cts_serv_catalog (csc_service_id, csc_class_name, csc_method_name, csc_description, csc_trn ) VALUES ('Loan.LoanTransaction.QueryDebtorInformation', 'cobiscorp.ecobis.assets.cloud.service.ILoanTransaction', 'queryDebtorInformation', '', 7052)
      GO
    
	IF EXISTS (SELECT * FROM cts_serv_catalog WHERE csc_service_id = 'Loan.LoanTransaction.QueryPaymentTableDetail')
        UPDATE cts_serv_catalog SET csc_class_name = 'cobiscorp.ecobis.assets.cloud.service.ILoanTransaction', csc_method_name = 'queryPaymentTableDetail', csc_description = '', csc_trn = 7056 WHERE csc_service_id = 'Loan.LoanTransaction.QueryPaymentTableDetail'
      ELSE
        INSERT INTO cts_serv_catalog (csc_service_id, csc_class_name, csc_method_name, csc_description, csc_trn ) VALUES ('Loan.LoanTransaction.QueryPaymentTableDetail', 'cobiscorp.ecobis.assets.cloud.service.ILoanTransaction', 'queryPaymentTableDetail', '', 7056)
      GO
    
      IF EXISTS (SELECT * FROM cts_serv_catalog WHERE csc_service_id = 'Loan.LoanTransaction.QueryPaymentTableDetailsHis')
        UPDATE cts_serv_catalog SET csc_class_name = 'cobiscorp.ecobis.assets.cloud.service.ILoanTransaction', csc_method_name = 'queryPaymentTableDetailsHis', csc_description = '', csc_trn = 7292 WHERE csc_service_id = 'Loan.LoanTransaction.QueryPaymentTableDetailsHis'
      ELSE
        INSERT INTO cts_serv_catalog (csc_service_id, csc_class_name, csc_method_name, csc_description, csc_trn ) VALUES ('Loan.LoanTransaction.QueryPaymentTableDetailsHis', 'cobiscorp.ecobis.assets.cloud.service.ILoanTransaction', 'queryPaymentTableDetailsHis', '', 7292)
      GO
    
      IF EXISTS (SELECT * FROM cts_serv_catalog WHERE csc_service_id = 'Loan.LoanTransaction.QueryPaymentTableHead')
        UPDATE cts_serv_catalog SET csc_class_name = 'cobiscorp.ecobis.assets.cloud.service.ILoanTransaction', csc_method_name = 'queryPaymentTableHead', csc_description = '', csc_trn = 7056 WHERE csc_service_id = 'Loan.LoanTransaction.QueryPaymentTableHead'
      ELSE
        INSERT INTO cts_serv_catalog (csc_service_id, csc_class_name, csc_method_name, csc_description, csc_trn ) VALUES ('Loan.LoanTransaction.QueryPaymentTableHead', 'cobiscorp.ecobis.assets.cloud.service.ILoanTransaction', 'queryPaymentTableHead', '', 7056)
      GO
    
      IF EXISTS (SELECT * FROM cts_serv_catalog WHERE csc_service_id = 'Loan.LoanTransaction.QueryPaymentTableHeadHis')
        UPDATE cts_serv_catalog SET csc_class_name = 'cobiscorp.ecobis.assets.cloud.service.ILoanTransaction', csc_method_name = 'queryPaymentTableHeadHis', csc_description = '', csc_trn = 7292 WHERE csc_service_id = 'Loan.LoanTransaction.QueryPaymentTableHeadHis'
      ELSE
        INSERT INTO cts_serv_catalog (csc_service_id, csc_class_name, csc_method_name, csc_description, csc_trn ) VALUES ('Loan.LoanTransaction.QueryPaymentTableHeadHis', 'cobiscorp.ecobis.assets.cloud.service.ILoanTransaction', 'queryPaymentTableHeadHis', '', 7292)
      GO
	  
	  IF EXISTS (SELECT * FROM cts_serv_catalog WHERE csc_service_id = 'Loan.LoanTransaction.QueryReceiptPayment')
        UPDATE cts_serv_catalog SET csc_class_name = 'cobiscorp.ecobis.assets.cloud.service.ILoanTransaction', csc_method_name = 'queryReceiptPayment', csc_description = '', csc_trn = 7055 WHERE csc_service_id = 'Loan.LoanTransaction.QueryReceiptPayment'
      ELSE
        INSERT INTO cts_serv_catalog (csc_service_id, csc_class_name, csc_method_name, csc_description, csc_trn ) VALUES ('Loan.LoanTransaction.QueryReceiptPayment', 'cobiscorp.ecobis.assets.cloud.service.ILoanTransaction', 'queryReceiptPayment', '', 7055)
      GO
    
	IF EXISTS (SELECT * FROM cts_serv_catalog WHERE csc_service_id = 'Loan.LoanTransaction.QueryReceipPaymentInfo')
        UPDATE cts_serv_catalog SET csc_class_name = 'cobiscorp.ecobis.assets.cloud.service.ILoanTransaction', csc_method_name = 'queryReceiptPaymentInfo', csc_description = '', csc_trn = 7055 WHERE csc_service_id = 'Loan.LoanTransaction.QueryReceipPaymentInfo'
      ELSE
        INSERT INTO cts_serv_catalog (csc_service_id, csc_class_name, csc_method_name, csc_description, csc_trn ) VALUES ('Loan.LoanTransaction.QueryReceipPaymentInfo', 'cobiscorp.ecobis.assets.cloud.service.ILoanTransaction', 'queryReceiptPaymentInfo', '', 7055)
      GO
	  
	  
	  
	 IF EXISTS (SELECT * FROM cts_serv_catalog WHERE csc_service_id = 'Loan.AmortizationDetail.AmortizationDetail')
        UPDATE cts_serv_catalog SET csc_class_name = 'cobiscorp.ecobis.assets.cloud.service.IAmortizationDetail', csc_method_name = 'amortizationDetail', csc_description = '', csc_trn = 7149 WHERE csc_service_id = 'Loan.AmortizationDetail.AmortizationDetail'
      ELSE
        INSERT INTO cts_serv_catalog (csc_service_id, csc_class_name, csc_method_name, csc_description, csc_trn ) VALUES ('Loan.AmortizationDetail.AmortizationDetail', 'cobiscorp.ecobis.assets.cloud.service.IAmortizationDetail', 'amortizationDetail', '', 7149)
      GO
    
      IF EXISTS (SELECT * FROM cts_serv_catalog WHERE csc_service_id = 'Loan.InsertCredit.InsertCredit')
        UPDATE cts_serv_catalog SET csc_class_name = 'cobiscorp.ecobis.assets.cloud.service.IInsertCredit', csc_method_name = 'insertCredit', csc_description = '', csc_trn = 7058 WHERE csc_service_id = 'Loan.InsertCredit.InsertCredit'
      ELSE
        INSERT INTO cts_serv_catalog (csc_service_id, csc_class_name, csc_method_name, csc_description, csc_trn ) VALUES ('Loan.InsertCredit.InsertCredit', 'cobiscorp.ecobis.assets.cloud.service.IInsertCredit', 'insertCredit', '', 7058)
      GO
    
      IF EXISTS (SELECT * FROM cts_serv_catalog WHERE csc_service_id = 'Loan.ProductListCredit.ProductListCredit')
        UPDATE cts_serv_catalog SET csc_class_name = 'cobiscorp.ecobis.assets.cloud.service.IProductListCredit', csc_method_name = 'productListCredit', csc_description = '', csc_trn = 7076 WHERE csc_service_id = 'Loan.ProductListCredit.ProductListCredit'
      ELSE
        INSERT INTO cts_serv_catalog (csc_service_id, csc_class_name, csc_method_name, csc_description, csc_trn ) VALUES ('Loan.ProductListCredit.ProductListCredit', 'cobiscorp.ecobis.assets.cloud.service.IProductListCredit', 'productListCredit', '', 7076)
      GO
	  
	  
	  
	  IF EXISTS (SELECT * FROM cts_serv_catalog WHERE csc_service_id = 'Loan.OperationDataQuery.SearchPayment')
        UPDATE cts_serv_catalog SET csc_class_name = 'cobiscorp.ecobis.assets.cloud.service.IOperationDataQuery', csc_method_name = 'searchPayment', csc_description = '', csc_trn = 7020 WHERE csc_service_id = 'Loan.OperationDataQuery.SearchPayment'
      ELSE
        INSERT INTO cts_serv_catalog (csc_service_id, csc_class_name, csc_method_name, csc_description, csc_trn ) VALUES ('Loan.OperationDataQuery.SearchPayment', 'cobiscorp.ecobis.assets.cloud.service.IOperationDataQuery', 'searchPayment', '', 7020)
      GO
    
      IF EXISTS (SELECT * FROM cts_serv_catalog WHERE csc_service_id = 'Loan.OperationDataQuery.SearchRefinanceLoan')
        UPDATE cts_serv_catalog SET csc_class_name = 'cobiscorp.ecobis.assets.cloud.service.IOperationDataQuery', csc_method_name = 'searchRefinanceLoan', csc_description = '', csc_trn = 7020 WHERE csc_service_id = 'Loan.OperationDataQuery.SearchRefinanceLoan'
      ELSE
        INSERT INTO cts_serv_catalog (csc_service_id, csc_class_name, csc_method_name, csc_description, csc_trn ) VALUES ('Loan.OperationDataQuery.SearchRefinanceLoan', 'cobiscorp.ecobis.assets.cloud.service.IOperationDataQuery', 'searchRefinanceLoan', '', 7020)
      GO
    
      IF EXISTS (SELECT * FROM cts_serv_catalog WHERE csc_service_id = 'Loan.OperationDataQuery.SearchPaymentDetail')
        UPDATE cts_serv_catalog SET csc_class_name = 'cobiscorp.ecobis.assets.cloud.service.IOperationDataQuery', csc_method_name = 'searchPaymentDetail', csc_description = '', csc_trn = 7020 WHERE csc_service_id = 'Loan.OperationDataQuery.SearchPaymentDetail'
      ELSE
        INSERT INTO cts_serv_catalog (csc_service_id, csc_class_name, csc_method_name, csc_description, csc_trn ) VALUES ('Loan.OperationDataQuery.SearchPaymentDetail', 'cobiscorp.ecobis.assets.cloud.service.IOperationDataQuery', 'searchPaymentDetail', '', 7020)
      GO
	  
	  
	  
	 --IF EXISTS (SELECT * FROM cts_serv_catalog WHERE csc_service_id = 'Loan.OperationDataQuery.QueryPaymentConditions')
    --    UPDATE cts_serv_catalog SET csc_class_name = 'cobiscorp.ecobis.assets.cloud.service.IOperationDataQuery', csc_method_name = 'queryPaymentConditions', csc_description = '', csc_trn = 7020 WHERE csc_service_id = 'Loan.OperationDataQuery.QueryPaymentConditions'
    --  ELSE
    --    INSERT INTO cts_serv_catalog (csc_service_id, csc_class_name, csc_method_name, csc_description, csc_trn ) VALUES ('Loan.OperationDataQuery.QueryPaymentConditions', 'cobiscorp.ecobis.assets.cloud.service.IOperationDataQuery', 'queryPaymentConditions', '', 7020)
    --  GO
    
	
	
	 IF EXISTS (SELECT * FROM cts_serv_catalog WHERE csc_service_id = 'Loan.ProductListCredit.QueryCatalogBank')
        UPDATE cts_serv_catalog SET csc_class_name = 'cobiscorp.ecobis.assets.cloud.service.IProductListCredit', csc_method_name = 'queryCatalogBank', csc_description = '', csc_trn = 1209 WHERE csc_service_id = 'Loan.ProductListCredit.QueryCatalogBank'
      ELSE
        INSERT INTO cts_serv_catalog (csc_service_id, csc_class_name, csc_method_name, csc_description, csc_trn ) VALUES ('Loan.ProductListCredit.QueryCatalogBank', 'cobiscorp.ecobis.assets.cloud.service.IProductListCredit', 'queryCatalogBank', '', 1209)
      GO
	  
	  
	   IF EXISTS (SELECT * FROM cts_serv_catalog WHERE csc_service_id = 'Loan.LoanTransaction.QueryCreditAgreement')
        UPDATE cts_serv_catalog SET csc_class_name = 'cobiscorp.ecobis.assets.cloud.service.ILoanTransaction', csc_method_name = 'queryCreditAgreement', csc_description = '', csc_trn = 7279 WHERE csc_service_id = 'Loan.LoanTransaction.QueryCreditAgreement'
      ELSE
        INSERT INTO cts_serv_catalog (csc_service_id, csc_class_name, csc_method_name, csc_description, csc_trn ) VALUES ('Loan.LoanTransaction.QueryCreditAgreement', 'cobiscorp.ecobis.assets.cloud.service.ILoanTransaction', 'queryCreditAgreement', '', 7279)
      GO
	  
	  
	   IF EXISTS (SELECT * FROM cts_serv_catalog WHERE csc_service_id = 'Loan.OperationDataQuery.QueryCurrentState')
        UPDATE cts_serv_catalog SET csc_class_name = 'cobiscorp.ecobis.assets.cloud.service.IOperationDataQuery', csc_method_name = 'queryCurrentState', csc_description = '', csc_trn = 7020 WHERE csc_service_id = 'Loan.OperationDataQuery.QueryCurrentState'
      ELSE
        INSERT INTO cts_serv_catalog (csc_service_id, csc_class_name, csc_method_name, csc_description, csc_trn ) VALUES ('Loan.OperationDataQuery.QueryCurrentState', 'cobiscorp.ecobis.assets.cloud.service.IOperationDataQuery', 'queryCurrentState', '', 7020)
      GO
	  
	  
	  
	  IF EXISTS (SELECT * FROM cts_serv_catalog WHERE csc_service_id = 'Loan.LoanTransaction.QueryPromissoryNote')
        UPDATE cts_serv_catalog SET csc_class_name = 'cobiscorp.ecobis.assets.cloud.service.ILoanTransaction', csc_method_name = 'queryPromissoryNote', csc_description = '', csc_trn = 7225 WHERE csc_service_id = 'Loan.LoanTransaction.QueryPromissoryNote'
      ELSE
        INSERT INTO cts_serv_catalog (csc_service_id, csc_class_name, csc_method_name, csc_description, csc_trn ) VALUES ('Loan.LoanTransaction.QueryPromissoryNote', 'cobiscorp.ecobis.assets.cloud.service.ILoanTransaction', 'queryPromissoryNote', '', 7225)
      GO
    
      IF EXISTS (SELECT * FROM cts_serv_catalog WHERE csc_service_id = 'Loan.LoanTransaction.QueryMatrixDocument')
        UPDATE cts_serv_catalog SET csc_class_name = 'cobiscorp.ecobis.assets.cloud.service.ILoanTransaction', csc_method_name = 'queryMatrixDocument', csc_description = '', csc_trn = 7290 WHERE csc_service_id = 'Loan.LoanTransaction.QueryMatrixDocument'
      ELSE
        INSERT INTO cts_serv_catalog (csc_service_id, csc_class_name, csc_method_name, csc_description, csc_trn ) VALUES ('Loan.LoanTransaction.QueryMatrixDocument', 'cobiscorp.ecobis.assets.cloud.service.ILoanTransaction', 'queryMatrixDocument', '', 7290)
      GO
	  
	  
	    IF EXISTS (SELECT * FROM cts_serv_catalog WHERE csc_service_id = 'Loan.LoanTransaction.QueryReceiptPayment')
        UPDATE cts_serv_catalog SET csc_class_name = 'cobiscorp.ecobis.assets.cloud.service.ILoanTransaction', csc_method_name = 'queryReceiptPayment', csc_description = '', csc_trn = 7055 WHERE csc_service_id = 'Loan.LoanTransaction.QueryReceiptPayment'
      ELSE
        INSERT INTO cts_serv_catalog (csc_service_id, csc_class_name, csc_method_name, csc_description, csc_trn ) VALUES ('Loan.LoanTransaction.QueryReceiptPayment', 'cobiscorp.ecobis.assets.cloud.service.ILoanTransaction', 'queryReceiptPayment', '', 7055)
      GO
    
	
	
	   IF EXISTS (SELECT * FROM cts_serv_catalog WHERE csc_service_id = 'Loan.SearchLoanRefinancing.SearchLoanRefinancing')
        UPDATE cts_serv_catalog SET csc_class_name = 'cobiscorp.ecobis.assets.cloud.service.ISearchLoanRefinancing', csc_method_name = 'searchLoanRefinancing', csc_description = '', csc_trn = 7177 WHERE csc_service_id = 'Loan.SearchLoanRefinancing.SearchLoanRefinancing'
      ELSE
        INSERT INTO cts_serv_catalog (csc_service_id, csc_class_name, csc_method_name, csc_description, csc_trn ) VALUES ('Loan.SearchLoanRefinancing.SearchLoanRefinancing', 'cobiscorp.ecobis.assets.cloud.service.ISearchLoanRefinancing', 'searchLoanRefinancing', '', 7177)
      GO
	  
	  
	  
	  
	  IF EXISTS (SELECT * FROM cts_serv_catalog WHERE csc_service_id = 'Loan.OperationDataQuery.QueryDebtor')
        UPDATE cts_serv_catalog SET csc_class_name = 'cobiscorp.ecobis.assets.cloud.service.IOperationDataQuery', csc_method_name = 'queryDebtor', csc_description = '', csc_trn = 7020 WHERE csc_service_id = 'Loan.OperationDataQuery.QueryDebtor'
      ELSE
        INSERT INTO cts_serv_catalog (csc_service_id, csc_class_name, csc_method_name, csc_description, csc_trn ) VALUES ('Loan.OperationDataQuery.QueryDebtor', 'cobiscorp.ecobis.assets.cloud.service.IOperationDataQuery', 'queryDebtor', '', 7020)
      GO
    
      IF EXISTS (SELECT * FROM cts_serv_catalog WHERE csc_service_id = 'Loan.OperationDataQuery.QueryEntry')
        UPDATE cts_serv_catalog SET csc_class_name = 'cobiscorp.ecobis.assets.cloud.service.IOperationDataQuery', csc_method_name = 'queryEntry', csc_description = '', csc_trn = 7020 WHERE csc_service_id = 'Loan.OperationDataQuery.QueryEntry'
      ELSE
        INSERT INTO cts_serv_catalog (csc_service_id, csc_class_name, csc_method_name, csc_description, csc_trn ) VALUES ('Loan.OperationDataQuery.QueryEntry', 'cobiscorp.ecobis.assets.cloud.service.IOperationDataQuery', 'queryEntry', '', 7020)
      GO
    
      IF EXISTS (SELECT * FROM cts_serv_catalog WHERE csc_service_id = 'Loan.OperationDataQuery.QueryRate')
        UPDATE cts_serv_catalog SET csc_class_name = 'cobiscorp.ecobis.assets.cloud.service.IOperationDataQuery', csc_method_name = 'queryRate', csc_description = '', csc_trn = 7020 WHERE csc_service_id = 'Loan.OperationDataQuery.QueryRate'
      ELSE
        INSERT INTO cts_serv_catalog (csc_service_id, csc_class_name, csc_method_name, csc_description, csc_trn ) VALUES ('Loan.OperationDataQuery.QueryRate', 'cobiscorp.ecobis.assets.cloud.service.IOperationDataQuery', 'queryRate', '', 7020)
      GO
    
      IF EXISTS (SELECT * FROM cts_serv_catalog WHERE csc_service_id = 'Loan.OperationDataQuery.QueryWarranty')
        UPDATE cts_serv_catalog SET csc_class_name = 'cobiscorp.ecobis.assets.cloud.service.IOperationDataQuery', csc_method_name = 'queryWarranty', csc_description = '', csc_trn = 7020 WHERE csc_service_id = 'Loan.OperationDataQuery.QueryWarranty'
      ELSE
        INSERT INTO cts_serv_catalog (csc_service_id, csc_class_name, csc_method_name, csc_description, csc_trn ) VALUES ('Loan.OperationDataQuery.QueryWarranty', 'cobiscorp.ecobis.assets.cloud.service.IOperationDataQuery', 'queryWarranty', '', 7020)
      GO
	  
	  
	  -- Registro de los servicios LoanExtendsQuota y QueryLoanExtendsQuota
    
      IF EXISTS (SELECT * FROM cts_serv_catalog WHERE csc_service_id = 'Loan.LoanMaintenance.LoanExtendsQuota')
        UPDATE cts_serv_catalog SET csc_class_name = 'cobiscorp.ecobis.assets.cloud.service.ILoanMaintenance', csc_method_name = 'queryLoanQuota', csc_description = '', csc_trn = 7235 WHERE csc_service_id = 'Loan.LoanMaintenance.LoanExtendsQuota'
      ELSE
        INSERT INTO cts_serv_catalog (csc_service_id, csc_class_name, csc_method_name, csc_description, csc_trn ) VALUES ('Loan.LoanMaintenance.LoanExtendsQuota', 'cobiscorp.ecobis.assets.cloud.service.ILoanMaintenance', 'queryLoanQuota', '', 7235)
      GO
    
      IF EXISTS (SELECT * FROM cts_serv_catalog WHERE csc_service_id = 'Loan.LoanMaintenance.QueryLoanExtendsQuota')
        UPDATE cts_serv_catalog SET csc_class_name = 'cobiscorp.ecobis.assets.cloud.service.ILoanMaintenance', csc_method_name = 'queryLoanExtendsQuota', csc_description = '', csc_trn = 7232 WHERE csc_service_id = 'Loan.LoanMaintenance.QueryLoanExtendsQuota'
      ELSE
        INSERT INTO cts_serv_catalog (csc_service_id, csc_class_name, csc_method_name, csc_description, csc_trn ) VALUES ('Loan.LoanMaintenance.QueryLoanExtendsQuota', 'cobiscorp.ecobis.assets.cloud.service.ILoanMaintenance', 'queryLoanExtendsQuota', '', 7232)
      GO
	  -- fin servicios LoanExtendsQuota y QueryLoanExtendsQuota
	  
	  -- Registro del servicio QueryCreditStudy
	  IF EXISTS (SELECT * FROM cts_serv_catalog WHERE csc_service_id = 'Loan.LoanTransaction.QueryCreditStudy')
        UPDATE cts_serv_catalog SET csc_class_name = 'cobiscorp.ecobis.assets.cloud.service.ILoanTransaction', csc_method_name = 'queryCreditStudy', csc_description = '', csc_trn = 22149 WHERE csc_service_id = 'Loan.LoanTransaction.QueryCreditStudy'
      ELSE
        INSERT INTO cts_serv_catalog (csc_service_id, csc_class_name, csc_method_name, csc_description, csc_trn ) VALUES ('Loan.LoanTransaction.QueryCreditStudy', 'cobiscorp.ecobis.assets.cloud.service.ILoanTransaction', 'queryCreditStudy', '', 22149)
      GO
	  
	  -- Registro del servicio QueryLoanPayment
	      
      IF EXISTS (SELECT * FROM cts_serv_catalog WHERE csc_service_id = 'Loan.ProductListCredit.QueryLoanPayment')
        UPDATE cts_serv_catalog SET csc_class_name = 'cobiscorp.ecobis.assets.cloud.service.IProductListCredit', csc_method_name = 'queryLoanPayment', csc_description = '', csc_trn = 7144 WHERE csc_service_id = 'Loan.ProductListCredit.QueryLoanPayment'
      ELSE
        INSERT INTO cts_serv_catalog (csc_service_id, csc_class_name, csc_method_name, csc_description, csc_trn ) VALUES ('Loan.ProductListCredit.QueryLoanPayment', 'cobiscorp.ecobis.assets.cloud.service.IProductListCredit', 'queryLoanPayment', '', 7144)
      GO
	  
	  IF EXISTS (SELECT * FROM cts_serv_catalog WHERE csc_service_id = 'Loan.LoanTransaction.QueryOffice')
        UPDATE cts_serv_catalog SET csc_class_name = 'cobiscorp.ecobis.assets.cloud.service.ILoanTransaction', csc_method_name = 'queryOffice', csc_description = '', csc_trn = 7051 WHERE csc_service_id = 'Loan.LoanTransaction.QueryOffice'
      ELSE
        INSERT INTO cts_serv_catalog (csc_service_id, csc_class_name, csc_method_name, csc_description, csc_trn ) VALUES ('Loan.LoanTransaction.QueryOffice', 'cobiscorp.ecobis.assets.cloud.service.ILoanTransaction', 'queryOffice', '', 7051)
      GO
    
      IF EXISTS (SELECT * FROM cts_serv_catalog WHERE csc_service_id = 'Loan.LoanTransaction.QueryProcessingDate')
        UPDATE cts_serv_catalog SET csc_class_name = 'cobiscorp.ecobis.assets.cloud.service.ILoanTransaction', csc_method_name = 'queryProcessingDate', csc_description = '', csc_trn = 7231 WHERE csc_service_id = 'Loan.LoanTransaction.QueryProcessingDate'
      ELSE
        INSERT INTO cts_serv_catalog (csc_service_id, csc_class_name, csc_method_name, csc_description, csc_trn ) VALUES ('Loan.LoanTransaction.QueryProcessingDate', 'cobiscorp.ecobis.assets.cloud.service.ILoanTransaction', 'queryProcessingDate', '', 7231)
      GO
      
      IF EXISTS (SELECT * FROM cts_serv_catalog WHERE csc_service_id = 'Loan.LoanTransaction.LoanRepayment')
        UPDATE cts_serv_catalog SET csc_class_name = 'cobiscorp.ecobis.assets.cloud.service.ILoanTransaction', csc_method_name = 'loanRepayment', csc_description = '', csc_trn = 77501 WHERE csc_service_id = 'Loan.LoanTransaction.LoanRepayment'
      ELSE
        INSERT INTO cts_serv_catalog (csc_service_id, csc_class_name, csc_method_name, csc_description, csc_trn ) VALUES ('Loan.LoanTransaction.LoanRepayment', 'cobiscorp.ecobis.assets.cloud.service.ILoanTransaction', 'loanRepayment', '', 77501)
      GO
	  
	  
	  --Pago Solidario
	  
	  IF EXISTS (SELECT * FROM cts_serv_catalog WHERE csc_service_id = 'Loan.SolidarityPayment.SearchSolidarityDetail')
        UPDATE cts_serv_catalog SET csc_class_name = 'cobiscorp.ecobis.assets.cloud.service.ISolidarityPayment', csc_method_name = 'searchSolidarityDetail', csc_description = '', csc_trn = 0 WHERE csc_service_id = 'Loan.SolidarityPayment.SearchSolidarityDetail'
      ELSE
        INSERT INTO cts_serv_catalog (csc_service_id, csc_class_name, csc_method_name, csc_description, csc_trn ) VALUES ('Loan.SolidarityPayment.SearchSolidarityDetail', 'cobiscorp.ecobis.assets.cloud.service.ISolidarityPayment', 'searchSolidarityDetail', '', 0)
      GO
    
      IF EXISTS (SELECT * FROM cts_serv_catalog WHERE csc_service_id = 'Loan.SolidarityPayment.ReadSolidarity')
        UPDATE cts_serv_catalog SET csc_class_name = 'cobiscorp.ecobis.assets.cloud.service.ISolidarityPayment', csc_method_name = 'readSolidarity', csc_description = '', csc_trn = 0 WHERE csc_service_id = 'Loan.SolidarityPayment.ReadSolidarity'
      ELSE
        INSERT INTO cts_serv_catalog (csc_service_id, csc_class_name, csc_method_name, csc_description, csc_trn ) VALUES ('Loan.SolidarityPayment.ReadSolidarity', 'cobiscorp.ecobis.assets.cloud.service.ISolidarityPayment', 'readSolidarity', '', 0)
      GO
      
      IF EXISTS (SELECT * FROM cts_serv_catalog WHERE csc_service_id = 'Loan.SolidarityPayment.UpdateSolidarityDetail')
        UPDATE cts_serv_catalog SET csc_class_name = 'cobiscorp.ecobis.assets.cloud.service.ISolidarityPayment', csc_method_name = 'updateSolidarityDetail', csc_description = '', csc_trn = 0 WHERE csc_service_id = 'Loan.SolidarityPayment.UpdateSolidarityDetail'
      ELSE
        INSERT INTO cts_serv_catalog (csc_service_id, csc_class_name, csc_method_name, csc_description, csc_trn ) VALUES ('Loan.SolidarityPayment.UpdateSolidarityDetail', 'cobiscorp.ecobis.assets.cloud.service.ISolidarityPayment', 'updateSolidarityDetail', '', 0)
      GO

	  IF EXISTS (SELECT * FROM cts_serv_catalog WHERE csc_service_id = 'Loan.LoansQueries.GetIndividualOperationByOperationGroup')
        UPDATE cts_serv_catalog SET csc_class_name = 'cobiscorp.ecobis.assets.cloud.service.ILoansQueries', csc_method_name = 'getIndividualOperationByOperationGroup', csc_description = '', csc_trn = 7969 WHERE csc_service_id = 'Loan.LoansQueries.GetIndividualOperationByOperationGroup'
      ELSE
        INSERT INTO cts_serv_catalog (csc_service_id, csc_class_name, csc_method_name, csc_description, csc_trn,csc_procedure_validation ) VALUES ('Loan.LoansQueries.GetIndividualOperationByOperationGroup', 'cobiscorp.ecobis.assets.cloud.service.ILoansQueries', 'getIndividualOperationByOperationGroup', '', 7969,'Y')
      GO
	  
	  IF EXISTS (SELECT * FROM cts_serv_catalog WHERE csc_service_id = 'Loan.LoansQueries.GetIndividualOperationByOperationGroup')
        UPDATE cts_serv_catalog SET csc_class_name = 'cobiscorp.ecobis.assets.cloud.service.ILoansQueries', csc_method_name = 'getIndividualOperationByOperationGroup', csc_description = '', csc_trn = 7969 WHERE csc_service_id = 'Loan.LoansQueries.GetIndividualOperationByOperationGroup'
      ELSE
        INSERT INTO cts_serv_catalog (csc_service_id, csc_class_name, csc_method_name, csc_description, csc_trn,csc_procedure_validation ) VALUES ('Loan.LoansQueries.GetIndividualOperationByOperationGroup', 'cobiscorp.ecobis.assets.cloud.service.ILoansQueries', 'getIndividualOperationByOperationGroup', '', 7969,'Y')
      GO
	  
	  IF EXISTS (SELECT * FROM cts_serv_catalog WHERE csc_service_id = 'IndividualLoan.DisbursementManagement.DisburseRevolvingCreditLine')
        UPDATE cts_serv_catalog SET csc_class_name = 'cobiscorp.ecobis.individualloan.service.IDisbursementManagement', csc_method_name = 'disburseRevolvingCreditLine', csc_description = '', csc_trn = 7297 WHERE csc_service_id = 'IndividualLoan.DisbursementManagement.DisburseRevolvingCreditLine'
      ELSE
        INSERT INTO cts_serv_catalog (csc_service_id, csc_class_name, csc_method_name, csc_description, csc_trn,csc_procedure_validation ) VALUES ('IndividualLoan.DisbursementManagement.DisburseRevolvingCreditLine', 'cobiscorp.ecobis.individualloan.service.IDisbursementManagement', 'disburseRevolvingCreditLine', '', 7297,'Y')
      GO
	  
	  IF EXISTS (SELECT * FROM cts_serv_catalog WHERE csc_service_id = 'IndividualLoan.Queries.QueryGeneralParameters')
        UPDATE cts_serv_catalog SET csc_class_name = 'IndividualLoan.Queries.QueryGeneralParameters', csc_method_name = 'queryGeneralParameters', csc_description = '', csc_trn = 7295 WHERE csc_service_id = 'IndividualLoan.Queries.QueryGeneralParameters'
      ELSE
        INSERT INTO cts_serv_catalog (csc_service_id, csc_class_name, csc_method_name, csc_description, csc_trn,csc_procedure_validation ) VALUES ('IndividualLoan.Queries.QueryGeneralParameters', 'cobiscorp.ecobis.individualloan.service.IQueries', 'queryGeneralParameters', '', 7295,'Y')
      GO
	  
	  IF EXISTS (SELECT * FROM cts_serv_catalog WHERE csc_service_id = 'IndividualLoan.Queries.QueryLcrInfo')
        UPDATE cts_serv_catalog SET csc_class_name = 'cobiscorp.ecobis.individualloan.service.IQueries', csc_method_name = 'queryLcrInfo', csc_description = '', csc_trn = 7296 WHERE csc_service_id = 'IndividualLoan.Queries.QueryLcrInfo'
      ELSE
        INSERT INTO cts_serv_catalog (csc_service_id, csc_class_name, csc_method_name, csc_description, csc_trn,csc_procedure_validation ) VALUES ('IndividualLoan.Queries.QueryLcrInfo', 'IndividualLoan.Queries.QueryLcrInfo', 'queryLcrInfo', '', 7296,'Y')
      GO
	
	--CARGA MASIVA DE PAGOS POR ARCHIVO EXCEL
	 IF EXISTS (SELECT * FROM cts_serv_catalog WHERE csc_service_id = 'Payments.MassivePayment.RegisterPayment')
	    UPDATE cts_serv_catalog SET csc_class_name = 'cobiscorp.ecobis.payments.service.IMassivePayment', csc_method_name = 'registerPayment', csc_description = 'registra el pago tomado del archivo' WHERE csc_service_id = 'Payments.MassivePayment.RegisterPayment'
	 ELSE
        INSERT INTO cobis..cts_serv_catalog (csc_service_id, csc_class_name, csc_method_name,csc_description, csc_trn) 
		VALUES('Payments.MassivePayment.RegisterPayment','cobiscorp.ecobis.payments.service.IMassivePayment','registerPayment','registra el pago tomado del archivo',0)      
	 GO
	 
	 IF EXISTS (SELECT * FROM cts_serv_catalog WHERE csc_service_id = 'Payments.MassivePayment.ValidatePayments')
	    UPDATE cts_serv_catalog SET csc_class_name = 'cobiscorp.ecobis.payments.service.IMassivePayment', csc_method_name = 'validatePayments', csc_description = 'registra el pago tomado del archivo' WHERE csc_service_id = 'Payments.MassivePayment.ValidatePayments'
	 ELSE
        INSERT INTO cobis..cts_serv_catalog (csc_service_id, csc_class_name, csc_method_name,csc_description, csc_trn) 
		VALUES('Payments.MassivePayment.ValidatePayments','cobiscorp.ecobis.payments.service.IMassivePayment','validatePayments','valida las condiciones de los pagos cargados a través del archivo',0)      
	 GO
	 
	  IF EXISTS (SELECT * FROM cts_serv_catalog WHERE csc_service_id = 'Payments.MassivePayment.ExecutePayments')
	    UPDATE cts_serv_catalog SET csc_class_name = 'cobiscorp.ecobis.payments.service.IMassivePayment', csc_method_name = 'executePayments', csc_description = 'registra el pago tomado del archivo' WHERE csc_service_id = 'Payments.MassivePayment.ExecutePayments'
	 ELSE
        INSERT INTO cobis..cts_serv_catalog (csc_service_id, csc_class_name, csc_method_name,csc_description, csc_trn) 
		VALUES('Payments.MassivePayment.ExecutePayments','cobiscorp.ecobis.payments.service.IMassivePayment','executePayments','ejecuta los pagos tomados desde el archivo',0)      
	 GO
	 
	 IF EXISTS (SELECT * FROM cts_serv_catalog WHERE csc_service_id = 'Payments.MassivePayment.GetPaymentsResult')
	    UPDATE cts_serv_catalog SET csc_class_name = 'cobiscorp.ecobis.payments.service.IMassivePayment', csc_method_name = 'getPaymentsResult', csc_description = 'registra el pago tomado del archivo' WHERE csc_service_id = 'Payments.MassivePayment.GetPaymentsResult'
	 ELSE
        INSERT INTO cobis..cts_serv_catalog (csc_service_id, csc_class_name, csc_method_name,csc_description, csc_trn) 
		VALUES('Payments.MassivePayment.GetPaymentsResult','cobiscorp.ecobis.payments.service.IMassivePayment','getPaymentsResult','ejecuta los pagos tomados desde el archivo',0)      
	 GO
	  
--ca_transaccion.sql

use cobis
go

declare @w_rol integer

select @w_rol = ro_rol from ad_rol
where ro_descripcion='MENU POR PROCESOS'

--Inserta en la tabla el servicio realizado
delete from cobis..cts_serv_catalog where csc_service_id='Loan.LoanTransaction.TransactionClause'
insert into cobis..cts_serv_catalog (csc_service_id, csc_class_name, csc_method_name,csc_description, csc_trn)
values('Loan.LoanTransaction.TransactionClause','cobiscorp.ecobis.assets.cloud.service.ILoanTransaction','transactionClause','transactionClause',	7179)

--Autoriza el servicio realizado
delete from cobis..ad_servicio_autorizado where ts_servicio ='Loan.LoanTransaction.TransactionClause'
insert into cobis..ad_servicio_autorizado (ts_servicio, ts_producto, ts_tipo, ts_moneda, ts_fecha_aut,ts_rol, ts_estado,ts_fecha_ult_mod)
values('Loan.LoanTransaction.TransactionClause',7,'R',0,getdate(),@w_rol ,'V',getdate())


--creacion de servicio Loan.LoanTransaction.LoanStatusChange
delete from cobis..cts_serv_catalog where csc_service_id='Loan.LoanTransaction.LoanStatusChange'
insert into cobis..cts_serv_catalog (csc_service_id, csc_class_name, csc_method_name,csc_description, csc_trn)
values('Loan.LoanTransaction.LoanStatusChange','cobiscorp.ecobis.assets.cloud.service.ILoanTransaction','loanStatusChange','loanStatusChange',	7135)

--autorizacion al servicio Loan.LoanTransaction.LoanStatusChange
delete from cobis..ad_servicio_autorizado where ts_servicio ='Loan.LoanTransaction.LoanStatusChange'
insert into cobis..ad_servicio_autorizado (ts_servicio, ts_producto, ts_tipo, ts_moneda, ts_fecha_aut,ts_rol, ts_estado,ts_fecha_ult_mod)
values('Loan.LoanTransaction.LoanStatusChange',7,'R',0,getdate(),@w_rol ,'V',getdate())


--creacion de servicio Loan.LoansQueries.ReadLoanHeaderInfo
delete from cobis..cts_serv_catalog where csc_service_id='Loan.LoansQueries.ReadLoanHeaderInfo'
insert into cobis..cts_serv_catalog (csc_service_id, csc_class_name, csc_method_name,csc_description, csc_trn)
values('Loan.LoansQueries.ReadLoanHeaderInfo','cobiscorp.ecobis.assets.cloud.service.ILoansQueries','readLoanHeaderInfo','readLoanHeaderInfo',	7065)

--autorizacion al servicio Loan.LoansQueries.ReadLoanHeaderInfo
delete from cobis..ad_servicio_autorizado where ts_servicio ='Loan.LoansQueries.ReadLoanHeaderInfo'
insert into cobis..ad_servicio_autorizado (ts_servicio, ts_producto, ts_tipo, ts_moneda, ts_fecha_aut,ts_rol, ts_estado,ts_fecha_ult_mod)
values('Loan.LoansQueries.ReadLoanHeaderInfo',7,'R',0,getdate(),@w_rol ,'V',getdate())

--creacion de servicio Loan.Queries.GetStatesLoan
delete from cobis..cts_serv_catalog where csc_service_id='Loan.Queries.GetStatesLoan'
insert into cobis..cts_serv_catalog (csc_service_id, csc_class_name, csc_method_name,csc_description, csc_trn)
values('Loan.Queries.GetStatesLoan','cobiscorp.ecobis.assets.cloud.service.IQueries','getStatesLoan','getStatesLoan',7132)

--autorizacion al servicio Loan.Queries.GetStatesLoan
delete from cobis..ad_servicio_autorizado where ts_servicio ='Loan.Queries.GetStatesLoan'
insert into cobis..ad_servicio_autorizado (ts_servicio, ts_producto, ts_tipo, ts_moneda, ts_fecha_aut,ts_rol, ts_estado,ts_fecha_ult_mod)
values('Loan.Queries.GetStatesLoan',7,'R',0,getdate(),@w_rol ,'V',getdate())


--Inserta en la tabla el servicio realizado ReadDebtorConsigner
delete from cobis..cts_serv_catalog where csc_service_id='Loan.LoansQueries.ReadDebtorConsigner'
insert into cobis..cts_serv_catalog (csc_service_id, csc_class_name, csc_method_name,csc_description, csc_trn)
values('Loan.LoansQueries.ReadDebtorConsigner','cobiscorp.ecobis.assets.cloud.service.ILoansQueries','readDebtorConsigner','readDebtorConsigner',	7014)

--Autoriza el servicio realizado ReadDebtorConsigner
delete from cobis..ad_servicio_autorizado where ts_servicio ='Loan.LoansQueries.ReadDebtorConsigner'
insert into cobis..ad_servicio_autorizado (ts_servicio, ts_producto, ts_tipo, ts_moneda, ts_fecha_aut,ts_rol, ts_estado,ts_fecha_ult_mod)
values('Loan.LoansQueries.ReadDebtorConsigner',7,'R',0,getdate(),@w_rol ,'V',getdate())


--Inserta en la tabla el servicio realizado ReadLoanAmortizationTableSearch
delete from cobis..cts_serv_catalog where csc_service_id='Loan.LoansQueries.ReadLoanAmortizationTableSearch'
insert into cobis..cts_serv_catalog (csc_service_id, csc_class_name, csc_method_name,csc_description, csc_trn)
values('Loan.LoansQueries.ReadLoanAmortizationTableSearch','cobiscorp.ecobis.assets.cloud.service.ILoansQueries','readLoanAmortizationTableSearch','readLoanAmortizationTableSearch',	7014)

--Autoriza el servicio realizado ReadLoanAmortizationTableSearch
delete from cobis..ad_servicio_autorizado where ts_servicio ='Loan.LoansQueries.ReadLoanAmortizationTableSearch'
insert into cobis..ad_servicio_autorizado (ts_servicio, ts_producto, ts_tipo, ts_moneda, ts_fecha_aut,ts_rol, ts_estado,ts_fecha_ult_mod)
values('Loan.LoansQueries.ReadLoanAmortizationTableSearch',1,'R',0,getdate(),@w_rol ,'V',getdate())

--Inserta en la tabla el servicio realizado LoanProyectionQuota
delete from cobis..cts_serv_catalog where csc_service_id='Loan.LoanTransaction.LoanProyectionQuota'
insert into cobis..cts_serv_catalog (csc_service_id, csc_class_name, csc_method_name,csc_description, csc_trn)
values('Loan.LoanTransaction.LoanProyectionQuota','cobiscorp.ecobis.assets.cloud.service.ILoanTransaction','loanProyectionQuota','loanProyectionQuota',	7014)

--Autoriza el servicio realizado LoanProyectionQuota
delete from cobis..ad_servicio_autorizado where ts_servicio ='Loan.LoanTransaction.LoanProyectionQuota'
insert into cobis..ad_servicio_autorizado (ts_servicio, ts_producto, ts_tipo, ts_moneda, ts_fecha_aut,ts_rol, ts_estado,ts_fecha_ult_mod)
values('Loan.LoanTransaction.LoanProyectionQuota',7,'R',0,getdate(),@w_rol ,'V',getdate())

--Autoriza el servicio realizado SearchRetention
delete from cobis..ad_servicio_autorizado where ts_servicio ='Loan.LoanMaintenance.SearchRetention'
insert into cobis..ad_servicio_autorizado (ts_servicio, ts_producto, ts_tipo, ts_moneda, ts_fecha_aut,ts_rol, ts_estado,ts_fecha_ult_mod)
values('Loan.LoanMaintenance.SearchRetention',7,'R',0,getdate(),@w_rol ,'V',getdate())

--Inserta en la tabla el servicio realizado SearchRetention
delete from cobis..cts_serv_catalog where csc_service_id='Loan.LoanMaintenance.SearchRetention'
insert into cobis..cts_serv_catalog (csc_service_id, csc_class_name, csc_method_name,csc_description, csc_trn)
values('Loan.LoanMaintenance.SearchRetention','cobiscorp.ecobis.loan.service.ILoanMaintenance','searchRetention','searchRetention',	7014)





--Inserta en la tabla el servicio realizado TransactionOtherCharges
delete from cobis..cts_serv_catalog 
where csc_service_id in ('Loan.LoanTransaction.TransactionOtherCharges','Loan.LoanTransaction.TransactionOtherChargesGrid','Loan.LoanTransaction.TransactionOtherChargesItems')

INSERT INTO cobis..cts_serv_catalog (csc_service_id, csc_class_name, csc_method_name, csc_description, csc_trn, csc_component, csc_support_offline, csc_procedure_validation)
VALUES ('Loan.LoanTransaction.TransactionOtherCharges', 'cobiscorp.ecobis.assets.cloud.service.ILoanTransaction', 'transactionOtherCharges', 'transactionOtherCharges', 7014, NULL, NULL, NULL)

INSERT INTO cobis..cts_serv_catalog (csc_service_id, csc_class_name, csc_method_name, csc_description, csc_trn, csc_component, csc_support_offline, csc_procedure_validation)
VALUES ('Loan.LoanTransaction.TransactionOtherChargesGrid', 'cobiscorp.ecobis.assets.cloud.service.ILoanTransaction', 'transactionOtherChargesGrid', 'transactionOtherChargesGrid', 7014, NULL, NULL, NULL)

INSERT INTO cobis..cts_serv_catalog (csc_service_id, csc_class_name, csc_method_name, csc_description, csc_trn, csc_component, csc_support_offline, csc_procedure_validation)
VALUES ('Loan.LoanTransaction.TransactionOtherChargesItems', 'cobiscorp.ecobis.assets.cloud.service.ILoanTransaction', 'transactionOtherChargesItems', 'transactionOtherChargesItems', 7014, NULL, NULL, NULL)

--Autoriza el servicio realizado TransactionOtherCharges
delete from cobis..ad_servicio_autorizado 
where ts_servicio in ('Loan.LoanTransaction.TransactionOtherCharges','Loan.LoanTransaction.TransactionOtherChargesGrid','Loan.LoanTransaction.TransactionOtherChargesItems')

INSERT INTO dbo.ad_servicio_autorizado (ts_servicio, ts_producto, ts_tipo, ts_moneda, ts_fecha_aut, ts_rol, ts_estado, ts_fecha_ult_mod)
VALUES ('Loan.LoanTransaction.TransactionOtherCharges', 7, 'R', 0, getdate(), @w_rol, 'V', getdate())

INSERT INTO dbo.ad_servicio_autorizado (ts_servicio, ts_producto, ts_tipo, ts_moneda, ts_fecha_aut, ts_rol, ts_estado, ts_fecha_ult_mod)
VALUES ('Loan.LoanTransaction.TransactionOtherChargesGrid', 7, 'R', 0, getdate(), @w_rol, 'V', getdate())

INSERT INTO dbo.ad_servicio_autorizado (ts_servicio, ts_producto, ts_tipo, ts_moneda, ts_fecha_aut, ts_rol, ts_estado, ts_fecha_ult_mod)
VALUES ('Loan.LoanTransaction.TransactionOtherChargesItems', 7, 'R', 0, getdate(), @w_rol, 'V', getdate())




--ValueDateTransaction
--Inserta en la tabla el servicio realizado ValueDateTransaction
delete from cobis..cts_serv_catalog where csc_service_id='Loan.LoanTransaction.ValueDateTransaction'
insert into cobis..cts_serv_catalog (csc_service_id, csc_class_name, csc_method_name,csc_description, csc_trn)
values('Loan.LoanTransaction.ValueDateTransaction','cobiscorp.ecobis.assets.cloud.service.ILoanTransaction','valueDateTransaction','valueDateTransaction',	7049)

--Autoriza el servicio realizado
delete from cobis..ad_servicio_autorizado where ts_servicio ='Loan.LoanTransaction.ValueDateTransaction'
insert into cobis..ad_servicio_autorizado (ts_servicio, ts_producto, ts_tipo, ts_moneda, ts_fecha_aut,ts_rol, ts_estado,ts_fecha_ult_mod)
values('Loan.LoanTransaction.ValueDateTransaction',7,'R',0,getdate(),@w_rol ,'V',getdate())



--LoanTransactionSearch
--Inserta en la tabla el servicio
delete from cobis..cts_serv_catalog where csc_service_id='Loan.LoanTransaction.LoanTransactionSearch'
insert into cobis..cts_serv_catalog (csc_service_id, csc_class_name, csc_method_name,csc_description, csc_trn)
values('Loan.LoanTransaction.LoanTransactionSearch','cobiscorp.ecobis.assets.cloud.service.ILoanTransaction','loanTransactionSearch','loanTransactionSearch',	7142)

--Autoriza el servicio realizado
delete from cobis..ad_servicio_autorizado where ts_servicio ='Loan.LoanTransaction.LoanTransactionSearch'
insert into cobis..ad_servicio_autorizado (ts_servicio, ts_producto, ts_tipo, ts_moneda, ts_fecha_aut,ts_rol, ts_estado,ts_fecha_ult_mod)
values('Loan.LoanTransaction.LoanTransactionSearch',7,'R',0,getdate(),@w_rol ,'V',getdate())


--ReadjustmentDetalilsLoanUpdate
--Inserta en la tabla el servicio
delete from cobis..cts_serv_catalog where csc_service_id='Loan.LoanMaintenance.ReadjustmentDetalilsLoanUpdate'
insert into cobis..cts_serv_catalog (csc_service_id, csc_class_name, csc_method_name,csc_description, csc_trn)
values('Loan.LoanMaintenance.ReadjustmentDetalilsLoanUpdate','cobiscorp.ecobis.loan.service.ILoanMaintenance','ReadjustmentDetalilsLoanUpdate','ReadjustmentDetalilsLoanUpdate',	7033)

--Autoriza el servicio realizado
delete from cobis..ad_servicio_autorizado where ts_servicio ='Loan.LoanMaintenance.ReadjustmentDetalilsLoanUpdate'
insert into cobis..ad_servicio_autorizado (ts_servicio, ts_producto, ts_tipo, ts_moneda, ts_fecha_aut,ts_rol, ts_estado,ts_fecha_ult_mod)
values('Loan.LoanMaintenance.ReadjustmentDetalilsLoanUpdate',7,'R',0,getdate(),@w_rol ,'V',getdate())


--ReadjustmentDetalilsLoanSearch
--Inserta en la tabla el servicio
delete from cobis..cts_serv_catalog where csc_service_id='Loan.LoanMaintenance.ReadjustmentDetalilsLoanSearch'
insert into cobis..cts_serv_catalog (csc_service_id, csc_class_name, csc_method_name,csc_description, csc_trn)
values('Loan.LoanMaintenance.ReadjustmentDetalilsLoanSearch','cobiscorp.ecobis.loan.service.ILoanMaintenance','ReadjustmentDetalilsLoanSearch','ReadjustmentDetalilsLoanSearch',	7034)

--Autoriza el servicio realizado
delete from cobis..ad_servicio_autorizado where ts_servicio ='Loan.LoanMaintenance.ReadjustmentDetalilsLoanSearch'
insert into cobis..ad_servicio_autorizado (ts_servicio, ts_producto, ts_tipo, ts_moneda, ts_fecha_aut,ts_rol, ts_estado,ts_fecha_ult_mod)
values('Loan.LoanMaintenance.ReadjustmentDetalilsLoanSearch',7,'R',0,getdate(),@w_rol ,'V',getdate()) 


--ReadjustmentDetalilsLoanDelete
--Inserta en la tabla el servicio
delete from cobis..cts_serv_catalog where csc_service_id='Loan.LoanMaintenance.ReadjustmentDetalilsLoanDelete'
insert into cobis..cts_serv_catalog (csc_service_id, csc_class_name, csc_method_name,csc_description, csc_trn)
values('Loan.LoanMaintenance.ReadjustmentDetalilsLoanDelete','cobiscorp.ecobis.loan.service.ILoanMaintenance','ReadjustmentDetalilsLoanDelete','ReadjustmentDetalilsLoanDelete',	7035)

--Autoriza el servicio realizado
delete from cobis..ad_servicio_autorizado where ts_servicio ='Loan.LoanMaintenance.ReadjustmentDetalilsLoanDelete'
insert into cobis..ad_servicio_autorizado (ts_servicio, ts_producto, ts_tipo, ts_moneda, ts_fecha_aut,ts_rol, ts_estado,ts_fecha_ult_mod)
values('Loan.LoanMaintenance.ReadjustmentDetalilsLoanDelete',7,'R',0,getdate(),@w_rol ,'V',getdate())    


--ReadjustmentLoanUpdate
--Inserta en la tabla el servicio
delete from cobis..cts_serv_catalog where csc_service_id='Loan.LoanMaintenance.ReadjustmentLoanUpdate'
insert into cobis..cts_serv_catalog (csc_service_id, csc_class_name, csc_method_name,csc_description, csc_trn)
values('Loan.LoanMaintenance.ReadjustmentLoanUpdate','cobiscorp.ecobis.loan.service.ILoanMaintenance','ReadjustmentLoanUpdate','ReadjustmentLoanUpdate',	7077)

--Autoriza el servicio realizado
delete from cobis..ad_servicio_autorizado where ts_servicio ='Loan.LoanMaintenance.ReadjustmentLoanUpdate'
insert into cobis..ad_servicio_autorizado (ts_servicio, ts_producto, ts_tipo, ts_moneda, ts_fecha_aut,ts_rol, ts_estado,ts_fecha_ult_mod)
values('Loan.LoanMaintenance.ReadjustmentLoanUpdate',7,'R',0,getdate(),@w_rol ,'V',getdate())    

   
--ReadjustmentLoanSearch
--Inserta en la tabla el servicio
delete from cobis..cts_serv_catalog where csc_service_id='Loan.LoanMaintenance.ReadjustmentLoanSearch'
insert into cobis..cts_serv_catalog (csc_service_id, csc_class_name, csc_method_name,csc_description, csc_trn)
values('Loan.LoanMaintenance.ReadjustmentLoanSearch','cobiscorp.ecobis.loan.service.ILoanMaintenance','ReadjustmentLoanSearch','ReadjustmentLoanSearch',	7078)

--Autoriza el servicio realizado
delete from cobis..ad_servicio_autorizado where ts_servicio ='Loan.LoanMaintenance.ReadjustmentLoanSearch'
insert into cobis..ad_servicio_autorizado (ts_servicio, ts_producto, ts_tipo, ts_moneda, ts_fecha_aut,ts_rol, ts_estado,ts_fecha_ult_mod)
values('Loan.LoanMaintenance.ReadjustmentLoanSearch',7,'R',0,getdate(),@w_rol ,'V',getdate())  

            
--ReadjustmentLoanDelete
--Inserta en la tabla el servicio
delete from cobis..cts_serv_catalog where csc_service_id='Loan.LoanMaintenance.ReadjustmentLoanDelete'
insert into cobis..cts_serv_catalog (csc_service_id, csc_class_name, csc_method_name,csc_description, csc_trn)
values('Loan.LoanMaintenance.ReadjustmentLoanDelete','cobiscorp.ecobis.loan.service.ILoanMaintenance','ReadjustmentLoanDelete','ReadjustmentLoanDelete',	7078)

--Autoriza el servicio realizado
delete from cobis..ad_servicio_autorizado where ts_servicio ='Loan.LoanMaintenance.ReadjustmentLoanDelete'
insert into cobis..ad_servicio_autorizado (ts_servicio, ts_producto, ts_tipo, ts_moneda, ts_fecha_aut,ts_rol, ts_estado,ts_fecha_ult_mod)
values('Loan.LoanMaintenance.ReadjustmentLoanDelete',7,'R',0,getdate(),@w_rol ,'V',getdate())  

--CatalogValoDet
--Inserta en la tabla el servicio
delete from cobis..cts_serv_catalog where csc_service_id='Loan.GeneralInfo.CatalogValoDet'
insert into cobis..cts_serv_catalog (csc_service_id, csc_class_name, csc_method_name,csc_description, csc_trn)
values('Loan.GeneralInfo.CatalogValoDet','cobiscorp.ecobis.loan.service.IGeneralInfo','CatalogValoDet','CatalogValoDet',	7078)

--Autoriza el servicio realizado
delete from cobis..ad_servicio_autorizado where ts_servicio ='Loan.GeneralInfo.CatalogValoDet'
insert into cobis..ad_servicio_autorizado (ts_servicio, ts_producto, ts_tipo, ts_moneda, ts_fecha_aut,ts_rol, ts_estado,ts_fecha_ult_mod)
values('Loan.GeneralInfo.CatalogValoDet',7,'R',0,getdate(),@w_rol ,'V',getdate())  

--Inserta en la tabla el servicio realizado LoanMaintenance
delete FROM cobis..cts_serv_catalog WHERE csc_service_id = 'Loan.LoanMaintenance.LoanSearchStatus'
insert into cobis..cts_serv_catalog (csc_service_id, csc_class_name, csc_method_name,csc_description, csc_trn)
values('Loan.LoanMaintenance.LoanSearchStatus','cobiscorp.ecobis.assets.cloud.service.ILoanMaintenance','loanSearchStatus','loanSearchStatus',7131)

--Autoriza el servicio realizado
delete FROM cobis..ad_servicio_autorizado WHERE ts_servicio = 'Loan.LoanMaintenance.LoanSearchStatus'
insert into cobis..ad_servicio_autorizado (ts_servicio, ts_producto, ts_tipo, ts_moneda, ts_fecha_aut,ts_rol, ts_estado,ts_fecha_ult_mod)
values('Loan.LoanMaintenance.LoanSearchStatus',7,'R',0,getdate(),@w_rol ,'V',getdate())

delete  FROM cobis..ad_servicio_autorizado WHERE ts_servicio = 'Loan.LoanMaintenance.SearchLoanCustomer'
INSERT INTO cobis..ad_servicio_autorizado (ts_servicio, ts_producto, ts_tipo, ts_moneda, ts_fecha_aut, ts_rol, ts_estado, ts_fecha_ult_mod)
VALUES ('Loan.LoanMaintenance.SearchLoanCustomer', 7, 'R', 0,getdate(),@w_rol ,'V',getdate())

delete  FROM cobis..cts_serv_catalog WHERE csc_service_id = 'Loan.LoanMaintenance.SearchLoanCustomer'
INSERT INTO cobis..cts_serv_catalog (csc_service_id, csc_class_name, csc_method_name, csc_description, csc_trn)
VALUES ('Loan.LoanMaintenance.SearchLoanCustomer', 'cobiscorp.ecobis.assets.cloud.service.ILoanMaintenance', 'searchLoanCustomer', 'searchLoanCustomer', 7130)

delete FROM cobis..cts_serv_catalog WHERE csc_service_id = 'Loan.OperationDataQuery.SearchPayment'
insert into cobis..cts_serv_catalog (csc_service_id, csc_class_name, csc_method_name,csc_description, csc_trn)
values('Loan.OperationDataQuery.SearchPayment','cobiscorp.ecobis.assets.cloud.service.IOperationDataQuery','searchPayment','searchPayment',	7020)

--Autoriza el servicio realizado
delete from cobis..ad_servicio_autorizado where ts_servicio ='Loan.OperationDataQuery.SearchPayment'
insert into cobis..ad_servicio_autorizado (ts_servicio, ts_producto, ts_tipo, ts_moneda, ts_fecha_aut,ts_rol, ts_estado,ts_fecha_ult_mod)
values('Loan.OperationDataQuery.SearchPayment',1,'R',0,getdate(),@w_rol ,'V',getdate())

delete FROM cobis..cts_serv_catalog WHERE csc_service_id = 'Loan.OperationDataQuery.SearchPaymentDetail'
insert into cobis..cts_serv_catalog (csc_service_id, csc_class_name, csc_method_name,csc_description, csc_trn)
values('Loan.OperationDataQuery.SearchPaymentDetail','cobiscorp.ecobis.assets.cloud.service.IOperationDataQuery','searchPaymentDetail','searchPaymentDetail',	7020)

--Autoriza el servicio realizado
delete from cobis..ad_servicio_autorizado where ts_servicio ='Loan.OperationDataQuery.SearchPaymentDetail'
insert into cobis..ad_servicio_autorizado (ts_servicio, ts_producto, ts_tipo, ts_moneda, ts_fecha_aut,ts_rol, ts_estado,ts_fecha_ult_mod)
values('Loan.OperationDataQuery.SearchPaymentDetail',1,'R',0,getdate(),@w_rol ,'V',getdate())

delete FROM cobis..cts_serv_catalog WHERE csc_service_id = 'Loan.OperationDataQuery.SearchRefinanceLoan'
insert into cobis..cts_serv_catalog (csc_service_id, csc_class_name, csc_method_name,csc_description, csc_trn)
values('Loan.OperationDataQuery.SearchRefinanceLoan','cobiscorp.ecobis.assets.cloud.service.IOperationDataQuery','searchRefinanceLoan','searchRefinanceLoan',	7020)

--Autoriza el servicio realizado
delete from cobis..ad_servicio_autorizado where ts_servicio ='Loan.OperationDataQuery.SearchRefinanceLoan'
insert into cobis..ad_servicio_autorizado (ts_servicio, ts_producto, ts_tipo, ts_moneda, ts_fecha_aut,ts_rol, ts_estado,ts_fecha_ult_mod)
values('Loan.OperationDataQuery.SearchRefinanceLoan',1,'R',0,getdate(),@w_rol ,'V',getdate())


--Inserta en la tabla el servicio realizado QueryEntry
DELETE FROM cobis..cts_serv_catalog WHERE csc_service_id = 'Loan.OperationDataQuery.QueryEntry'
insert into cobis..cts_serv_catalog (csc_service_id, csc_class_name, csc_method_name,csc_description, csc_trn)
values('Loan.OperationDataQuery.QueryEntry','cobiscorp.ecobis.assets.cloud.service.IOperationDataQuery','queryEntry','QueryEntry',	7020)

--Autoriza el servicio realizado
delete from cobis..ad_servicio_autorizado where ts_servicio ='Loan.OperationDataQuery.QueryEntry'
insert into cobis..ad_servicio_autorizado (ts_servicio, ts_producto, ts_tipo, ts_moneda, ts_fecha_aut,ts_rol, ts_estado,ts_fecha_ult_mod)
values('Loan.OperationDataQuery.QueryEntry',1,'R',0,getdate(),@w_rol ,'V',getdate())


--Inserta en la tabla el servicio realizado QueryRate
DELETE FROM cobis..cts_serv_catalog WHERE csc_service_id = 'Loan.OperationDataQuery.QueryRate'
insert into cobis..cts_serv_catalog (csc_service_id, csc_class_name, csc_method_name,csc_description, csc_trn)
values('Loan.OperationDataQuery.QueryRate','cobiscorp.ecobis.assets.cloud.service.IOperationDataQuery','queryRate','QueryRate',	7020)

--Autoriza el servicio realizado
delete from cobis..ad_servicio_autorizado where ts_servicio ='Loan.OperationDataQuery.QueryRate'
insert into cobis..ad_servicio_autorizado (ts_servicio, ts_producto, ts_tipo, ts_moneda, ts_fecha_aut,ts_rol, ts_estado,ts_fecha_ult_mod)
values('Loan.OperationDataQuery.QueryRate',1,'R',0,getdate(),@w_rol ,'V',getdate())


--Inserta en la tabla el servicio realizado QueryWarranty
DELETE FROM cobis..cts_serv_catalog WHERE csc_service_id = 'Loan.OperationDataQuery.QueryWarranty'
insert into cobis..cts_serv_catalog (csc_service_id, csc_class_name, csc_method_name,csc_description, csc_trn)
values('Loan.OperationDataQuery.QueryWarranty','cobiscorp.ecobis.assets.cloud.service.IOperationDataQuery','queryWarranty','QueryWarranty',	7020)

--Autoriza el servicio realizado
delete from cobis..ad_servicio_autorizado where ts_servicio ='Loan.OperationDataQuery.QueryWarranty'
insert into cobis..ad_servicio_autorizado (ts_servicio, ts_producto, ts_tipo, ts_moneda, ts_fecha_aut,ts_rol, ts_estado,ts_fecha_ult_mod)
values('Loan.OperationDataQuery.QueryWarranty',1,'R',0,getdate(),@w_rol ,'V',getdate())


--Inserta en la tabla el servicio realizado QueryDebtor
DELETE FROM cobis..cts_serv_catalog WHERE csc_service_id = 'Loan.OperationDataQuery.QueryDebtor'
insert into cobis..cts_serv_catalog (csc_service_id, csc_class_name, csc_method_name,csc_description, csc_trn)
values('Loan.OperationDataQuery.QueryDebtor','cobiscorp.ecobis.assets.cloud.service.IOperationDataQuery','queryDebtor','QueryDebtor',	7020)

--Autoriza el servicio realizado
delete from cobis..ad_servicio_autorizado where ts_servicio ='Loan.OperationDataQuery.QueryDebtor'
insert into cobis..ad_servicio_autorizado (ts_servicio, ts_producto, ts_tipo, ts_moneda, ts_fecha_aut,ts_rol, ts_estado,ts_fecha_ult_mod)
values('Loan.OperationDataQuery.QueryDebtor',1,'R',0,getdate(),@w_rol ,'V',getdate())


--Autoriza el servicio realizado GeneralLoanData
delete from cobis..ad_servicio_autorizado where ts_servicio ='Loan.LoansQueries.GeneralLoanData'
insert into cobis..ad_servicio_autorizado (ts_servicio, ts_producto, ts_tipo, ts_moneda, ts_fecha_aut,ts_rol, ts_estado,ts_fecha_ult_mod)
values('Loan.LoansQueries.GeneralLoanData',1,'R',0,getdate(),@w_rol ,'V',getdate())

DELETE FROM cobis..cts_serv_catalog WHERE csc_service_id = 'Loan.LoansQueries.GeneralLoanData'
insert into cobis..cts_serv_catalog (csc_service_id, csc_class_name, csc_method_name,csc_description, csc_trn)
values('Loan.LoansQueries.GeneralLoanData','cobiscorp.ecobis.assets.cloud.service.ILoansQueries','generalLoanData','generalLoanData',	714500)

--Autoriza el servicio realizado QueryPaymentConditions
delete from cobis..ad_servicio_autorizado where ts_servicio ='Loan.OperationDataQuery.QueryPaymentConditions'
insert into cobis..ad_servicio_autorizado (ts_servicio, ts_producto, ts_tipo, ts_moneda, ts_fecha_aut,ts_rol, ts_estado,ts_fecha_ult_mod)
values('Loan.OperationDataQuery.QueryPaymentConditions',1,'R',0,getdate(),@w_rol ,'V',getdate())

DELETE FROM cobis..cts_serv_catalog WHERE csc_service_id = 'Loan.OperationDataQuery.QueryPaymentConditions'
insert into cobis..cts_serv_catalog (csc_service_id, csc_class_name, csc_method_name,csc_description, csc_trn)
values('Loan.OperationDataQuery.QueryPaymentConditions','cobiscorp.ecobis.assets.cloud.service.IOperationDataQuery','queryPaymentConditions','queryPaymentConditions',	7020)
                                                         
--Autoriza el servicio realizado SearchLoanRefinancing
delete from cobis..ad_servicio_autorizado where ts_servicio ='Loan.SearchLoanRefinancing.SearchLoanRefinancing'
insert into cobis..ad_servicio_autorizado (ts_servicio, ts_producto, ts_tipo, ts_moneda, ts_fecha_aut,ts_rol, ts_estado,ts_fecha_ult_mod)
values('Loan.SearchLoanRefinancing.SearchLoanRefinancing',1,'R',0,getdate(),@w_rol ,'V',getdate())

DELETE FROM cobis..cts_serv_catalog WHERE csc_service_id = 'Loan.SearchLoanRefinancing.SearchLoanRefinancing'
insert into cobis..cts_serv_catalog (csc_service_id, csc_class_name, csc_method_name,csc_description, csc_trn)
values('Loan.SearchLoanRefinancing.SearchLoanRefinancing','cobiscorp.ecobis.assets.cloud.service.ISearchLoanRefinancing','searchLoanRefinancing','searchLoanRefinancing',	7020)

--Autoriza el servicio realizado GetCondonationPercentage
delete from cobis..ad_servicio_autorizado where ts_servicio ='Loan.Rules.GetCondonationPercentage'
insert into cobis..ad_servicio_autorizado (ts_servicio, ts_producto, ts_tipo, ts_moneda, ts_fecha_aut,ts_rol, ts_estado,ts_fecha_ult_mod)
values('Loan.Rules.GetCondonationPercentage',1,'R',0,getdate(),@w_rol ,'V',getdate())

DELETE FROM cobis..cts_serv_catalog WHERE csc_service_id = 'Loan.Rules.GetCondonationPercentage'
insert into cobis..cts_serv_catalog (csc_service_id, csc_class_name, csc_method_name,csc_description, csc_trn)
values('Loan.Rules.GetCondonationPercentage','cobiscorp.ecobis.assets.cloud.service.IRules','getCondonationPercentage','getCondonationPercentage',	7306)

--Autoriza el servicio realizado GeneralLoanData
delete from cobis..ad_servicio_autorizado where ts_servicio ='Loan.LoansQueries.GeneralLoanData'
insert into cobis..ad_servicio_autorizado (ts_servicio, ts_producto, ts_tipo, ts_moneda, ts_fecha_aut,ts_rol, ts_estado,ts_fecha_ult_mod)
values('Loan.LoansQueries.GeneralLoanData',1,'R',0,getdate(),@w_rol ,'V',getdate())

DELETE FROM cobis..cts_serv_catalog WHERE csc_service_id = 'Loan.LoansQueries.GeneralLoanData'
insert into cobis..cts_serv_catalog (csc_service_id, csc_class_name, csc_method_name,csc_description, csc_trn)
values('Loan.LoansQueries.GeneralLoanData','cobiscorp.ecobis.assets.cloud.service.ILoansQueries','generalLoanData','generalLoanData', 714500)

--Autoriza el servicio realizado QueryCreditStudy
delete from cobis..ad_servicio_autorizado where ts_servicio ='Loan.LoanTransaction.QueryCreditStudy'
insert into cobis..ad_servicio_autorizado (ts_servicio, ts_producto, ts_tipo, ts_moneda, ts_fecha_aut,ts_rol, ts_estado,ts_fecha_ult_mod)
values('Loan.LoanTransaction.QueryCreditStudy',1,'R',0,getdate(),@w_rol ,'V',getdate())

DELETE FROM cobis..cts_serv_catalog WHERE csc_service_id = 'Loan.LoanTransaction.QueryCreditStudy'
insert into cobis..cts_serv_catalog (csc_service_id, csc_class_name, csc_method_name,csc_description, csc_trn)
values('Loan.LoanTransaction.QueryCreditStudy','cobiscorp.ecobis.assets.cloud.service.ILoanTransaction','queryCreditStudy','queryCreditStudy', 22149)

--Autoriza el servicio realizado QuerySwornStatement
delete from cobis..ad_servicio_autorizado where ts_servicio ='Loan.LoanTransaction.QuerySwornStatement'
insert into cobis..ad_servicio_autorizado (ts_servicio, ts_producto, ts_tipo, ts_moneda, ts_fecha_aut,ts_rol, ts_estado,ts_fecha_ult_mod)
values('Loan.LoanTransaction.QuerySwornStatement',1,'R',0,getdate(),@w_rol ,'V',getdate())

DELETE FROM cobis..cts_serv_catalog WHERE csc_service_id = 'Loan.LoanTransaction.QuerySwornStatement'
insert into cobis..cts_serv_catalog (csc_service_id, csc_class_name, csc_method_name,csc_description, csc_trn)
values('Loan.LoanTransaction.QuerySwornStatement','cobiscorp.ecobis.assets.cloud.service.ILoanTransaction','querySwornStatement','querySwornStatement', 22149)

--Autoriza el servicio realizado QueryCreditAgreement
delete from cobis..ad_servicio_autorizado where ts_servicio ='Loan.LoanTransaction.QueryCreditAgreement'
insert into cobis..ad_servicio_autorizado (ts_servicio, ts_producto, ts_tipo, ts_moneda, ts_fecha_aut,ts_rol, ts_estado,ts_fecha_ult_mod)
values('Loan.LoanTransaction.QueryCreditAgreement',1,'R',0,getdate(),@w_rol ,'V',getdate())

DELETE FROM cobis..cts_serv_catalog WHERE csc_service_id = 'Loan.LoanTransaction.QueryCreditAgreement'
insert into cobis..cts_serv_catalog (csc_service_id, csc_class_name, csc_method_name,csc_description, csc_trn)
values('Loan.LoanTransaction.QueryCreditAgreement','cobiscorp.ecobis.assets.cloud.service.ILoanTransaction','queryCreditAgreement','queryCreditAgreement', 7279)


--Autoriza el servicio realizado SearchRetention
delete from cobis..ad_servicio_autorizado where ts_servicio ='Loan.LoanMaintenance.SearchRetention'
insert into cobis..ad_servicio_autorizado (ts_servicio, ts_producto, ts_tipo, ts_moneda, ts_fecha_aut,ts_rol, ts_estado,ts_fecha_ult_mod)
values('Loan.LoanMaintenance.SearchRetention',7,'R',0,getdate(),@w_rol ,'V',getdate())

--Inserta en la tabla el servicio realizado SearchRetention
delete from cobis..cts_serv_catalog where csc_service_id='Loan.LoanMaintenance.SearchRetention'
insert into cobis..cts_serv_catalog (csc_service_id, csc_class_name, csc_method_name,csc_description, csc_trn)
values('Loan.LoanMaintenance.SearchRetention','cobiscorp.ecobis.loan.service.ILoanMaintenance','searchRetention','searchRetention',	7014)

---
--Autoriza el servicio realizado paidCategory
delete from cobis..ad_servicio_autorizado where ts_servicio ='Loan.LoanMaintenance.PaidCategory'
insert into cobis..ad_servicio_autorizado (ts_servicio, ts_producto, ts_tipo, ts_moneda, ts_fecha_aut,ts_rol, ts_estado,ts_fecha_ult_mod)
values('Loan.LoanMaintenance.PaidCategory',7,'R',0,getdate(),@w_rol ,'V',getdate())

--Inserta en la tabla el servicio realizado paidCategory
delete from cobis..cts_serv_catalog where csc_service_id='Loan.LoanMaintenance.PaidCategory'
insert into cobis..cts_serv_catalog (csc_service_id, csc_class_name, csc_method_name,csc_description, csc_trn)
values('Loan.LoanMaintenance.PaidCategory','cobiscorp.ecobis.loan.service.ILoanMaintenance','paidCategory','paidCategory',	7014)


----

--Autoriza el servicio realizado catalogHpV
delete from cobis..ad_servicio_autorizado where ts_servicio ='Loan.GeneralInfo.CatalogHpV'
insert into cobis..ad_servicio_autorizado (ts_servicio, ts_producto, ts_tipo, ts_moneda, ts_fecha_aut,ts_rol, ts_estado,ts_fecha_ult_mod)
values('Loan.GeneralInfo.CatalogHpV',7,'R',0,getdate(),@w_rol ,'V',getdate())

--Inserta en la tabla el servicio realizado catalogHpV
delete from cobis..cts_serv_catalog where csc_service_id='Loan.GeneralInfo.CatalogHpV'
insert into cobis..cts_serv_catalog (csc_service_id, csc_class_name, csc_method_name,csc_description, csc_trn)
values('Loan.GeneralInfo.CatalogHpV','cobiscorp.ecobis.loan.service.IGeneralInfo','catalogHpV','catalogHpV',	7014)


----------

--Autoriza el servicio realizado catalogHpretention
delete from cobis..ad_servicio_autorizado where ts_servicio ='Loan.GeneralInfo.CatalogHpretention'
insert into cobis..ad_servicio_autorizado (ts_servicio, ts_producto, ts_tipo, ts_moneda, ts_fecha_aut,ts_rol, ts_estado,ts_fecha_ult_mod)
values('Loan.GeneralInfo.CatalogHpretention',7,'R',0,getdate(),@w_rol ,'V',getdate())

--Inserta en la tabla el servicio realizado catalogHpretention
delete from cobis..cts_serv_catalog where csc_service_id='Loan.GeneralInfo.CatalogHpretention'
insert into cobis..cts_serv_catalog (csc_service_id, csc_class_name, csc_method_name,csc_description, csc_trn)
values('Loan.GeneralInfo.CatalogHpretention','cobiscorp.ecobis.loan.service.IGeneralInfo','catalogHpretention','catalogHpretention',	7014)


-----

----------

--Autoriza el servicio realizado queryListProductCredict
delete from cobis..ad_servicio_autorizado where ts_servicio ='Loan.LoanMaintenance.QueryListProductCredict'
insert into cobis..ad_servicio_autorizado (ts_servicio, ts_producto, ts_tipo, ts_moneda, ts_fecha_aut,ts_rol, ts_estado,ts_fecha_ult_mod)
values('Loan.LoanMaintenance.QueryListProductCredict',7,'R',0,getdate(),@w_rol ,'V',getdate())

--Inserta en la tabla el servicio realizado queryListProductCredict
delete from cobis..cts_serv_catalog where csc_service_id='Loan.LoanMaintenance.QueryListProductCredict'
insert into cobis..cts_serv_catalog (csc_service_id, csc_class_name, csc_method_name,csc_description, csc_trn)
values('Loan.LoanMaintenance.QueryListProductCredict','cobiscorp.ecobis.loan.service.ILoanMaintenance','queryListProductCredict','queryListProductCredict',	7014)

-----

----------

--Autoriza el servicio realizado catalogHpA
delete from cobis..ad_servicio_autorizado where ts_servicio ='Loan.GeneralInfo.CatalogHpA'
insert into cobis..ad_servicio_autorizado (ts_servicio, ts_producto, ts_tipo, ts_moneda, ts_fecha_aut,ts_rol, ts_estado,ts_fecha_ult_mod)
values('Loan.GeneralInfo.CatalogHpA',7,'R',0,getdate(),@w_rol ,'V',getdate())

--Inserta en la tabla el servicio realizado catalogHpA
delete from cobis..cts_serv_catalog where csc_service_id='Loan.GeneralInfo.CatalogHpA'
insert into cobis..cts_serv_catalog (csc_service_id, csc_class_name, csc_method_name,csc_description, csc_trn)
values('Loan.GeneralInfo.CatalogHpA','cobiscorp.ecobis.loan.service.IGeneralInfo','catalogHpA','catalogHpA',	7014)


--Autoriza el servicio realizado CreateRetention
delete from cobis..ad_servicio_autorizado where ts_servicio ='Loan.LoanMaintenance.CreateRetention'
insert into cobis..ad_servicio_autorizado (ts_servicio, ts_producto, ts_tipo, ts_moneda, ts_fecha_aut,ts_rol, ts_estado,ts_fecha_ult_mod)
values('Loan.LoanMaintenance.CreateRetention',7,'R',0,getdate(),@w_rol ,'V',getdate())

--Inserta en la tabla el servicio realizado CreateRetention
delete from cobis..cts_serv_catalog where csc_service_id='Loan.LoanMaintenance.CreateRetention'
insert into cobis..cts_serv_catalog (csc_service_id, csc_class_name, csc_method_name,csc_description, csc_trn)
values('Loan.LoanMaintenance.CreateRetention','cobiscorp.ecobis.loan.service.ILoanMaintenance','createRetention','createRetention',	7014)

----

--Autoriza el servicio realizado UpdateRetention
delete from cobis..ad_servicio_autorizado where ts_servicio ='Loan.LoanMaintenance.UpdateRetention'
insert into cobis..ad_servicio_autorizado (ts_servicio, ts_producto, ts_tipo, ts_moneda, ts_fecha_aut,ts_rol, ts_estado,ts_fecha_ult_mod)
values('Loan.LoanMaintenance.UpdateRetention',7,'R',0,getdate(),@w_rol ,'V',getdate())

--Inserta en la tabla el servicio realizado UpdateRetention
delete from cobis..cts_serv_catalog where csc_service_id='Loan.LoanMaintenance.UpdateRetention'
insert into cobis..cts_serv_catalog (csc_service_id, csc_class_name, csc_method_name,csc_description, csc_trn)
values('Loan.LoanMaintenance.UpdateRetention','cobiscorp.ecobis.loan.service.ILoanMaintenance','updateRetention','updateRetention',	7014)


--Autoriza el servicio realizado CreateRetention
delete from cobis..ad_servicio_autorizado where ts_servicio ='Loan.LoanMaintenance.DeleteRetention'
insert into cobis..ad_servicio_autorizado (ts_servicio, ts_producto, ts_tipo, ts_moneda, ts_fecha_aut,ts_rol, ts_estado,ts_fecha_ult_mod)
values('Loan.LoanMaintenance.DeleteRetention',7,'R',0,getdate(),@w_rol ,'V',getdate())

--Inserta en la tabla el servicio realizado deleteRetention
delete from cobis..cts_serv_catalog where csc_service_id='Loan.LoanMaintenance.DeleteRetention'
insert into cobis..cts_serv_catalog (csc_service_id, csc_class_name, csc_method_name,csc_description, csc_trn)
values('Loan.LoanMaintenance.DeleteRetention','cobiscorp.ecobis.loan.service.ILoanMaintenance','deleteRetention','deleteRetention',	7014)

--Inserta en la tabla el servicio SearchDetailsAho
delete from cobis..cts_serv_catalog where csc_service_id='Loan.SearchLoanItems.SearchDetailsAho'
INSERT INTO dbo.cts_serv_catalog (csc_service_id, csc_class_name, csc_method_name, csc_description, csc_trn, csc_component, csc_support_offline, csc_procedure_validation)
VALUES ('Loan.SearchLoanItems.SearchDetailsAho', 'cobiscorp.ecobis.assets.cloud.service.ISearchLoanItems', 'searchDetailsAho', '', 7014, NULL, NULL, NULL)

--Autoriza el servicio realizado SearchDetailsAho
delete from cobis..ad_servicio_autorizado where ts_servicio ='Loan.SearchLoanItems.SearchDetailsAho'
INSERT INTO dbo.ad_servicio_autorizado (ts_servicio, ts_rol, ts_producto, ts_tipo, ts_moneda, ts_fecha_aut, ts_estado, ts_fecha_ult_mod)
VALUES ('Loan.SearchLoanItems.SearchDetailsAho', @w_rol, 7, 'R', 0, getdate(), 'V', getdate())


--Inserta en la tabla el servicio realizado SearchRates
delete from cobis..cts_serv_catalog where csc_service_id='Loan.RatesManagement.SearchRates'
insert into cobis..cts_serv_catalog (csc_service_id, csc_class_name, csc_method_name,csc_description, csc_trn)
values('Loan.RatesManagement.SearchRates','cobiscorp.ecobis.assets.cloud.service.IRatesManagement','searchRates','searchRates',7126)

--Autoriza el servicio realizado SearchRates
delete from cobis..ad_servicio_autorizado where ts_servicio ='Loan.RatesManagement.SearchRates'
insert into cobis..ad_servicio_autorizado (ts_servicio, ts_producto, ts_tipo, ts_moneda, ts_fecha_aut,ts_rol, ts_estado,ts_fecha_ult_mod)
values('Loan.RatesManagement.SearchRates',7,'R',0,getdate(),@w_rol ,'V',getdate())


--Inserta en la tabla el servicio realizado SearchValuesRate
delete from cobis..cts_serv_catalog where csc_service_id='Loan.RatesManagement.SearchValuesRate'
insert into cobis..cts_serv_catalog (csc_service_id, csc_class_name, csc_method_name,csc_description, csc_trn)
values('Loan.RatesManagement.SearchValuesRate','cobiscorp.ecobis.assets.cloud.service.IRatesManagement','searchValuesRate','searchValuesRate',7126)

--Autoriza el servicio realizado SearchValuesRate
delete from cobis..ad_servicio_autorizado where ts_servicio ='Loan.RatesManagement.SearchValuesRate'
insert into cobis..ad_servicio_autorizado (ts_servicio, ts_producto, ts_tipo, ts_moneda, ts_fecha_aut,ts_rol, ts_estado,ts_fecha_ult_mod)
values('Loan.RatesManagement.SearchValuesRate',7,'R',0,getdate(),@w_rol ,'V',getdate())


--Inserta en la tabla el servicio realizado CreateTypeRate
delete from cobis..cts_serv_catalog where csc_service_id='Loan.RatesManagement.CreateTypeRate'
insert into cobis..cts_serv_catalog (csc_service_id, csc_class_name, csc_method_name,csc_description, csc_trn)
values('Loan.RatesManagement.CreateTypeRate','cobiscorp.ecobis.assets.cloud.service.IRatesManagement','createTypeRate','createTypeRate',7126)

--Autoriza el servicio realizado CreateTypeRate
delete from cobis..ad_servicio_autorizado where ts_servicio ='Loan.RatesManagement.CreateTypeRate'
insert into cobis..ad_servicio_autorizado (ts_servicio, ts_producto, ts_tipo, ts_moneda, ts_fecha_aut,ts_rol, ts_estado,ts_fecha_ult_mod)
values('Loan.RatesManagement.CreateTypeRate',7,'R',0,getdate(),@w_rol ,'V',getdate())

--Inserta en la tabla el servicio realizado ReferenceValueList
delete from cobis..cts_serv_catalog where csc_service_id='Loan.RatesManagement.ReferenceValueList'
insert into cobis..cts_serv_catalog (csc_service_id, csc_class_name, csc_method_name,csc_description, csc_trn)
values('Loan.RatesManagement.ReferenceValueList','cobiscorp.ecobis.assets.cloud.service.IRatesManagement','referenceValueList','referenceValueList',7120)

--Autoriza el servicio realizado ReferenceValueList
delete from cobis..ad_servicio_autorizado where ts_servicio ='Loan.RatesManagement.ReferenceValueList'
insert into cobis..ad_servicio_autorizado (ts_servicio, ts_producto, ts_tipo, ts_moneda, ts_fecha_aut,ts_rol, ts_estado,ts_fecha_ult_mod)
values('Loan.RatesManagement.ReferenceValueList',7,'R',0,getdate(),@w_rol ,'V',getdate())

--Inserta en la tabla el servicio realizado GetReferenceValue
delete from cobis..cts_serv_catalog where csc_service_id='Loan.RatesManagement.GetReferenceValue'
insert into cobis..cts_serv_catalog (csc_service_id, csc_class_name, csc_method_name,csc_description, csc_trn)
values('Loan.RatesManagement.GetReferenceValue','cobiscorp.ecobis.assets.cloud.service.IRatesManagement','getReferenceValue','getReferenceValue',7120)

--Autoriza el servicio realizado GetReferenceValue
delete from cobis..ad_servicio_autorizado where ts_servicio ='Loan.RatesManagement.GetReferenceValue'
insert into cobis..ad_servicio_autorizado (ts_servicio, ts_producto, ts_tipo, ts_moneda, ts_fecha_aut,ts_rol, ts_estado,ts_fecha_ult_mod)
values('Loan.RatesManagement.GetReferenceValue',7,'R',0,getdate(),@w_rol ,'V',getdate())

--Inserta en la tabla el servicio realizado DeleteValuesRate
delete from cobis..cts_serv_catalog where csc_service_id='Loan.RatesManagement.DeleteValuesRate'
insert into cobis..cts_serv_catalog (csc_service_id, csc_class_name, csc_method_name,csc_description, csc_trn)
values('Loan.RatesManagement.DeleteValuesRate','cobiscorp.ecobis.assets.cloud.service.IRatesManagement','deleteValuesRate','deleteValuesRate',7127)

--Autoriza el servicio realizado DeleteValuesRate
delete from cobis..ad_servicio_autorizado where ts_servicio ='Loan.RatesManagement.DeleteValuesRate'
insert into cobis..ad_servicio_autorizado (ts_servicio, ts_producto, ts_tipo, ts_moneda, ts_fecha_aut,ts_rol, ts_estado,ts_fecha_ult_mod)
values('Loan.RatesManagement.DeleteValuesRate',7,'R',0,getdate(),@w_rol ,'V',getdate())
go



DELETE FROM cts_serv_catalog where csc_service_id IN (
'Loan.ReadDisbursementForm.ApplyLiquidationLoan',
'Loan.ReadDisbursementForm.InsertDetailPaymentForm',
'Loan.ReadDisbursementForm.ReadAccountSearch',
'Loan.ReadDisbursementForm.ReadAccountsSearch',
'Loan.ReadDisbursementForm.ReadDisbursementFormSearch',
'Loan.ReadDisbursementForm.ReadGlobalVariablesSearch',
'Loan.ReadDisbursementForm.ReadPaymentFormSearch',
'Loan.ReadDisbursementForm.RemoveDetailPaymentForm',
'Loan.ReadDisbursementForm.ValidateAccountOtherBanks',
'Remittance.RemittanceService.GroupRemittanceByClient',
'Remittance.RemittanceService.QueryRemittanceByClient',
'Loan.SearchLoanItems.GetLoanItemsDetails',
'Loan.ProductListCredit.CreditDetail',
'Loan.FundManagement.CreateFundResource',
'Loan.FundManagement.SearchFundResource',
'Loan.FundManagement.UpdateFundResource',
'Loan.ProductListCredit.BankAccountList',
'Loan.ProductListCredit.CalculateValueToCondone',
'Loan.ProductListCredit.CondonableItemList',
'Loan.ProductListCredit.LoanPayEntry',
'Loan.ProductListCredit.PaymentsEntry',
'Loan.ProductListCredit.ProductCredit',
'Loan.GroupPaymentManagement.SearchGroupDebts',
'Loan.GroupPaymentManagement.ReadGroupInfo',
'Loan.GroupPaymentManagement.InsertGroupPayment',
'Loan.LoanMaintenance.LoanSimulatorServices',
'Loan.DebitOrderProcessingLog.SearchDebitOrderProcessingLog',
'Loan.SolidarityPayment.InsertSolidarityPayment')

INSERT INTO cts_serv_catalog (csc_service_id, csc_class_name, csc_method_name, csc_description, csc_trn, csc_component, csc_support_offline, csc_procedure_validation)
VALUES ('Loan.ReadDisbursementForm.ApplyLiquidationLoan', 'cobiscorp.ecobis.assets.cloud.service.IReadDisbursementForm', 'applyLiquidationLoan', '', 7060, NULL, NULL, NULL)
GO

INSERT INTO cts_serv_catalog (csc_service_id, csc_class_name, csc_method_name, csc_description, csc_trn, csc_component, csc_support_offline, csc_procedure_validation)
VALUES ('Loan.ReadDisbursementForm.InsertDetailPaymentForm', 'cobiscorp.ecobis.assets.cloud.service.IReadDisbursementForm', 'insertDetailPaymentForm', '', 7030, NULL, NULL, NULL)
GO

INSERT INTO cts_serv_catalog (csc_service_id, csc_class_name, csc_method_name, csc_description, csc_trn, csc_component, csc_support_offline, csc_procedure_validation)
VALUES ('Loan.ReadDisbursementForm.ReadAccountSearch', 'cobiscorp.ecobis.assets.cloud.service.IReadDisbursementForm', 'readAccountSearch', '', 7003, NULL, NULL, NULL)
GO

INSERT INTO cts_serv_catalog (csc_service_id, csc_class_name, csc_method_name, csc_description, csc_trn, csc_component, csc_support_offline, csc_procedure_validation)
VALUES ('Loan.ReadDisbursementForm.ReadAccountsSearch', 'cobiscorp.ecobis.assets.cloud.service.IReadDisbursementForm', 'readAccountsSearch', '', 7003, NULL, NULL, NULL)
GO

INSERT INTO cts_serv_catalog (csc_service_id, csc_class_name, csc_method_name, csc_description, csc_trn, csc_component, csc_support_offline, csc_procedure_validation)
VALUES ('Loan.ReadDisbursementForm.ReadDisbursementFormSearch', 'cobiscorp.ecobis.assets.cloud.service.IReadDisbursementForm', 'readDisbursementFormSearch', 'readDisbursementFormSearch', 7032, NULL, NULL, NULL)
GO

INSERT INTO cts_serv_catalog (csc_service_id, csc_class_name, csc_method_name, csc_description, csc_trn, csc_component, csc_support_offline, csc_procedure_validation)
VALUES ('Loan.ReadDisbursementForm.ReadGlobalVariablesSearch', 'cobiscorp.ecobis.assets.cloud.service.IReadDisbursementForm', 'readGlobalVariablesSearch', '', 7050, NULL, NULL, NULL)
GO

INSERT INTO cts_serv_catalog (csc_service_id, csc_class_name, csc_method_name, csc_description, csc_trn, csc_component, csc_support_offline, csc_procedure_validation)
VALUES ('Loan.ReadDisbursementForm.ReadPaymentFormSearch', 'cobiscorp.ecobis.assets.cloud.service.IReadDisbursementForm', 'readPaymentFormSearch', '', 7076, NULL, NULL, NULL)
GO

INSERT INTO cts_serv_catalog (csc_service_id, csc_class_name, csc_method_name, csc_description, csc_trn, csc_component, csc_support_offline, csc_procedure_validation)
VALUES ('Loan.ReadDisbursementForm.RemoveDetailPaymentForm', 'cobiscorp.ecobis.assets.cloud.service.IReadDisbursementForm', 'removeDetailPaymentForm', '', 7031, NULL, NULL, NULL)
GO

INSERT INTO cts_serv_catalog (csc_service_id, csc_class_name, csc_method_name, csc_description, csc_trn, csc_component, csc_support_offline, csc_procedure_validation)
VALUES ('Loan.ReadDisbursementForm.ValidateAccountOtherBanks', 'cobiscorp.ecobis.assets.cloud.service.IReadDisbursementForm', 'validateAccountOtherBanks', '', 29265, NULL, NULL, NULL)
GO

INSERT INTO dbo.cts_serv_catalog (csc_service_id, csc_class_name, csc_method_name, csc_description, csc_trn, csc_component, csc_support_offline, csc_procedure_validation)
VALUES ('Remittance.RemittanceService.GroupRemittanceByClient', 'cobiscorp.ecobis.remittance.service.IRemittanceService', 'groupRemittanceByClient', 'groupRemittanceByClient', NULL, NULL, NULL, NULL)
GO

INSERT INTO dbo.cts_serv_catalog (csc_service_id, csc_class_name, csc_method_name, csc_description, csc_trn, csc_component, csc_support_offline, csc_procedure_validation)
VALUES ('Remittance.RemittanceService.QueryRemittanceByClient', 'cobiscorp.ecobis.remittance.service.IRemittanceService', 'queryRemittanceByClient', 'queryRemittanceByClient', NULL, NULL, NULL, NULL)
GO

--Servicio SearchLoanItems.GetLoanItemsDetails
INSERT INTO dbo.cts_serv_catalog (csc_service_id, csc_class_name, csc_method_name, csc_description, csc_trn, csc_component, csc_support_offline, csc_procedure_validation)
VALUES ('Loan.SearchLoanItems.GetLoanItemsDetails', 'cobiscorp.ecobis.assets.cloud.service.ISearchLoanItems', 'getLoanItemsDetails', '', 7095, null, null, null)
go

INSERT INTO dbo.cts_serv_catalog (csc_service_id, csc_class_name, csc_method_name, csc_description, csc_trn, csc_component, csc_support_offline, csc_procedure_validation)
VALUES ('Loan.ProductListCredit.CreditDetail', 'cobiscorp.ecobis.assets.cloud.service.IProductListCredit', 'creditDetail', 'creditDetail', 7059, NULL, NULL, NULL)
GO

INSERT INTO dbo.cts_serv_catalog (csc_service_id, csc_class_name, csc_method_name, csc_description, csc_trn, csc_component, csc_support_offline, csc_procedure_validation)
VALUES ('Loan.FundManagement.CreateFundResource', 'cobiscorp.ecobis.assets.cloud.service.IFundManagement', 'createFundResource', 'createFundResource', 7282, NULL, NULL, NULL)
go

INSERT INTO dbo.cts_serv_catalog (csc_service_id, csc_class_name, csc_method_name, csc_description, csc_trn, csc_component, csc_support_offline, csc_procedure_validation)
VALUES ('Loan.FundManagement.SearchFundResource', 'cobiscorp.ecobis.assets.cloud.service.IFundManagement', 'searchFundResource', 'searchFundResource', 7282, NULL, NULL, NULL)
go

INSERT INTO dbo.cts_serv_catalog (csc_service_id, csc_class_name, csc_method_name, csc_description, csc_trn, csc_component, csc_support_offline, csc_procedure_validation)
VALUES ('Loan.FundManagement.UpdateFundResource', 'cobiscorp.ecobis.assets.cloud.service.IFundManagement', 'updateFundResource', 'updateFundResource', 7282, NULL, NULL, NULL)
GO

INSERT INTO dbo.cts_serv_catalog (csc_service_id, csc_class_name, csc_method_name, csc_description, csc_trn, csc_component, csc_support_offline, csc_procedure_validation)
VALUES ('Loan.ProductListCredit.BankAccountList', 'cobiscorp.ecobis.assets.cloud.service.IProductListCredit', 'bankAccountList', 'bankAccountList', 7003, NULL, NULL, NULL)
GO

INSERT INTO dbo.cts_serv_catalog (csc_service_id, csc_class_name, csc_method_name, csc_description, csc_trn, csc_component, csc_support_offline, csc_procedure_validation)
VALUES ('Loan.ProductListCredit.CalculateValueToCondone', 'cobiscorp.ecobis.assets.cloud.service.IProductListCredit', 'calculateValueToCondone', 'calculateValueToCondone', 7276, NULL, NULL, NULL)
GO

INSERT INTO dbo.cts_serv_catalog (csc_service_id, csc_class_name, csc_method_name, csc_description, csc_trn, csc_component, csc_support_offline, csc_procedure_validation)
VALUES ('Loan.ProductListCredit.CondonableItemList', 'cobiscorp.ecobis.assets.cloud.service.IProductListCredit', 'condonableItemList', 'condonableItemList', 7276, NULL, NULL, NULL)
GO

INSERT INTO dbo.cts_serv_catalog (csc_service_id, csc_class_name, csc_method_name, csc_description, csc_trn, csc_component, csc_support_offline, csc_procedure_validation)
VALUES ('Loan.ProductListCredit.LoanPayEntry', 'cobiscorp.ecobis.assets.cloud.service.IProductListCredit', 'loanPayEntry', '', 7058, NULL, NULL, NULL)
GO

INSERT INTO dbo.cts_serv_catalog (csc_service_id, csc_class_name, csc_method_name, csc_description, csc_trn, csc_component, csc_support_offline, csc_procedure_validation)
VALUES ('Loan.ProductListCredit.PaymentsEntry', 'cobiscorp.ecobis.assets.cloud.service.IProductListCredit', 'paymentsEntry', 'paymentsEntry', 7058, NULL, NULL, NULL)
GO

INSERT INTO dbo.cts_serv_catalog (csc_service_id, csc_class_name, csc_method_name, csc_description, csc_trn, csc_component, csc_support_offline, csc_procedure_validation)
VALUES ('Loan.ProductListCredit.ProductCredit', 'cobiscorp.ecobis.assets.cloud.service.IProductListCredit', 'productCredit', 'productCredit', 7076, NULL, NULL, NULL)
GO

INSERT INTO dbo.cts_serv_catalog (csc_service_id, csc_class_name, csc_method_name, csc_description, csc_trn, csc_component, csc_support_offline, csc_procedure_validation)
VALUES ('Loan.GroupPaymentManagement.SearchGroupDebts', 'cobiscorp.ecobis.assets.cloud.service.IGroupPaymentManagement', 'searchGroupDebts', 'searchGroupDebts', 7281, NULL, NULL, NULL)
GO

INSERT INTO dbo.cts_serv_catalog (csc_service_id, csc_class_name, csc_method_name, csc_description, csc_trn, csc_component, csc_support_offline, csc_procedure_validation)
VALUES ('Loan.GroupPaymentManagement.ReadGroupInfo', 'cobiscorp.ecobis.assets.cloud.service.IGroupPaymentManagement', 'readGroupInfo', 'readGroupInfo', 7281, NULL, NULL, NULL)
GO

INSERT INTO dbo.cts_serv_catalog (csc_service_id, csc_class_name, csc_method_name, csc_description, csc_trn, csc_component, csc_support_offline, csc_procedure_validation)
VALUES ('Loan.GroupPaymentManagement.InsertGroupPayment', 'cobiscorp.ecobis.assets.cloud.service.IGroupPaymentManagement', 'insertGroupPayment', 'insertGroupPayment', 7281, NULL, NULL, NULL)
GO

INSERT INTO cobis..cts_serv_catalog (csc_service_id, csc_class_name, csc_method_name, csc_description, csc_trn ) 
VALUES ('Loan.LoanMaintenance.LoanSimulatorServices', 'cobiscorp.ecobis.assets.cloud.service.ILoanMaintenance', 'loanSimulatorServices', '', 74663)
go

INSERT INTO dbo.cts_serv_catalog (csc_service_id, csc_class_name, csc_method_name, csc_description, csc_trn, csc_component, csc_support_offline, csc_procedure_validation)
VALUES ('Loan.DebitOrderProcessingLog.SearchDebitOrderProcessingLog', 'cobiscorp.ecobis.assets.cloud.service.IDebitOrderProcessingLog', 'searchDebitOrderProcessingLog', '', 7301, NULL, NULL, NULL)
GO

INSERT INTO cts_serv_catalog (csc_service_id, csc_class_name, csc_method_name, csc_description, csc_trn, csc_component, csc_support_offline, csc_procedure_validation)
VALUES ('Loan.SolidarityPayment.InsertSolidarityPayment', 'cobiscorp.ecobis.assets.cloud.service.ISolidarityPayment', 'insertSolidarityPayment', 'insertSolidarityPayment', 7968, NULL, NULL, NULL)
GO

DELETE FROM ad_servicio_autorizado WHERE ts_servicio IN ('Loan.ReadDisbursementForm.ApplyLiquidationLoan',
'Loan.ReadDisbursementForm.InsertDetailPaymentForm',
'Loan.ReadDisbursementForm.ReadAccountSearch',
'Loan.ReadDisbursementForm.ReadAccountsSearch',
'Loan.ReadDisbursementForm.ReadDisbursementFormSearch',
'Loan.ReadDisbursementForm.ReadGlobalVariablesSearch',
'Loan.ReadDisbursementForm.ReadPaymentFormSearch',
'Loan.ReadDisbursementForm.RemoveDetailPaymentForm',
'Loan.ReadDisbursementForm.ValidateAccountOtherBanks',
'Loan.ProductListCredit.CreditDetail',
'Loan.ProductListCredit.BankAccountList',
'Loan.ProductListCredit.CalculateValueToCondone',
'Loan.ProductListCredit.CondonableItemList',
'Loan.ProductListCredit.LoanPayEntry',
'Loan.ProductListCredit.PaymentsEntry',
'Loan.ProductListCredit.ProductCredit',
'Remittance.RemittanceService.GroupRemittanceByClient',
'Remittance.RemittanceService.QueryRemittanceByClient',
'Loan.FundManagement.CreateFundResource',
'Loan.FundManagement.SearchFundResource',
'Loan.FundManagement.UpdateFundResource',
'Loan.GroupPaymentManagement.SearchGroupDebts',
'Loan.GroupPaymentManagement.ReadGroupInfo',
'Loan.GroupPaymentManagement.InsertGroupPayment',
'Loan.LoanMaintenance.LoanSimulatorServices',
'Loan.DebitOrderProcessingLog.SearchDebitOrderProcessingLog',
'Loan.SolidarityPayment.InsertSolidarityPayment')

declare @w_rol integer

select @w_rol = ro_rol from ad_rol
where ro_descripcion='MENU POR PROCESOS'

INSERT INTO dbo.ad_servicio_autorizado (ts_servicio, ts_rol, ts_producto, ts_tipo, ts_moneda, ts_fecha_aut, ts_estado, ts_fecha_ult_mod)
VALUES ('Loan.ProductListCredit.LoanPayEntry', @w_rol, 7, 'R', 0, '2017-01-09 12:39:06.747', 'V', '2017-01-09 12:39:06.747')

INSERT INTO dbo.ad_servicio_autorizado (ts_servicio, ts_rol, ts_producto, ts_tipo, ts_moneda, ts_fecha_aut, ts_estado, ts_fecha_ult_mod)
VALUES ('Loan.ProductListCredit.BankAccountList', @w_rol, 7, 'R', 0, '2017-01-09 12:39:06.747', 'V', '2017-01-09 12:39:06.747')

INSERT INTO dbo.ad_servicio_autorizado (ts_servicio, ts_rol, ts_producto, ts_tipo, ts_moneda, ts_fecha_aut, ts_estado, ts_fecha_ult_mod)
VALUES ('Loan.ProductListCredit.CalculateValueToCondone', @w_rol, 7, 'R', 0, '2016-12-22 09:51:06.35', 'V', '2016-12-22 09:51:06.35')

INSERT INTO dbo.ad_servicio_autorizado (ts_servicio, ts_rol, ts_producto, ts_tipo, ts_moneda, ts_fecha_aut, ts_estado, ts_fecha_ult_mod)
VALUES ('Loan.ProductListCredit.CondonableItemList', @w_rol, 7, 'R', 0, '2016-12-22 09:51:06.33', 'V', '2016-12-22 09:51:06.33')

INSERT INTO dbo.ad_servicio_autorizado (ts_servicio, ts_rol, ts_producto, ts_tipo, ts_moneda, ts_fecha_aut, ts_estado, ts_fecha_ult_mod)
VALUES ('Loan.ProductListCredit.PaymentsEntry', @w_rol, 7, 'R', 0, '2016-12-22 09:51:06.363', 'V', '2016-12-22 09:51:06.363')

INSERT INTO dbo.ad_servicio_autorizado (ts_servicio, ts_rol, ts_producto, ts_tipo, ts_moneda, ts_fecha_aut, ts_estado, ts_fecha_ult_mod)
VALUES ('Loan.ProductListCredit.ProductCredit', @w_rol, 7, 'R', 0, '2017-01-09 12:39:06.75', 'V', '2017-01-09 12:39:06.75')

INSERT INTO dbo.ad_servicio_autorizado (ts_servicio, ts_rol, ts_producto, ts_tipo, ts_moneda, ts_fecha_aut, ts_estado, ts_fecha_ult_mod)
VALUES ('Loan.ProductListCredit.CreditDetail', @w_rol, 7, 'R', 0, '2016-12-09 18:53:07.03', 'V', '2016-12-09 18:53:07.03')

INSERT INTO dbo.ad_servicio_autorizado (ts_servicio, ts_rol, ts_producto, ts_tipo, ts_moneda, ts_fecha_aut, ts_estado, ts_fecha_ult_mod)
VALUES ('Loan.ReadDisbursementForm.ApplyLiquidationLoan', @w_rol, 7, 'R', 0, '2017-02-06 16:15:54.81', 'V', '2017-02-06 16:15:54.81')

INSERT INTO dbo.ad_servicio_autorizado (ts_servicio, ts_rol, ts_producto, ts_tipo, ts_moneda, ts_fecha_aut, ts_estado, ts_fecha_ult_mod)
VALUES ('Loan.ReadDisbursementForm.InsertDetailPaymentForm', @w_rol, 7, 'R', 0, '2017-02-06 16:15:54.79', 'V', '2017-02-06 16:15:54.79')

INSERT INTO dbo.ad_servicio_autorizado (ts_servicio, ts_rol, ts_producto, ts_tipo, ts_moneda, ts_fecha_aut, ts_estado, ts_fecha_ult_mod)
VALUES ('Loan.ReadDisbursementForm.ReadAccountsSearch', @w_rol, 7, 'R', 0, '2017-02-06 16:15:54.817', 'V', '2017-02-06 16:15:54.817')

INSERT INTO dbo.ad_servicio_autorizado (ts_servicio, ts_rol, ts_producto, ts_tipo, ts_moneda, ts_fecha_aut, ts_estado, ts_fecha_ult_mod)
VALUES ('Loan.ReadDisbursementForm.ReadDisbursementFormSearch', @w_rol, 7, 'R', 0, '2017-06-06 14:24:23.237', 'V', '2017-06-06 14:24:23.237')

INSERT INTO dbo.ad_servicio_autorizado (ts_servicio, ts_rol, ts_producto, ts_tipo, ts_moneda, ts_fecha_aut, ts_estado, ts_fecha_ult_mod)
VALUES ('Loan.ReadDisbursementForm.ReadGlobalVariablesSearch', @w_rol, 7, 'R', 0, '2017-02-06 16:15:54.783', 'V', '2017-02-06 16:15:54.783')

INSERT INTO dbo.ad_servicio_autorizado (ts_servicio, ts_rol, ts_producto, ts_tipo, ts_moneda, ts_fecha_aut, ts_estado, ts_fecha_ult_mod)
VALUES ('Loan.ReadDisbursementForm.ReadPaymentFormSearch', @w_rol, 7, 'R', 0, '2017-02-06 16:15:54.82', 'V', '2017-02-06 16:15:54.82')

INSERT INTO dbo.ad_servicio_autorizado (ts_servicio, ts_rol, ts_producto, ts_tipo, ts_moneda, ts_fecha_aut, ts_estado, ts_fecha_ult_mod)
VALUES ('Loan.ReadDisbursementForm.RemoveDetailPaymentForm', @w_rol, 7, 'R', 0, '2017-02-06 16:15:54.807', 'V', '2017-02-06 16:15:54.807')

INSERT INTO dbo.ad_servicio_autorizado (ts_servicio, ts_rol, ts_producto, ts_tipo, ts_moneda, ts_fecha_aut, ts_estado, ts_fecha_ult_mod)
VALUES ('Loan.ReadDisbursementForm.ValidateAccountOtherBanks', @w_rol, 7, 'R', 0, '2017-02-06 16:15:54.81', 'V', '2017-02-06 16:15:54.81')

INSERT INTO dbo.ad_servicio_autorizado (ts_servicio, ts_rol, ts_producto, ts_tipo, ts_moneda, ts_fecha_aut, ts_estado, ts_fecha_ult_mod)
VALUES ('Remittance.RemittanceService.GroupRemittanceByClient', @w_rol, 1, 'R', 0, '2016-12-02 11:35:23.043', 'V', '2016-12-02 11:35:23.043')

INSERT INTO dbo.ad_servicio_autorizado (ts_servicio, ts_rol, ts_producto, ts_tipo, ts_moneda, ts_fecha_aut, ts_estado, ts_fecha_ult_mod)
VALUES ('Remittance.RemittanceService.QueryRemittanceByClient', @w_rol, 1, 'R', 0, '2016-12-02 11:15:49.927', 'V', '2016-12-02 11:15:49.927')

INSERT INTO dbo.ad_servicio_autorizado (ts_servicio, ts_rol, ts_producto, ts_tipo, ts_moneda, ts_fecha_aut, ts_estado, ts_fecha_ult_mod)
VALUES ('Loan.FundManagement.CreateFundResource', @w_rol, 7, 'R', 0, '2017-01-09 12:39:06.75', 'V', '2017-01-09 12:39:06.75')

INSERT INTO dbo.ad_servicio_autorizado (ts_servicio, ts_rol, ts_producto, ts_tipo, ts_moneda, ts_fecha_aut, ts_estado, ts_fecha_ult_mod)
VALUES ('Loan.FundManagement.SearchFundResource', @w_rol, 7, 'R', 0, '2017-01-09 12:39:06.75', 'V', '2017-01-09 12:39:06.75')

INSERT INTO dbo.ad_servicio_autorizado (ts_servicio, ts_rol, ts_producto, ts_tipo, ts_moneda, ts_fecha_aut, ts_estado, ts_fecha_ult_mod)
VALUES ('Loan.FundManagement.UpdateFundResource', @w_rol, 7, 'R', 0, '2017-01-09 12:39:06.75', 'V', '2017-01-09 12:39:06.75')

INSERT INTO dbo.ad_servicio_autorizado (ts_servicio, ts_rol, ts_producto, ts_tipo, ts_moneda, ts_fecha_aut, ts_estado, ts_fecha_ult_mod)
VALUES ('Loan.GroupPaymentManagement.SearchGroupDebts', @w_rol, 7, 'R', 0, '2017-01-09 12:39:06.75', 'V', '2017-01-09 12:39:06.75')

INSERT INTO dbo.ad_servicio_autorizado (ts_servicio, ts_rol, ts_producto, ts_tipo, ts_moneda, ts_fecha_aut, ts_estado, ts_fecha_ult_mod)
VALUES ('Loan.GroupPaymentManagement.ReadGroupInfo', @w_rol, 7, 'R', 0, '2017-01-09 12:39:06.75', 'V', '2017-01-09 12:39:06.75')

INSERT INTO dbo.ad_servicio_autorizado (ts_servicio, ts_rol, ts_producto, ts_tipo, ts_moneda, ts_fecha_aut, ts_estado, ts_fecha_ult_mod)
VALUES ('Loan.GroupPaymentManagement.InsertGroupPayment', @w_rol, 7, 'R', 0, '2017-01-09 12:39:06.75', 'V', '2017-01-09 12:39:06.75')

INSERT INTO dbo.ad_servicio_autorizado (ts_servicio, ts_rol, ts_producto, ts_tipo, ts_moneda, ts_fecha_aut, ts_estado, ts_fecha_ult_mod)
VALUES ('Loan.LoanMaintenance.LoanSimulatorServices', @w_rol, 7, 'R', 0, getdate(), 'V', getdate())

INSERT INTO dbo.ad_servicio_autorizado (ts_servicio, ts_rol, ts_producto, ts_tipo, ts_moneda, ts_fecha_aut, ts_estado, ts_fecha_ult_mod)
VALUES ('Loan.DebitOrderProcessingLog.SearchDebitOrderProcessingLog', @w_rol, 7, 'R', 0, getDate(), 'V', getDate())

INSERT INTO ad_servicio_autorizado (ts_servicio, ts_rol, ts_producto, ts_tipo, ts_moneda, ts_fecha_aut, ts_estado, ts_fecha_ult_mod)
VALUES ('Loan.SolidarityPayment.InsertSolidarityPayment', @w_rol, 7, 'R', 0, getdate(), 'V', getdate())
go


USE cobis
GO

DECLARE @rol int
SELECT @rol = ro_rol from cobis..ad_rol where ro_descripcion = 'MENU POR PROCESOS'

DELETE cts_serv_catalog WHERE csc_service_id IN ('Loan.ConciliationManagement.InsertFileInTemp', 'Loan.ConciliationManagement.SearchAllConciliations', 'Loan.ConciliationManagement.DeleteTemporary', 'Loan.ConciliationManagement.UploadFile', 'Loan.ConciliationManagement.SearchPaymentByFilter', 'Loan.GeneralInfo.GetCatalog', 'Loan.ConciliationManagement.ManualConciliation')
DELETE ad_servicio_autorizado WHERE ts_servicio IN ('Loan.ConciliationManagement.InsertFileInTemp', 'Loan.ConciliationManagement.SearchAllConciliations', 'Loan.ConciliationManagement.DeleteTemporary', 'Loan.ConciliationManagement.UploadFile', 'Loan.ConciliationManagement.SearchPaymentByFilter', 'Loan.GeneralInfo.GetCatalog', 'Loan.ConciliationManagement.ManualConciliation')

INSERT INTO dbo.ad_servicio_autorizado (ts_servicio, ts_rol, ts_producto, ts_tipo, ts_moneda, ts_fecha_aut, ts_estado, ts_fecha_ult_mod)
VALUES ('Loan.ConciliationManagement.InsertFileInTemp', @rol, 7, 'R', 0, getdate(), 'V', getdate())

INSERT INTO dbo.ad_servicio_autorizado (ts_servicio, ts_rol, ts_producto, ts_tipo, ts_moneda, ts_fecha_aut, ts_estado, ts_fecha_ult_mod)
VALUES ('Loan.ConciliationManagement.SearchPaymentByFilter', @rol, 7, 'R', 0, getdate(), 'V', getdate())

INSERT INTO dbo.ad_servicio_autorizado (ts_servicio, ts_rol, ts_producto, ts_tipo, ts_moneda, ts_fecha_aut, ts_estado, ts_fecha_ult_mod)
VALUES ('Loan.ConciliationManagement.DeleteTemporary', @rol, 7, 'R', 0, getdate(), 'V', getdate())

INSERT INTO dbo.ad_servicio_autorizado (ts_servicio, ts_rol, ts_producto, ts_tipo, ts_moneda, ts_fecha_aut, ts_estado, ts_fecha_ult_mod)
VALUES ('Loan.ConciliationManagement.UploadFile', @rol, 7, 'R', 0, getdate(), 'V', getdate())

INSERT INTO dbo.ad_servicio_autorizado (ts_servicio, ts_rol, ts_producto, ts_tipo, ts_moneda, ts_fecha_aut, ts_estado, ts_fecha_ult_mod)
VALUES ('Loan.GeneralInfo.GetCatalog', @rol, 7, 'R', 0, getdate(), 'V', getdate())

INSERT INTO dbo.ad_servicio_autorizado (ts_servicio, ts_rol, ts_producto, ts_tipo, ts_moneda, ts_fecha_aut, ts_estado, ts_fecha_ult_mod)
VALUES ('Loan.ConciliationManagement.ManualConciliation', @rol, 7, 'R', 0, getdate(), 'V', getdate())


INSERT INTO dbo.cts_serv_catalog (csc_service_id, csc_class_name, csc_method_name, csc_description, csc_trn, csc_component, csc_support_offline, csc_procedure_validation)
VALUES ('Loan.ConciliationManagement.InsertFileInTemp', 'cobiscorp.ecobis.assets.cloud.service.IConciliationManagement', 'insertFileInTemp', 'insertFileInTemp', 0, NULL, NULL, NULL)


INSERT INTO dbo.cts_serv_catalog (csc_service_id, csc_class_name, csc_method_name, csc_description, csc_trn, csc_component, csc_support_offline, csc_procedure_validation)
VALUES ('Loan.ConciliationManagement.SearchPaymentByFilter', 'cobiscorp.ecobis.assets.cloud.service.IConciliationManagement', 'searchPaymentByFilter', 'searchPaymentByFilter', 0, NULL, NULL, NULL)


INSERT INTO dbo.cts_serv_catalog (csc_service_id, csc_class_name, csc_method_name, csc_description, csc_trn, csc_component, csc_support_offline, csc_procedure_validation)
VALUES ('Loan.ConciliationManagement.DeleteTemporary', 'cobiscorp.ecobis.assets.cloud.service.IConciliationManagement', 'deleteTemporary', 'deleteTemporary', 0, NULL, NULL, NULL)


INSERT INTO dbo.cts_serv_catalog (csc_service_id, csc_class_name, csc_method_name, csc_description, csc_trn, csc_component, csc_support_offline, csc_procedure_validation)
VALUES ('Loan.ConciliationManagement.UploadFile', 'cobiscorp.ecobis.assets.cloud.service.IConciliationManagement', 'uploadFile', 'uploadFile', 0, NULL, NULL, NULL)


INSERT INTO dbo.cts_serv_catalog (csc_service_id, csc_class_name, csc_method_name, csc_description, csc_trn, csc_component, csc_support_offline, csc_procedure_validation)
VALUES ('Loan.GeneralInfo.GetCatalog', 'cobiscorp.ecobis.assets.cloud.service.IGeneralInfo', 'getCatalog', 'getCatalog', 0, NULL, NULL, NULL)

INSERT INTO dbo.cts_serv_catalog (csc_service_id, csc_class_name, csc_method_name, csc_description, csc_trn, csc_component, csc_support_offline, csc_procedure_validation)
VALUES ('Loan.ConciliationManagement.ManualConciliation', 'cobiscorp.ecobis.assets.cloud.service.IConciliationManagement', 'manualConciliation', 'manualConciliation', 0, NULL, NULL, NULL)

GO


use cobis
go

declare @w_rol integer

select @w_rol = ro_rol from ad_rol
where ro_descripcion='MENU POR PROCESOS'

DELETE FROM cts_serv_catalog WHERE csc_service_id in ('Loan.GroupTransactManagement.ReadGroupTransactionInfo','Loan.GroupTransactManagement.ReadCollateralGroupInfo','Loan.FlowProcessManagement.SendCollateralMail')

INSERT INTO cts_serv_catalog (csc_service_id, csc_class_name, csc_method_name, csc_description, csc_trn, csc_component, csc_support_offline, csc_procedure_validation) VALUES ('Loan.GroupTransactManagement.ReadGroupTransactionInfo', 'cobiscorp.ecobis.assets.cloud.service.IGroupTransactManagement', 'readGroupTransactionInfo', 'readGroupTransactionInfo', 7283, NULL, NULL, NULL)
INSERT INTO cts_serv_catalog (csc_service_id, csc_class_name, csc_method_name, csc_description, csc_trn, csc_component, csc_support_offline, csc_procedure_validation) VALUES ('Loan.GroupTransactManagement.ReadCollateralGroupInfo', 'cobiscorp.ecobis.assets.cloud.service.IGroupTransactManagement', 'readCollateralGroupInfo', 'readCollateralGroupInfo', 7284, NULL, NULL, NULL)
INSERT INTO cts_serv_catalog (csc_service_id, csc_class_name, csc_method_name, csc_description, csc_trn, csc_component, csc_support_offline, csc_procedure_validation) VALUES ('Loan.FlowProcessManagement.SendCollateralMail', 'cobiscorp.ecobis.assets.cloud.service.IFlowProcessManagement', 'sendCollateralMail', 'sendCollateralMail', 7284, NULL, NULL, NULL)


DELETE FROM ad_servicio_autorizado WHERE ts_servicio in ('Loan.GroupTransactManagement.ReadGroupTransactionInfo','Loan.GroupTransactManagement.ReadCollateralGroupInfo','Loan.FlowProcessManagement.SendCollateralMail')

INSERT INTO ad_servicio_autorizado (ts_servicio, ts_rol, ts_producto, ts_tipo, ts_moneda, ts_fecha_aut, ts_estado, ts_fecha_ult_mod) VALUES ('Loan.GroupTransactManagement.ReadGroupTransactionInfo', @w_rol, 7, 'R', 0, getdate(), 'V', getdate())
INSERT INTO ad_servicio_autorizado (ts_servicio, ts_rol, ts_producto, ts_tipo, ts_moneda, ts_fecha_aut, ts_estado, ts_fecha_ult_mod) VALUES ('Loan.GroupTransactManagement.ReadCollateralGroupInfo', @w_rol, 7, 'R', 0, getdate(), 'V', getdate())
INSERT INTO ad_servicio_autorizado (ts_servicio, ts_rol, ts_producto, ts_tipo, ts_moneda, ts_fecha_aut, ts_estado, ts_fecha_ult_mod) VALUES ('Loan.FlowProcessManagement.SendCollateralMail', @w_rol, 7, 'R', 0, getdate(), 'V', getdate())
go

use cobis
go

IF EXISTS (SELECT * FROM cts_serv_catalog WHERE csc_service_id = 'Loan.LoanMaintenance.UpdateLoanGroup')
        UPDATE cts_serv_catalog SET csc_class_name = 'cobiscorp.ecobis.assets.cloud.service.ILoanMaintenance', csc_method_name = 'updateLoanGroup', csc_description = '', csc_trn = 73904 WHERE csc_service_id = 'Loan.LoanMaintenance.UpdateLoanGroup'
ELSE
        INSERT INTO cts_serv_catalog (csc_service_id, csc_class_name, csc_method_name, csc_description, csc_trn ) VALUES ('Loan.LoanMaintenance.UpdateLoanGroup', 'cobiscorp.ecobis.assets.cloud.service.ILoanMaintenance', 'updateLoanGroup', '', 73904)
go
  
declare @w_moneda tinyint,
        @w_rol    tinyint
    
select @w_rol = ro_rol
from cobis..ad_rol
where ro_descripcion like '%MENU POR PROCESOS%'
	
if not exists(select 1 from cobis..ad_servicio_autorizado where ts_servicio= 'Loan.LoanMaintenance.UpdateLoanGroup')
begin     
          insert into cobis..ad_servicio_autorizado (ts_servicio                           , ts_rol, ts_producto, ts_tipo, ts_moneda, ts_fecha_aut, ts_estado, ts_fecha_ult_mod)
                                             values ('Loan.LoanMaintenance.UpdateLoanGroup', @w_rol, 7         , 'R'     , 0        , getdate()   , 'V'      , getdate())                                     
end
go

use cobis
GO
--SearchRejectedDispersions

IF EXISTS (SELECT * FROM cts_serv_catalog WHERE csc_service_id = 'Loan.RejectedDispersions.SearchRejectedDispersions')
  UPDATE cts_serv_catalog SET csc_class_name = 'cobiscorp.ecobis.assets.cloud.service.IRejectedDispersions', csc_method_name = 'searchRejectedDispersions', csc_description = '', csc_trn = 77502, csc_procedure_validation = 'Y' WHERE csc_service_id = 'Loan.RejectedDispersions.SearchRejectedDispersions'
ELSE
  INSERT INTO cts_serv_catalog (csc_service_id, csc_class_name, csc_method_name, csc_description, csc_trn , csc_procedure_validation) VALUES ('Loan.RejectedDispersions.SearchRejectedDispersions', 'cobiscorp.ecobis.assets.cloud.service.IRejectedDispersions', 'searchRejectedDispersions', '', 77502, 'Y')
GO

-- Servicios Autorizados

DECLARE @rol int, @w_producto int
SELECT @rol = ro_rol from cobis..ad_rol where ro_descripcion = 'MENU POR PROCESOS'
SELECT @w_producto = 7 -- select @w_producto = pd_producto from cl_producto where pd_descripcion = 'CARTERA'

IF NOT EXISTS (SELECT 1 FROM dbo.ad_servicio_autorizado WHERE ts_servicio = 'Loan.RejectedDispersions.SearchRejectedDispersions' AND ts_rol = @rol)
    INSERT INTO dbo.ad_servicio_autorizado (ts_servicio, ts_rol, ts_producto, ts_tipo, ts_moneda, ts_fecha_aut, ts_estado, ts_fecha_ult_mod)
        VALUES ('Loan.RejectedDispersions.SearchRejectedDispersions', @rol, 7, 'R', 0, getdate(), 'V', getdate())


--DispersionActions

IF EXISTS (SELECT * FROM cts_serv_catalog WHERE csc_service_id = 'Loan.RejectedDispersions.DispersionActions')
  UPDATE cts_serv_catalog SET csc_class_name = 'cobiscorp.ecobis.assets.cloud.service.IRejectedDispersions', csc_method_name = 'dispersionActions', csc_description = '', csc_trn = 77503, csc_procedure_validation = 'Y' WHERE csc_service_id = 'Loan.RejectedDispersions.DispersionActions'
ELSE
  INSERT INTO cts_serv_catalog (csc_service_id, csc_class_name, csc_method_name, csc_description, csc_trn , csc_procedure_validation) VALUES ('Loan.RejectedDispersions.DispersionActions', 'cobiscorp.ecobis.assets.cloud.service.IRejectedDispersions', 'dispersionActions', '', 77503, 'Y')
GO

-- Servicios Autorizados

DECLARE @rol int, @w_producto int
SELECT @rol = ro_rol from cobis..ad_rol where ro_descripcion = 'MENU POR PROCESOS'
SELECT @w_producto = 7 -- select @w_producto = pd_producto from cl_producto where pd_descripcion = 'CARTERA'

IF NOT EXISTS (SELECT 1 FROM dbo.ad_servicio_autorizado WHERE ts_servicio = 'Loan.RejectedDispersions.DispersionActions' AND ts_rol = @rol)
    INSERT INTO dbo.ad_servicio_autorizado (ts_servicio, ts_rol, ts_producto, ts_tipo, ts_moneda, ts_fecha_aut, ts_estado, ts_fecha_ult_mod)
        VALUES ('Loan.RejectedDispersions.DispersionActions', @rol, 7, 'R', 0, getdate(), 'V', getdate())

go


use cobis
go

IF EXISTS (SELECT * FROM cts_serv_catalog WHERE csc_service_id = 'Loan.ProductListCredit.QueryPendingPayment')
        UPDATE cts_serv_catalog SET csc_class_name = 'cobiscorp.ecobis.assets.cloud.service.IProductListCredit', csc_method_name = 'queryPendingPayment', csc_description = '', csc_trn = 7058 WHERE csc_service_id = 'Loan.ProductListCredit.QueryPendingPayment'
ELSE
        INSERT INTO cts_serv_catalog (csc_service_id, csc_class_name, csc_method_name, csc_description, csc_trn ) VALUES ('Loan.ProductListCredit.QueryPendingPayment', 'cobiscorp.ecobis.assets.cloud.service.IProductListCredit', 'queryPendingPayment', '', 7058)
go
  
declare @w_moneda tinyint,
        @w_rol    tinyint
    
select @w_rol = ro_rol
from cobis..ad_rol
where ro_descripcion like '%MENU POR PROCESOS%'
	
if not exists(select 1 from cobis..ad_servicio_autorizado where ts_servicio= 'Loan.ProductListCredit.QueryPendingPayment')
begin     
          insert into cobis..ad_servicio_autorizado (ts_servicio                           , ts_rol, ts_producto, ts_tipo, ts_moneda, ts_fecha_aut, ts_estado, ts_fecha_ult_mod)
                                             values ('Loan.ProductListCredit.QueryPendingPayment', @w_rol, 7         , 'R'     , 0        , getdate()   , 'V'      , getdate())                                     
end
go

declare @w_moneda tinyint,
        @w_rol    tinyint
    
select @w_rol = ro_rol
from cobis..ad_rol
where ro_descripcion like '%MENU POR PROCESOS%'
	
if not exists(select 1 from cobis..ad_servicio_autorizado where ts_servicio= 'IndividualLoan.DisbursementManagement.DisburseRevolvingCreditLine')
begin     
          insert into cobis..ad_servicio_autorizado (ts_servicio                           , ts_rol, ts_producto, ts_tipo, ts_moneda, ts_fecha_aut, ts_estado, ts_fecha_ult_mod)
                                             values ('IndividualLoan.DisbursementManagement.DisburseRevolvingCreditLine', @w_rol, 7         , 'R'     , 0        , getdate()   , 'V'      , getdate())                                     
end
go

declare @w_moneda tinyint,
        @w_rol    tinyint
    
select @w_rol = ro_rol
from cobis..ad_rol
where ro_descripcion like '%MENU POR PROCESOS%'
	
if not exists(select 1 from cobis..ad_servicio_autorizado where ts_servicio= 'IndividualLoan.Queries.QueryLcrInfo')
begin     
          insert into cobis..ad_servicio_autorizado (ts_servicio                           , ts_rol, ts_producto, ts_tipo, ts_moneda, ts_fecha_aut, ts_estado, ts_fecha_ult_mod)
                                             values ('IndividualLoan.Queries.QueryLcrInfo', @w_rol, 7         , 'R'     , 0        , getdate()   , 'V'      , getdate())                                     
end
go 

declare @w_moneda tinyint,
        @w_rol    tinyint
    
select @w_rol = ro_rol
from cobis..ad_rol
where ro_descripcion like '%MENU POR PROCESOS%'
	
if not exists(select 1 from cobis..ad_servicio_autorizado where ts_servicio= 'IndividualLoan.Queries.QueryGeneralParameters')
begin     
          insert into cobis..ad_servicio_autorizado (ts_servicio                           , ts_rol, ts_producto, ts_tipo, ts_moneda, ts_fecha_aut, ts_estado, ts_fecha_ult_mod)
                                             values ('IndividualLoan.Queries.QueryGeneralParameters', @w_rol, 7         , 'R'     , 0        , getdate()   , 'V'      , getdate())                                     
end


go


declare @w_rol smallint, @w_moneda tinyint
   
select @w_rol = ro_rol from cobis..ad_rol where ro_descripcion = 'MENU POR PROCESOS'

select @w_moneda = pa_tinyint
from cobis..cl_parametro
where pa_nemonico = 'CMNAC'
and pa_producto = 'ADM'

delete ad_servicio_autorizado where ts_servicio = 'Loan.PaymentApplication.ReadPaymentCard'
delete cts_serv_catalog WHERE csc_service_id = 'Loan.PaymentApplication.ReadPaymentCard'

INSERT INTO cts_serv_catalog (csc_service_id, csc_class_name, csc_method_name, csc_description, csc_trn ) 
VALUES ('Loan.PaymentApplication.ReadPaymentCard', 'cobiscorp.ecobis.assets.cloud.service.IPaymentApplication', 'readPaymentCard', '', 77505)

insert into cobis..ad_servicio_autorizado(ts_servicio, ts_rol, ts_producto ,ts_tipo, ts_moneda, ts_fecha_aut, ts_estado, ts_fecha_ult_mod) 
values('Loan.PaymentApplication.ReadPaymentCard', @w_rol, 7, 'R', @w_moneda, getdate(), 'V', getdate()) 

go


--------------------------------------------------------------------------------------------

--Autorizaciones Para Pantalla de Call Center

--------------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------------
-- REGISTRO DE SERVICIOS
--------------------------------------------------------------------------------------------
--Ruta TFS                   : 
--Nombre Archivo             : .sql

print '-- REGISTRO DE SERVICIOS'
go

use cobis
go

-- Parametrizar el rol
USE cobis
GO
    
DECLARE @w_rol int, @w_producto INT,@w_moneda TINYINT
SELECT  @w_rol = ro_rol from cobis..ad_rol where ro_descripcion='CALL CENTER'
SELECT @w_producto = 7 -- select @w_producto = pd_producto from cl_producto where pd_descripcion = 'CARTERA'
select @w_moneda = pa_tinyint from cobis..cl_parametro where pa_nemonico = 'MLO' and pa_producto = 'ADM'

/*Inserto el Rol si no existe */  
    
if not exists (select 1 from cobis..ad_rol where ro_descripcion = 'CALL CENTER')
begin
    select @w_rol_1 =  max(ro_rol)+1 from cobis..ad_rol
    insert into cobis..ad_rol (ro_rol, ro_filial, ro_descripcion, ro_fecha_crea, ro_creador, ro_estado, ro_fecha_ult_mod, ro_time_out)
    values (@w_rol_1, 1, 'CALL CENTER', getdate(), 1, 'V', getdate(), 9000)
END


if exists (select 1 from cobis..ad_rol where ro_descripcion = 'CALL CENTER')
begin
    select @w_rol = ro_rol from ad_rol where ro_descripcion = 'CALL CENTER'
	
    if not exists (select 1 from cts_serv_catalog where csc_service_id = 'BussinesCallCenter.CallCenterManager.SearchQuestion')	
    insert into cts_serv_catalog
    (csc_service_id, csc_class_name, csc_method_name, csc_description, csc_trn, csc_support_offline, csc_component, csc_procedure_validation)
    values('BussinesCallCenter.CallCenterManager.SearchQuestion',  'cobiscorp.ecobis.bussinescallcenter.service.ICallCenterManager', 'searchQuestion', '', 0, null, null, 'N')

    if not exists (select 1 from ad_servicio_autorizado where 
    ts_servicio = 'BussinesCallCenter.CallCenterManager.SearchQuestion' and ts_rol = @w_rol and ts_producto = @w_producto and ts_moneda = @w_moneda)    
    insert into ad_servicio_autorizado
    (ts_servicio, ts_producto, ts_tipo, ts_moneda, ts_fecha_aut, ts_rol, ts_estado, ts_fecha_ult_mod)
    values('BussinesCallCenter.CallCenterManager.SearchQuestion', @w_producto, 'R', @w_moneda, getdate(), @w_rol, 'V', getdate())
end
else
begin 
    print 'cambio rol'
	select @w_rol = ro_rol from ad_rol where ro_descripcion = 'ADMINISTRADOR'
    if not exists (select 1 from cts_serv_catalog where csc_service_id = 'BussinesCallCenter.CallCenterManager.SearchQuestion')	
    insert into cts_serv_catalog
    (csc_service_id, csc_class_name, csc_method_name, csc_description, csc_trn, csc_support_offline, csc_component, csc_procedure_validation)
    values('BussinesCallCenter.CallCenterManager.SearchQuestion',  'cobiscorp.ecobis.bussinescallcenter.service.ICallCenterManager', 'searchQuestion', '', 0, null, null, 'N')

    if not exists (select 1 from ad_servicio_autorizado where 
    ts_servicio = 'BussinesCallCenter.CallCenterManager.SearchQuestion' and ts_rol = @w_rol and ts_producto = @w_producto and ts_moneda = @w_moneda)    
    insert into ad_servicio_autorizado
    (ts_servicio, ts_producto, ts_tipo, ts_moneda, ts_fecha_aut, ts_rol, ts_estado, ts_fecha_ult_mod)
    values('BussinesCallCenter.CallCenterManager.SearchQuestion', @w_producto, 'R', @w_moneda, getdate(), @w_rol, 'V', getdate())	
end

go



--------------------------------------------------------------------------------------------
-- REGISTRO DE SERVICIOS
--------------------------------------------------------------------------------------------
--Ruta TFS                   : 
--Nombre Archivo             : .sql

print '-- REGISTRO DE SERVICIOS Validation Question'
go

use cobis
go

-- Parametrizar el rol
USE cobis
GO
    
DECLARE @w_rol int, @w_producto INT,@w_moneda TINYINT
SELECT  @w_rol = ro_rol from cobis..ad_rol where ro_descripcion='CALL CENTER'
SELECT @w_producto = 7 -- select @w_producto = pd_producto from cl_producto where pd_descripcion = 'CARTERA'
select @w_moneda = pa_tinyint from cobis..cl_parametro where pa_nemonico = 'MLO' and pa_producto = 'ADM'


if exists (select 1 from cobis..ad_rol where ro_descripcion = 'CALL CENTER')
begin
    select @w_rol = ro_rol from ad_rol where ro_descripcion = 'CALL CENTER'
	
    if not exists (select 1 from cts_serv_catalog where csc_service_id = 'BussinesCallCenter.CallCenterManager.ValidationQuestion')	
    insert into cts_serv_catalog
    (csc_service_id, csc_class_name, csc_method_name, csc_description, csc_trn, csc_support_offline, csc_component, csc_procedure_validation)
    values('BussinesCallCenter.CallCenterManager.ValidationQuestion',  'cobiscorp.ecobis.bussinescallcenter.service.ICallCenterManager', 'validationQuestion', '', 0, null, null, 'N')

    if not exists (select 1 from ad_servicio_autorizado where 
    ts_servicio = 'BussinesCallCenter.CallCenterManager.ValidationQuestion' and ts_rol = @w_rol and ts_producto = @w_producto and ts_moneda = @w_moneda)    
    insert into ad_servicio_autorizado
    (ts_servicio, ts_producto, ts_tipo, ts_moneda, ts_fecha_aut, ts_rol, ts_estado, ts_fecha_ult_mod)
    values('BussinesCallCenter.CallCenterManager.ValidationQuestion', @w_producto, 'R', @w_moneda, getdate(), @w_rol, 'V', getdate())
end
else
begin 
    print 'cambio rol'
	select @w_rol = ro_rol from ad_rol where ro_descripcion = 'ADMINISTRADOR'
    if not exists (select 1 from cts_serv_catalog where csc_service_id = 'BussinesCallCenter.CallCenterManager.ValidationQuestion')	
    insert into cts_serv_catalog
    (csc_service_id, csc_class_name, csc_method_name, csc_description, csc_trn, csc_support_offline, csc_component, csc_procedure_validation)
    values('BussinesCallCenter.CallCenterManager.ValidationQuestion',  'cobiscorp.ecobis.bussinescallcenter.service.ICallCenterManager', 'validationQuestion', '', 0, null, null, 'N')

    if not exists (select 1 from ad_servicio_autorizado where 
    ts_servicio = 'BussinesCallCenter.CallCenterManager.ValidationQuestion' and ts_rol = @w_rol and ts_producto = @w_producto and ts_moneda = @w_moneda)    
    insert into ad_servicio_autorizado
    (ts_servicio, ts_producto, ts_tipo, ts_moneda, ts_fecha_aut, ts_rol, ts_estado, ts_fecha_ult_mod)
    values('BussinesCallCenter.CallCenterManager.ValidationQuestion', @w_producto, 'R', @w_moneda, getdate(), @w_rol, 'V', getdate())	
end

go

--------------------------------------------------------------------------------------------
-- REGISTRO DE SERVICIOS
--------------------------------------------------------------------------------------------
--Ruta TFS                   : 
--Nombre Archivo             : .sql

print '-- REGISTRO DE SERVICIOS searchLoginCallCenter'
go

use cobis
go

-- Parametrizar el rol
USE cobis
GO
    
DECLARE @w_rol int, @w_producto INT,@w_moneda TINYINT
SELECT  @w_rol = ro_rol from cobis..ad_rol where ro_descripcion='CALL CENTER'
SELECT @w_producto = 7 -- select @w_producto = pd_producto from cl_producto where pd_descripcion = 'CARTERA'
select @w_moneda = pa_tinyint from cobis..cl_parametro where pa_nemonico = 'MLO' and pa_producto = 'ADM'


if exists (select 1 from cobis..ad_rol where ro_descripcion = 'CALL CENTER')
begin
    select @w_rol = ro_rol from ad_rol where ro_descripcion = 'CALL CENTER'
	
    /*GenerateMatrix*/
    if not exists (select 1 from cts_serv_catalog where csc_service_id = 'BussinesCallCenter.CallCenterManager.SearchLoginCallCenter')	
    insert into cts_serv_catalog
    (csc_service_id, csc_class_name, csc_method_name, csc_description, csc_trn, csc_support_offline, csc_component, csc_procedure_validation)
    values('BussinesCallCenter.CallCenterManager.SearchLoginCallCenter',  'cobiscorp.ecobis.bussinescallcenter.service.ICallCenterManager', 'searchLoginCallCenter', '', 0, null, null, 'N')

    if not exists (select 1 from ad_servicio_autorizado where 
    ts_servicio = 'BussinesCallCenter.CallCenterManager.SearchLoginCallCenter' and ts_rol = @w_rol and ts_producto = @w_producto and ts_moneda = @w_moneda)    
    insert into ad_servicio_autorizado
    (ts_servicio, ts_producto, ts_tipo, ts_moneda, ts_fecha_aut, ts_rol, ts_estado, ts_fecha_ult_mod)
    values('BussinesCallCenter.CallCenterManager.SearchLoginCallCenter', @w_producto, 'R', @w_moneda, getdate(), @w_rol, 'V', getdate())
end
else
begin 
    print 'cambio rol'
	select @w_rol = ro_rol from ad_rol where ro_descripcion = 'ADMINISTRADOR'
    /*GenerateMatrix*/
    if not exists (select 1 from cts_serv_catalog where csc_service_id = 'BussinesCallCenter.CallCenterManager.SearchLoginCallCenter')	
    insert into cts_serv_catalog
    (csc_service_id, csc_class_name, csc_method_name, csc_description, csc_trn, csc_support_offline, csc_component, csc_procedure_validation)
    values('BussinesCallCenter.CallCenterManager.SearchLoginCallCenter',  'cobiscorp.ecobis.bussinescallcenter.service.ICallCenterManager', 'searchLoginCallCenter', '', 0, null, null, 'N')

    if not exists (select 1 from ad_servicio_autorizado where 
    ts_servicio = 'BussinesCallCenter.CallCenterManager.ValidationQuestion' and ts_rol = @w_rol and ts_producto = @w_producto and ts_moneda = @w_moneda)    
    insert into ad_servicio_autorizado
    (ts_servicio, ts_producto, ts_tipo, ts_moneda, ts_fecha_aut, ts_rol, ts_estado, ts_fecha_ult_mod)
    values('BussinesCallCenter.CallCenterManager.SearchLoginCallCenter', @w_producto, 'R', @w_moneda, getdate(), @w_rol, 'V', getdate())	
end

go


--------------------------------------------------------------------------------------------
-- REGISTRO DE SERVICIOS
--------------------------------------------------------------------------------------------
--Ruta TFS                   : 
--Nombre Archivo             : .sql

print '-- REGISTRO DE SERVICIOS AutorizeDisposition'
go

use cobis
go

-- Parametrizar el rol
USE cobis
GO
    
DECLARE @w_rol int, @w_producto INT,@w_moneda TINYINT
SELECT  @w_rol = ro_rol from cobis..ad_rol where ro_descripcion='CALL CENTER'
SELECT @w_producto = 7 -- select @w_producto = pd_producto from cl_producto where pd_descripcion = 'CARTERA'
select @w_moneda = pa_tinyint from cobis..cl_parametro where pa_nemonico = 'MLO' and pa_producto = 'ADM'


if exists (select 1 from cobis..ad_rol where ro_descripcion = 'CALL CENTER')
begin
    select @w_rol = ro_rol from ad_rol where ro_descripcion = 'CALL CENTER'
	
    /*GenerateMatrix*/
    if not exists (select 1 from cts_serv_catalog where csc_service_id = 'BussinesCallCenter.CallCenterManager.AutorizeDisposition')	
    insert into cts_serv_catalog
    (csc_service_id, csc_class_name, csc_method_name, csc_description, csc_trn, csc_support_offline, csc_component, csc_procedure_validation)
    values('BussinesCallCenter.CallCenterManager.AutorizeDisposition',  'cobiscorp.ecobis.bussinescallcenter.service.ICallCenterManager', 'autorizeDisposition', '', 0, null, null, 'N')

    if not exists (select 1 from ad_servicio_autorizado where 
    ts_servicio = 'BussinesCallCenter.CallCenterManager.AutorizeDisposition' and ts_rol = @w_rol and ts_producto = @w_producto and ts_moneda = @w_moneda)    
    insert into ad_servicio_autorizado
    (ts_servicio, ts_producto, ts_tipo, ts_moneda, ts_fecha_aut, ts_rol, ts_estado, ts_fecha_ult_mod)
    values('BussinesCallCenter.CallCenterManager.AutorizeDisposition', @w_producto, 'R', @w_moneda, getdate(), @w_rol, 'V', getdate())
end
else
begin 
    print 'cambio rol'
	select @w_rol = ro_rol from ad_rol where ro_descripcion = 'ADMINISTRADOR'
    /*GenerateMatrix*/
    if not exists (select 1 from cts_serv_catalog where csc_service_id = 'BussinesCallCenter.CallCenterManager.AutorizeDisposition')	
    insert into cts_serv_catalog
    (csc_service_id, csc_class_name, csc_method_name, csc_description, csc_trn, csc_support_offline, csc_component, csc_procedure_validation)
    values('BussinesCallCenter.CallCenterManager.AutorizeDisposition',  'cobiscorp.ecobis.bussinescallcenter.service.ICallCenterManager', 'autorizeDisposition', '', 0, null, null, 'N')

    if not exists (select 1 from ad_servicio_autorizado where 
    ts_servicio = 'BussinesCallCenter.CallCenterManager.AutorizeDisposition' and ts_rol = @w_rol and ts_producto = @w_producto and ts_moneda = @w_moneda)    
    insert into ad_servicio_autorizado
    (ts_servicio, ts_producto, ts_tipo, ts_moneda, ts_fecha_aut, ts_rol, ts_estado, ts_fecha_ult_mod)
    values('BussinesCallCenter.CallCenterManager.AutorizeDisposition', @w_producto, 'R', @w_moneda, getdate(), @w_rol, 'V', getdate())	
end



--Autorizaciones para pantalla Bloqueo LCR
declare @w_rol smallint, @w_moneda tinyint, @w_producto int
   
select @w_rol = ro_rol from cobis..ad_rol where ro_descripcion = 'MENU POR PROCESOS'

select @w_producto = 7

select @w_moneda = pa_tinyint
from cobis..cl_parametro
where pa_nemonico = 'CMNAC'
and pa_producto = 'ADM'

if not exists (select 1 from cts_serv_catalog where csc_service_id = 'IndividualLoan.BlockManagement.BlockCredit')
   INSERT INTO cts_serv_catalog (csc_service_id, csc_class_name, csc_method_name, csc_description, csc_trn ) 
   VALUES ('IndividualLoan.BlockManagement.BlockCredit', 'cobiscorp.ecobis.individualloan.service.IBlockManagement', 'blockCredit', '', 77506)

if not exists (select 1 from ad_servicio_autorizado where ts_servicio = 'IndividualLoan.BlockManagement.BlockCredit' and ts_rol = @w_rol and ts_producto = @w_producto and ts_moneda = @w_moneda)    
   insert into cobis..ad_servicio_autorizado(ts_servicio, ts_rol, ts_producto ,ts_tipo, ts_moneda, ts_fecha_aut, ts_estado, ts_fecha_ult_mod) 
   values('IndividualLoan.BlockManagement.BlockCredit', @w_rol, 7, 'R', @w_moneda, getdate(), 'V', getdate()) 


go

/* PANTALLA DE CANDIDATOS A LCR*/
use cobis
go


if exists (select * from cts_serv_catalog where csc_service_id = 'Loan.RevolvingManagement.ActionsCreditCandidates')
	update cts_serv_catalog SET csc_class_name = 'cobiscorp.ecobis.assets.cloud.service.IRevolvingManagement', csc_method_name = 'actionsCreditCandidates', csc_description = '', csc_trn = 1722 where csc_service_id = 'Loan.RevolvingManagement.ActionsCreditCandidates'
else
	insert into cts_serv_catalog (csc_service_id, csc_class_name, csc_method_name, csc_description, csc_trn ) values ('Loan.RevolvingManagement.ActionsCreditCandidates', 'cobiscorp.ecobis.assets.cloud.service.IRevolvingManagement', 'actionsCreditCandidates', '', 1722)
GO

if exists (select * from cts_serv_catalog where csc_service_id = 'Loan.RevolvingManagement.OfficerCreditCandidates')
	update cts_serv_catalog SET csc_class_name = 'cobiscorp.ecobis.assets.cloud.service.IRevolvingManagement', csc_method_name = 'officerCreditCandidates', csc_description = '', csc_trn = 1720 where csc_service_id = 'Loan.RevolvingManagement.OfficerCreditCandidates'
else
	insert into cts_serv_catalog (csc_service_id, csc_class_name, csc_method_name, csc_description, csc_trn ) values ('Loan.RevolvingManagement.OfficerCreditCandidates', 'cobiscorp.ecobis.assets.cloud.service.IRevolvingManagement', 'officerCreditCandidates', '', 1720)
GO

if exists (select * from cts_serv_catalog where csc_service_id = 'Loan.RevolvingManagement.QueryCreditCandidates')
	update cts_serv_catalog SET csc_class_name = 'cobiscorp.ecobis.assets.cloud.service.IRevolvingManagement', csc_method_name = 'queryCreditCandidates', csc_description = '', csc_trn = 1719 where csc_service_id = 'Loan.RevolvingManagement.QueryCreditCandidates'
else
	insert into cts_serv_catalog (csc_service_id, csc_class_name, csc_method_name, csc_description, csc_trn ) values ('Loan.RevolvingManagement.QueryCreditCandidates', 'cobiscorp.ecobis.assets.cloud.service.IRevolvingManagement', 'queryCreditCandidates', '', 1719)
GO

if exists (select * from cts_serv_catalog where csc_service_id = 'Loan.RevolvingManagement.UpdateCreditCandidates')
	update cts_serv_catalog SET csc_class_name = 'cobiscorp.ecobis.assets.cloud.service.IRevolvingManagement', csc_method_name = 'updateCreditCandidates', csc_description = '', csc_trn = 1721 where csc_service_id = 'Loan.RevolvingManagement.UpdateCreditCandidates'
else
	insert into cts_serv_catalog (csc_service_id, csc_class_name, csc_method_name, csc_description, csc_trn ) values ('Loan.RevolvingManagement.UpdateCreditCandidates', 'cobiscorp.ecobis.assets.cloud.service.IRevolvingManagement', 'updateCreditCandidates', '', 1721)
GO

/* Ejecucion de Matriz */
if exists (select * from cts_serv_catalog where csc_service_id = 'OrchestrationClientValidationServiceSERVImpl.getMatrixRulesInfoForClient')
	update cts_serv_catalog SET csc_class_name = 'com.cobiscorp.ecobis.cobiscloudorchestration.bsl.serv.bsl.IOrchestrationClientValidationService', csc_method_name = 'getMatrixRulesInfoForClient', csc_description = '' where csc_service_id = 'OrchestrationClientValidationServiceSERVImpl.getMatrixRulesInfoForClient'
else
	insert into cts_serv_catalog (csc_service_id, csc_class_name, csc_method_name, csc_description, csc_trn ) values ('OrchestrationClientValidationServiceSERVImpl.getMatrixRulesInfoForClient', 'com.cobiscorp.ecobis.cobiscloudorchestration.bsl.serv.bsl.IOrchestrationClientValidationService', 'getMatrixRulesInfoForClient', '', 0)
GO

declare @w_rol int, @w_producto int
select @w_rol = ro_rol  from cobis..ad_rol where ro_descripcion = 'FUNCIONARIO OFICINA'
select @w_producto = pd_producto from cl_producto where pd_descripcion = 'ADMINISTRACION'

if exists(select 1 from cobis..ad_rol where ro_descripcion = 'FUNCIONARIO OFICINA')
begin  
	delete cobis..ad_servicio_autorizado where ts_servicio = 'Loan.RevolvingManagement.ActionsCreditCandidates'
	insert into cobis..ad_servicio_autorizado values('Loan.RevolvingManagement.ActionsCreditCandidates', @w_rol,@w_producto,'R',0,getdate(),'V',getdate())
	print 'insert en ad_servicio_autorizado ActionsCreditCandidates FUNCIONARIO OFICINA'
end

if exists(select 1 from cobis..ad_rol where ro_descripcion = 'FUNCIONARIO OFICINA')
begin  
	delete cobis..ad_servicio_autorizado where ts_servicio = 'Loan.RevolvingManagement.OfficerCreditCandidates'
	insert into cobis..ad_servicio_autorizado values('Loan.RevolvingManagement.OfficerCreditCandidates', @w_rol,@w_producto,'R',0,getdate(),'V',getdate())
	print 'insert en ad_servicio_autorizado OfficerCreditCandidates FUNCIONARIO OFICINA'
end

if exists(select 1 from cobis..ad_rol where ro_descripcion = 'FUNCIONARIO OFICINA')
begin  
	delete cobis..ad_servicio_autorizado where ts_servicio = 'Loan.RevolvingManagement.QueryCreditCandidates'
	insert into cobis..ad_servicio_autorizado values('Loan.RevolvingManagement.QueryCreditCandidates', @w_rol,@w_producto,'R',0,getdate(),'V',getdate())
	print 'insert en ad_servicio_autorizado QueryCreditCandidates FUNCIONARIO OFICINA'
end

if exists(select 1 from cobis..ad_rol where ro_descripcion = 'FUNCIONARIO OFICINA')
begin  
	delete cobis..ad_servicio_autorizado where ts_servicio = 'Loan.RevolvingManagement.UpdateCreditCandidates'
	insert into cobis..ad_servicio_autorizado values('Loan.RevolvingManagement.UpdateCreditCandidates', @w_rol,@w_producto,'R',0,getdate(),'V',getdate())
	print 'insert en ad_servicio_autorizado UpdateCreditCandidates FUNCIONARIO OFICINA'
end

if exists(select 1 from cobis..ad_rol where ro_descripcion = 'FUNCIONARIO OFICINA')
begin  
	delete cobis..ad_servicio_autorizado where ts_servicio = 'OrchestrationClientValidationServiceSERVImpl.getMatrixRulesInfoForClient'
	insert into cobis..ad_servicio_autorizado values('OrchestrationClientValidationServiceSERVImpl.getMatrixRulesInfoForClient', @w_rol,@w_producto,'R',0,getdate(),'V',getdate())
	print 'insert en ad_servicio_autorizado getMatrixRulesInfoForClient FUNCIONARIO OFICINA'
end


go

use cobis
go

declare 
@w_rol_2 int,
@w_producto int

select @w_rol_2 = ro_rol from ad_rol where ro_descripcion='MESA DE OPERACIONES' 

SELECT @w_producto = pd_producto FROM cobis..cl_producto 
WHERE pd_descripcion = 'CARTERA'

--REGISTER PAYMENT
delete from ad_servicio_autorizado where ts_servicio = 'Payments.MassivePayment.RegisterPayment'and ts_rol = @w_rol_2
insert into ad_servicio_autorizado(ts_servicio, ts_producto, ts_tipo, ts_moneda, ts_fecha_aut, ts_rol, ts_estado, ts_fecha_ult_mod)
values('Payments.MassivePayment.RegisterPayment', @w_producto, 'R', 0, getdate(), @w_rol_2, 'V', getdate())


--VALIDATE PAYMENTS
delete from ad_servicio_autorizado where ts_servicio = 'Payments.MassivePayment.ValidatePayments'and ts_rol = @w_rol_2
insert into ad_servicio_autorizado(ts_servicio, ts_producto, ts_tipo, ts_moneda, ts_fecha_aut, ts_rol, ts_estado, ts_fecha_ult_mod)
values('Payments.MassivePayment.ValidatePayments', @w_producto, 'R', 0, getdate(), @w_rol_2, 'V', getdate())


--EXECUTE PAYMENTS
delete from ad_servicio_autorizado where ts_servicio = 'Payments.MassivePayment.ExecutePayments'and ts_rol = @w_rol_2
insert into ad_servicio_autorizado(ts_servicio, ts_producto, ts_tipo, ts_moneda, ts_fecha_aut, ts_rol, ts_estado, ts_fecha_ult_mod)
values('Payments.MassivePayment.ExecutePayments', @w_producto, 'R', 0, getdate(), @w_rol_2, 'V', getdate())


--GET PAYMENTS RESULT
delete from ad_servicio_autorizado where ts_servicio = 'Payments.MassivePayment.GetPaymentsResult'and ts_rol = @w_rol_2
insert into ad_servicio_autorizado(ts_servicio, ts_producto, ts_tipo, ts_moneda, ts_fecha_aut, ts_rol, ts_estado, ts_fecha_ult_mod)
values('Payments.MassivePayment.GetPaymentsResult', @w_producto, 'R', 0, getdate(), @w_rol_2, 'V', getdate())

use cobis
go

declare 
@w_rol_1 int,
@w_producto int

select @w_rol_1 = ro_rol from ad_rol where ro_descripcion='CONSULTA' 

SELECT @w_producto = pd_producto FROM cobis..cl_producto 
WHERE pd_descripcion = 'CARTERA'


--SEARCH TRANSACTIONS
delete from cobis..cts_serv_catalog where csc_service_id='Loan.OperationDataQuery.SearchTransactions'
insert into cobis..cts_serv_catalog (csc_service_id, csc_class_name, csc_method_name,csc_description, csc_trn)
values('Loan.OperationDataQuery.SearchTransactions', 'cobiscorp.ecobis.assets.cloud.service.IOperationDataQuery','searchTransactions','recupera la información de transacciones',7020)



delete from ad_servicio_autorizado where ts_servicio = 'Loan.OperationDataQuery.SearchTransactions' and ts_rol = @w_rol_1
insert into ad_servicio_autorizado(ts_servicio, ts_producto, ts_tipo, ts_moneda, ts_fecha_aut, ts_rol, ts_estado, ts_fecha_ult_mod)
values('Loan.OperationDataQuery.SearchTransactions', @w_producto, 'R', 0, getdate(), @w_rol_1, 'V', getdate())


--SEARCH TRANSACTION DETAIL
delete from cobis..cts_serv_catalog where csc_service_id='Loan.OperationDataQuery.SearchTransactionDetail'
insert into cobis..cts_serv_catalog (csc_service_id, csc_class_name, csc_method_name,csc_description, csc_trn)
values('Loan.OperationDataQuery.SearchTransactionDetail', 'cobiscorp.ecobis.assets.cloud.service.IOperationDataQuery','searchTransactionDetail','recupera el detalle de la transacción',7020)



delete from ad_servicio_autorizado where ts_servicio = 'Loan.OperationDataQuery.SearchTransactionDetail' and ts_rol = @w_rol_1
insert into ad_servicio_autorizado(ts_servicio, ts_producto, ts_tipo, ts_moneda, ts_fecha_aut, ts_rol, ts_estado, ts_fecha_ult_mod)
values('Loan.OperationDataQuery.SearchTransactionDetail', @w_producto, 'R', 0, getdate(), @w_rol_1, 'V', getdate())



--ReadCorresponsalPayment
delete from cobis..cts_serv_catalog where csc_service_id='Loan.LoanMaintenance.ReadCorresponsalPayment'
insert into cobis..cts_serv_catalog (csc_service_id, csc_class_name, csc_method_name,csc_description, csc_trn)
values('Loan.LoanMaintenance.ReadCorresponsalPayment', 'cobiscorp.ecobis.assets.cloud.service.ILoanMaintenance','readCorresponsalPayment','recupera los datos para generar el reporte CorresponsalPagos',0)



delete from ad_servicio_autorizado where ts_servicio = 'Loan.LoanMaintenance.ReadCorresponsalPayment' and ts_rol = @w_rol_1
insert into ad_servicio_autorizado(ts_servicio, ts_producto, ts_tipo, ts_moneda, ts_fecha_aut, ts_rol, ts_estado, ts_fecha_ult_mod)
values('Loan.LoanMaintenance.ReadCorresponsalPayment', @w_producto, 'R', 0, getdate(), @w_rol_1, 'V', getdate())


--ReadCorresponsalPaymentInd --Requerimiento #190362 Impresion de Ficha PI
delete from cobis..cts_serv_catalog where csc_service_id='Loan.LoanMaintenance.ReadCorresponsalPaymentInd'
insert into cobis..cts_serv_catalog (csc_service_id, csc_class_name, csc_method_name,csc_description, csc_trn)
values('Loan.LoanMaintenance.ReadCorresponsalPaymentInd', 'cobiscorp.ecobis.assets.cloud.service.ILoanMaintenance','readCorresponsalPaymentInd','datos para generacion del reporte ficha pago individual',0)

delete from ad_servicio_autorizado where ts_servicio = 'Loan.LoanMaintenance.ReadCorresponsalPayment' and ts_rol = @w_rol_1
insert into ad_servicio_autorizado(ts_servicio, ts_producto, ts_tipo, ts_moneda, ts_fecha_aut, ts_rol, ts_estado, ts_fecha_ult_mod)
values('Loan.LoanMaintenance.ReadCorresponsalPaymentInd', @w_producto, 'R', 0, getdate(), @w_rol_1, 'V', getdate())


USE cobis
GO
    
DECLARE @w_rol int, @w_producto INT,@w_moneda TINYINT,@w_rol_1 int
SELECT  @w_rol = ro_rol from cobis..ad_rol where ro_descripcion='CALL CENTER'
SELECT @w_producto = 7 -- select @w_producto = pd_producto from cl_producto where pd_descripcion = 'CARTERA'
select @w_moneda = pa_tinyint from cobis..cl_parametro where pa_nemonico = 'MLO' and pa_producto = 'ADM'


/*Inserto el Rol si no existe */  
    
if not exists (select 1 from cobis..ad_rol where ro_descripcion = 'CALL CENTER')
begin
    select @w_rol_1 =  max(ro_rol)+1 from cobis..ad_rol
    insert into cobis..ad_rol (ro_rol, ro_filial, ro_descripcion, ro_fecha_crea, ro_creador, ro_estado, ro_fecha_ult_mod, ro_time_out)
    values (@w_rol_1, 1, 'CALL CENTER', getdate(), 1, 'V', getdate(), 9000)
END


if exists (select 1 from cobis..ad_rol where ro_descripcion = 'CALL CENTER')
begin
    select @w_rol = ro_rol from ad_rol where ro_descripcion = 'CALL CENTER'
	
   
    if not exists (select 1 from cts_serv_catalog where csc_service_id = 'BussinesCallCenter.CallCenterManager.ResetInformationImageMessage')	
    insert into cts_serv_catalog
    (csc_service_id, csc_class_name, csc_method_name, csc_description, csc_trn, csc_support_offline, csc_component, csc_procedure_validation)
    values('BussinesCallCenter.CallCenterManager.ResetInformationImageMessage',  'cobiscorp.ecobis.bussinescallcenter.service.ICallCenterManager', 'resetInformationImageMessage', '', 0, null, null, 'N')

    if not exists (select 1 from ad_servicio_autorizado where 
    ts_servicio = 'BussinesCallCenter.CallCenterManager.ResetInformationImageMessage' and ts_rol = @w_rol and ts_producto = @w_producto and ts_moneda = @w_moneda)    
    insert into ad_servicio_autorizado
    (ts_servicio, ts_producto, ts_tipo, ts_moneda, ts_fecha_aut, ts_rol, ts_estado, ts_fecha_ult_mod)
    values('BussinesCallCenter.CallCenterManager.ResetInformationImageMessage', @w_producto, 'R', @w_moneda, getdate(), @w_rol, 'V', getdate())
end
else
begin 
    print 'cambio rol'
	select @w_rol = ro_rol from ad_rol where ro_descripcion = 'ADMINISTRADOR'
 
    if not exists (select 1 from cts_serv_catalog where csc_service_id = 'BussinesCallCenter.CallCenterManager.ResetInformationImageMessage')	
    insert into cts_serv_catalog
    (csc_service_id, csc_class_name, csc_method_name, csc_description, csc_trn, csc_support_offline, csc_component, csc_procedure_validation)
    values('BussinesCallCenter.CallCenterManager.ResetInformationImageMessage',  'cobiscorp.ecobis.bussinescallcenter.service.ICallCenterManager', 'resetInformationImageMessage', '', 0, null, null, 'N')

    if not exists (select 1 from ad_servicio_autorizado where 
    ts_servicio = 'BussinesCallCenter.CallCenterManager.ResetInformationImageMessage' and ts_rol = @w_rol and ts_producto = @w_producto and ts_moneda = @w_moneda)    
    insert into ad_servicio_autorizado
    (ts_servicio, ts_producto, ts_tipo, ts_moneda, ts_fecha_aut, ts_rol, ts_estado, ts_fecha_ult_mod)
    values('BussinesCallCenter.CallCenterManager.ResetInformationImageMessage', @w_producto, 'R', @w_moneda, getdate(), @w_rol, 'V', getdate())	
end

go

--CANCELACION DE LCR ANTICIPADA
IF EXISTS (SELECT * FROM cts_serv_catalog WHERE csc_service_id = 'IndividualLoan.CancelManagement.CancelLCR')
	UPDATE cts_serv_catalog SET csc_class_name = 'cobiscorp.ecobis.individualloan.service.ICancelManagement', csc_method_name = 'cancelLCR', csc_description = '', csc_trn = 9999 WHERE csc_service_id = 'IndividualLoan.CancelManagement.CancelLCR'
  ELSE
	INSERT INTO cts_serv_catalog (csc_service_id, csc_class_name, csc_method_name, csc_description, csc_trn ) VALUES ('IndividualLoan.CancelManagement.CancelLCR', 'cobiscorp.ecobis.individualloan.service.ICancelManagement', 'cancelLCR', '', 9999)
GO

--------------------------
-- PAGOS OBJETADOS #108348
--------------------------

use cobis
GO

declare 
@w_rol_1 int,
@w_producto int

select @w_rol_1 = ro_rol from ad_rol 
where ro_descripcion='MESA DE OPERACIONES' 

SELECT @w_producto = pd_producto FROM cobis..cl_producto 
WHERE pd_descripcion = 'CARTERA'

-- GetAllObjetedPayments
delete from cobis..cts_serv_catalog where csc_service_id='RegularizePayments.ObjetedPayments.GetAllObjetedPayments'
INSERT INTO cts_serv_catalog (csc_service_id, csc_class_name, csc_method_name, csc_description, csc_trn , csc_procedure_validation) VALUES ('RegularizePayments.ObjetedPayments.GetAllObjetedPayments', 'cobiscorp.ecobis.regularizepayments.service.IObjetedPayments', 'getAllObjetedPayments', '', 7070001, 'Y')

delete from ad_servicio_autorizado where ts_servicio = 'RegularizePayments.ObjetedPayments.GetAllObjetedPayments' and ts_rol = @w_rol_1
insert into ad_servicio_autorizado(ts_servicio, ts_producto, ts_tipo, ts_moneda, ts_fecha_aut, ts_rol, ts_estado, ts_fecha_ult_mod)
values('RegularizePayments.ObjetedPayments.GetAllObjetedPayments', @w_producto, 'R', 0, getdate(), @w_rol_1, 'V', getdate())


-- InsertObjetedPayments
delete from cobis..cts_serv_catalog where csc_service_id='RegularizePayments.ObjetedPayments.InsertObjetedPayments'
INSERT INTO cts_serv_catalog (csc_service_id, csc_class_name, csc_method_name, csc_description, csc_trn , csc_procedure_validation) VALUES ('RegularizePayments.ObjetedPayments.InsertObjetedPayments', 'cobiscorp.ecobis.regularizepayments.service.IObjetedPayments', 'insertObjetedPayments', '', 7070002, 'Y')

delete from ad_servicio_autorizado where ts_servicio = 'RegularizePayments.ObjetedPayments.InsertObjetedPayments' and ts_rol = @w_rol_1
insert into ad_servicio_autorizado(ts_servicio, ts_producto, ts_tipo, ts_moneda, ts_fecha_aut, ts_rol, ts_estado, ts_fecha_ult_mod)
values('RegularizePayments.ObjetedPayments.InsertObjetedPayments', @w_producto, 'R', 0, getdate(), @w_rol_1, 'V', getdate())


-- OpRegularizePayments
delete from cobis..cts_serv_catalog where csc_service_id='RegularizePayments.ObjetedPayments.OpRegularizePayments'
INSERT INTO cts_serv_catalog (csc_service_id, csc_class_name, csc_method_name, csc_description, csc_trn , csc_procedure_validation) VALUES ('RegularizePayments.ObjetedPayments.OpRegularizePayments', 'cobiscorp.ecobis.regularizepayments.service.IObjetedPayments', 'opRegularizePayments', '', 7070003, 'Y')

delete from ad_servicio_autorizado where ts_servicio = 'RegularizePayments.ObjetedPayments.OpRegularizePayments' and ts_rol = @w_rol_1
insert into ad_servicio_autorizado(ts_servicio, ts_producto, ts_tipo, ts_moneda, ts_fecha_aut, ts_rol, ts_estado, ts_fecha_ult_mod)
values('RegularizePayments.ObjetedPayments.OpRegularizePayments', @w_producto, 'R', 0, getdate(), @w_rol_1, 'V', getdate())

-- OpGetPaymentMethods
delete from cobis..cts_serv_catalog where csc_service_id='RegularizePayments.Catalogs.OpGetPaymentMethods'
insert into dbo.cts_serv_catalog (csc_service_id, csc_class_name, csc_method_name, csc_description, csc_trn, csc_support_offline, csc_component, csc_procedure_validation)
values ('RegularizePayments.Catalogs.OpGetPaymentMethods', 'cobiscorp.ecobis.regularizepayments.service.ICatalogs', 'opGetPaymentMethods', '',7076, NULL, NULL, 'Y')

delete from cobis..ad_servicio_autorizado where ts_servicio = 'RegularizePayments.Catalogs.OpGetPaymentMethods' and ts_rol = @w_rol_1
insert into cobis..ad_servicio_autorizado(ts_servicio, ts_producto, ts_tipo, ts_moneda, ts_fecha_aut, ts_rol, ts_estado, ts_fecha_ult_mod)
values('RegularizePayments.Catalogs.OpGetPaymentMethods', @w_producto, 'R', 0, getdate(), @w_rol_1, 'V', getdate())
go

 IF EXISTS (SELECT * FROM cts_serv_catalog WHERE csc_service_id = 'Sales.Cloud.ConsultingReportSales.ReportSafeBenefits')
    UPDATE cts_serv_catalog SET 
	csc_class_name = 'cobiscorp.ecobis.sales.cloud.service.IConsultingReportSales', 
	csc_method_name = 'reportSafeBenefits', csc_description = '', csc_trn = 74007, 
	csc_procedure_validation = 'Y' 
	WHERE csc_service_id = 'Sales.Cloud.ConsultingReportSales.ReportSafeBenefits'
ELSE
	INSERT INTO cts_serv_catalog (csc_service_id, csc_class_name, csc_method_name, csc_description, csc_trn , csc_procedure_validation)
	VALUES ('Sales.Cloud.ConsultingReportSales.ReportSafeBenefits', 'cobiscorp.ecobis.sales.cloud.service.IConsultingReportSales', 'reportSafeBenefits', '', 74007, 'Y')
    
    
IF EXISTS (SELECT * FROM cts_serv_catalog WHERE csc_service_id = 'Sales.Cloud.ConsultingReportSales.ReportSafeDeclaration')
    UPDATE cts_serv_catalog SET 
		csc_class_name = 'cobiscorp.ecobis.sales.cloud.service.IConsultingReportSales', 
		csc_method_name = 'reportSafeDeclaration', 
		csc_description = '', 
		csc_trn = 74007,
		csc_procedure_validation = 'Y' 
	WHERE csc_service_id = 'Sales.Cloud.ConsultingReportSales.ReportSafeDeclaration'
ELSE
	INSERT INTO cts_serv_catalog (csc_service_id, csc_class_name, csc_method_name, csc_description, csc_trn , csc_procedure_validation) 
	VALUES ('Sales.Cloud.ConsultingReportSales.ReportSafeDeclaration', 'cobiscorp.ecobis.sales.cloud.service.IConsultingReportSales', 'reportSafeDeclaration', '', 74007, 'Y')


IF EXISTS (SELECT * FROM cts_serv_catalog WHERE csc_service_id = 'Sales.Cloud.ConsultingReportSales.ReportSafeInformation')
    UPDATE cts_serv_catalog SET 
		csc_class_name = 'cobiscorp.ecobis.sales.cloud.service.IConsultingReportSales', 
		csc_method_name = 'reportSafeInformation',
		csc_description = '',
		csc_trn = 74007, 
		csc_procedure_validation = 'Y' 
	WHERE csc_service_id = 'Sales.Cloud.ConsultingReportSales.ReportSafeInformation'
ELSE
   INSERT INTO cts_serv_catalog (csc_service_id, csc_class_name, csc_method_name, csc_description, csc_trn , csc_procedure_validation) 
	VALUES ('Sales.Cloud.ConsultingReportSales.ReportSafeInformation', 'cobiscorp.ecobis.sales.cloud.service.IConsultingReportSales', 'reportSafeInformation', '', 74007, 'Y')
---FIN
-------------------------------
--ad_servicio_autorizado-------
-------------------------------
IF EXISTS(SELECT 1 FROM cobis..ad_servicio_autorizado where ts_servicio = 'Sales.Cloud.ConsultingReportSales.ReportSafeBenefits')
BEGIN
	DELETE  cobis..ad_servicio_autorizado where ts_servicio = 'Sales.Cloud.ConsultingReportSales.ReportSafeBenefits'
END
 INSERT INTO cobis..ad_servicio_autorizado(ts_servicio   , ts_rol, ts_producto , ts_tipo, ts_moneda, ts_fecha_aut, ts_estado, ts_fecha_ult_mod)
 VALUES('Sales.Cloud.ConsultingReportSales.ReportSafeBenefits', @w_rol, @pd_producto, 'R'    , 0        , getdate()   , 'V'       , getdate())  
 
--
 IF EXISTS(SELECT 1 FROM cobis..ad_servicio_autorizado where ts_servicio = 'Sales.Cloud.ConsultingReportSales.ReportSafeDeclaration')
BEGIN
	DELETE  cobis..ad_servicio_autorizado where ts_servicio = 'Sales.Cloud.ConsultingReportSales.ReportSafeDeclaration'
END
 INSERT INTO cobis..ad_servicio_autorizado(ts_servicio   , ts_rol, ts_producto , ts_tipo, ts_moneda, ts_fecha_aut, ts_estado, ts_fecha_ult_mod)
 VALUES('Sales.Cloud.ConsultingReportSales.ReportSafeDeclaration', @w_rol, @pd_producto, 'R'    , 0        , getdate()   , 'V'       , getdate())  
 
--
 IF EXISTS(SELECT 1 FROM cobis..ad_servicio_autorizado where ts_servicio = 'Sales.Cloud.ConsultingReportSales.ReportSafeInformation')
BEGIN
	DELETE  cobis..ad_servicio_autorizado where ts_servicio = 'Sales.Cloud.ConsultingReportSales.ReportSafeInformation'
END
 INSERT INTO cobis..ad_servicio_autorizado(ts_servicio   , ts_rol, ts_producto , ts_tipo, ts_moneda, ts_fecha_aut, ts_estado, ts_fecha_ult_mod)
 VALUES('Sales.Cloud.ConsultingReportSales.ReportSafeInformation', @w_rol, @pd_producto, 'R'    , 0        , getdate()   , 'V'       , getdate())  
--FIN

------------------------------------
----Servicio de seguros +medicos----
------------------------------------
IF EXISTS (SELECT * FROM cts_serv_catalog WHERE csc_service_id = 'Sales.Cloud.ConsultingReportMedical.ReportMedicalBenefits')
  UPDATE cts_serv_catalog SET 
		csc_class_name = 'cobiscorp.ecobis.sales.cloud.service.IConsultingReportMedical',
		csc_method_name = 'reportMedicalBenefits', 
		csc_description = '', 
		csc_trn = 74008, 
		csc_procedure_validation = 'Y' 
  WHERE csc_service_id = 'Sales.Cloud.ConsultingReportMedical.ReportMedicalBenefits'
ELSE
  INSERT INTO cts_serv_catalog (csc_service_id, csc_class_name, csc_method_name, csc_description, csc_trn , csc_procedure_validation) 
  VALUES ('Sales.Cloud.ConsultingReportMedical.ReportMedicalBenefits', 'cobiscorp.ecobis.sales.cloud.service.IConsultingReportMedical', 'reportMedicalBenefits', '', 74008, 'Y')


IF EXISTS (SELECT * FROM cts_serv_catalog WHERE csc_service_id = 'Sales.Cloud.ConsultingReportMedical.ReportMedicalDeclaration')
  UPDATE cts_serv_catalog SET 
		csc_class_name = 'cobiscorp.ecobis.sales.cloud.service.IConsultingReportMedical',
		csc_method_name = 'reportMedicalDeclaration', 
		csc_description = '', 
		csc_trn = 74008, 
		csc_procedure_validation = 'Y' 
  WHERE csc_service_id = 'Sales.Cloud.ConsultingReportMedical.ReportMedicalDeclaration'
ELSE
  INSERT INTO cts_serv_catalog (csc_service_id, csc_class_name, csc_method_name, csc_description, csc_trn , csc_procedure_validation)
  VALUES ('Sales.Cloud.ConsultingReportMedical.ReportMedicalDeclaration', 'cobiscorp.ecobis.sales.cloud.service.IConsultingReportMedical', 'reportMedicalDeclaration', '', 74008, 'Y')

IF EXISTS (SELECT * FROM cts_serv_catalog WHERE csc_service_id = 'Sales.Cloud.ConsultingReportMedical.ReportMedicalInformation')
  UPDATE cts_serv_catalog SET 
		csc_class_name = 'cobiscorp.ecobis.sales.cloud.service.IConsultingReportMedical', 
		csc_method_name = 'reportMedicalInformation',
		csc_description = '',
		csc_trn = 74008,
		csc_procedure_validation = 'Y' 
  WHERE csc_service_id = 'Sales.Cloud.ConsultingReportMedical.ReportMedicalInformation'
ELSE
  INSERT INTO cts_serv_catalog (csc_service_id, csc_class_name, csc_method_name, csc_description, csc_trn , csc_procedure_validation) 
  VALUES ('Sales.Cloud.ConsultingReportMedical.ReportMedicalInformation', 'cobiscorp.ecobis.sales.cloud.service.IConsultingReportMedical', 'reportMedicalInformation', '', 74008, 'Y')

-------------------------------
--ad_servicio_autorizado-------
-------------------------------

IF EXISTS(SELECT 1 FROM cobis..ad_servicio_autorizado where ts_servicio = 'Sales.Cloud.ConsultingReportMedical.ReportMedicalBenefits')
BEGIN
	DELETE  cobis..ad_servicio_autorizado where ts_servicio = 'Sales.Cloud.ConsultingReportMedical.ReportMedicalBenefits'
END
 INSERT INTO cobis..ad_servicio_autorizado(ts_servicio   , ts_rol, ts_producto , ts_tipo, ts_moneda, ts_fecha_aut, ts_estado, ts_fecha_ult_mod)
 VALUES('Sales.Cloud.ConsultingReportMedical.ReportMedicalBenefits', @w_rol, @pd_producto, 'R'    , 0        , getdate()   , 'V'       , getdate())  
 
--
 IF EXISTS(SELECT 1 FROM cobis..ad_servicio_autorizado where ts_servicio = 'Sales.Cloud.ConsultingReportMedical.ReportMedicalDeclaration')
BEGIN
	DELETE  cobis..ad_servicio_autorizado where ts_servicio = 'Sales.Cloud.ConsultingReportMedical.ReportMedicalDeclaration'
END
 INSERT INTO cobis..ad_servicio_autorizado(ts_servicio   , ts_rol, ts_producto , ts_tipo, ts_moneda, ts_fecha_aut, ts_estado, ts_fecha_ult_mod)
 VALUES('Sales.Cloud.ConsultingReportMedical.ReportMedicalDeclaration', @w_rol, @pd_producto, 'R'    , 0        , getdate()   , 'V'       , getdate())  
 
--
 IF EXISTS(SELECT 1 FROM cobis..ad_servicio_autorizado where ts_servicio = 'Sales.Cloud.ConsultingReportMedical.ReportMedicalInformation')
BEGIN
	DELETE  cobis..ad_servicio_autorizado where ts_servicio = 'Sales.Cloud.ConsultingReportMedical.ReportMedicalInformation'
END
 INSERT INTO cobis..ad_servicio_autorizado(ts_servicio   , ts_rol, ts_producto , ts_tipo, ts_moneda, ts_fecha_aut, ts_estado, ts_fecha_ult_mod)
 VALUES('Sales.Cloud.ConsultingReportMedical.ReportMedicalInformation', @w_rol, @pd_producto, 'R'    , 0        , getdate()   , 'V'       , getdate())  
--FIN

------------------------------------
----Servicio de seguros +medicos----
------------------------------------
IF EXISTS (SELECT * FROM cts_serv_catalog WHERE csc_service_id = 'Sales.Cloud.ConsultingClientsTeams.ConsultingClients')
  UPDATE cts_serv_catalog SET 
  csc_class_name = 'cobiscorp.ecobis.sales.cloud.service.IConsultingClientsTeams', 
  csc_method_name = 'consultingClients', 
  csc_description = '', 
  csc_trn = 74009, 
  csc_procedure_validation = 'Y' 
  WHERE csc_service_id = 'Sales.Cloud.ConsultingClientsTeams.ConsultingClients'
ELSE
  INSERT INTO cts_serv_catalog (csc_service_id, csc_class_name, csc_method_name, csc_description, csc_trn , csc_procedure_validation) VALUES ('Sales.Cloud.ConsultingClientsTeams.ConsultingClients', 'cobiscorp.ecobis.sales.cloud.service.IConsultingClientsTeams', 'consultingClients', '', 74009, 'Y')
  
--
 IF EXISTS(SELECT 1 FROM cobis..ad_servicio_autorizado where ts_servicio = 'Sales.Cloud.ConsultingClientsTeams.ConsultingClients')
BEGIN
	DELETE  cobis..ad_servicio_autorizado where ts_servicio = 'Sales.Cloud.ConsultingClientsTeams.ConsultingClients'
END
 INSERT INTO cobis..ad_servicio_autorizado(ts_servicio   , ts_rol, ts_producto , ts_tipo, ts_moneda, ts_fecha_aut, ts_estado, ts_fecha_ult_mod)
 VALUES('Sales.Cloud.ConsultingClientsTeams.ConsultingClients', @w_rol, @pd_producto, 'R'    , 0        , getdate()   , 'V'       , getdate())  
--FIN
-----------------------------------------
----Servicio de consulta tipo seguro ----
-----------------------------------------
---
IF EXISTS (SELECT * FROM cts_serv_catalog WHERE csc_service_id = 'LoansBusiness.Insurance.QueryInsurance')
	UPDATE cts_serv_catalog SET
		csc_class_name = 'cobiscorp.ecobis.loansbusiness.service.IInsurance', 
		csc_method_name = 'queryInsurance', 
		csc_description = '', 
		csc_trn = 74010, 
		csc_procedure_validation = 'Y' 
	WHERE csc_service_id = 'LoansBusiness.Insurance.QueryInsurance'
ELSE
	INSERT INTO cts_serv_catalog (csc_service_id, csc_class_name, csc_method_name, csc_description, csc_trn , csc_procedure_validation) 
	VALUES ('LoansBusiness.Insurance.QueryInsurance', 'cobiscorp.ecobis.loansbusiness.service.IInsurance', 'queryInsurance', '', 74010, 'Y')
--
 IF EXISTS(SELECT 1 FROM cobis..ad_servicio_autorizado where ts_servicio = 'LoansBusiness.Insurance.QueryInsurance')
BEGIN
	DELETE  cobis..ad_servicio_autorizado where ts_servicio = 'LoansBusiness.Insurance.QueryInsurance'
END
 INSERT INTO cobis..ad_servicio_autorizado(ts_servicio   , ts_rol, ts_producto , ts_tipo, ts_moneda, ts_fecha_aut, ts_estado, ts_fecha_ult_mod)
 VALUES('LoansBusiness.Insurance.QueryInsurance', @w_rol, @pd_producto, 'R'    , 0        , getdate()   , 'V'       , getdate())  
 
GO


*/
*  REQUERIMIENTO #141620
*/

use cobis
    GO
    
      IF EXISTS (SELECT * FROM cts_serv_catalog WHERE csc_service_id = 'Sales.Cloud.ConsultingReportZurich.ReportZurichInformation')
        UPDATE cts_serv_catalog SET csc_class_name = 'cobiscorp.ecobis.sales.cloud.service.IConsultingReportZurich', csc_method_name = 'reportZurichInformation', csc_description = '', csc_trn = 775100 WHERE csc_service_id = 'Sales.Cloud.ConsultingReportZurich.ReportZurichInformation'
      ELSE
        INSERT INTO cts_serv_catalog (csc_service_id, csc_class_name, csc_method_name, csc_description, csc_trn ) VALUES ('Sales.Cloud.ConsultingReportZurich.ReportZurichInformation', 'cobiscorp.ecobis.sales.cloud.service.IConsultingReportZurich', 'reportZurichInformation', '', 775100)
      GO
    
      IF EXISTS (SELECT * FROM ad_servicio_autorizado WHERE ts_servicio = 'Sales.Cloud.ConsultingReportZurich.ReportZurichInformation')
      begin
        DELETE ad_servicio_autorizado WHERE ts_servicio = 'Sales.Cloud.ConsultingReportZurich.ReportZurichInformation'
        INSERT INTO ad_servicio_autorizado values ('Sales.Cloud.ConsultingReportZurich.ReportZurichInformation',10,7,'R',0,getdate(),'V',getdate())
        INSERT INTO ad_servicio_autorizado values ('Sales.Cloud.ConsultingReportZurich.ReportZurichInformation',12,7,'R',0,getdate(),'V',getdate())
        INSERT INTO ad_servicio_autorizado values ('Sales.Cloud.ConsultingReportZurich.ReportZurichInformation',16,7,'R',0,getdate(),'V',getdate())
        INSERT INTO ad_servicio_autorizado values ('Sales.Cloud.ConsultingReportZurich.ReportZurichInformation',29,7,'R',0,getdate(),'V',getdate())
      end
      ELSE
      begin
        INSERT INTO ad_servicio_autorizado values ('Sales.Cloud.ConsultingReportZurich.ReportZurichInformation',10,7,'R',0,getdate(),'V',getdate())
        INSERT INTO ad_servicio_autorizado values ('Sales.Cloud.ConsultingReportZurich.ReportZurichInformation',12,7,'R',0,getdate(),'V',getdate())
        INSERT INTO ad_servicio_autorizado values ('Sales.Cloud.ConsultingReportZurich.ReportZurichInformation',16,7,'R',0,getdate(),'V',getdate())
        INSERT INTO ad_servicio_autorizado values ('Sales.Cloud.ConsultingReportZurich.ReportZurichInformation',29,7,'R',0,getdate(),'V',getdate())
      end
      GO

delete from ad_servicio_autorizado where ts_servicio = 'LoanGroup.GroupLoanAmountMaintenance.GetLoanAmountsRenovation'

delete from cts_serv_catalog where csc_service_id = 'LoanGroup.GroupLoanAmountMaintenance.GetLoanAmountsRenovation'

INSERT INTO dbo.cts_serv_catalog (csc_service_id, csc_class_name, csc_method_name, csc_description, csc_trn, csc_support_offline, csc_component, csc_procedure_validation)
VALUES ('LoanGroup.GroupLoanAmountMaintenance.GetLoanAmountsRenovation', 'cobiscorp.ecobis.loangroup.service.IGroupLoanAmountMaintenance', 'getAmountRenovation', 'Consulta los montos del grupo renovacion', 0, NULL, NULL, 'N')


INSERT INTO dbo.ad_servicio_autorizado (ts_servicio, ts_rol, ts_producto, ts_tipo, ts_moneda, ts_fecha_aut, ts_estado, ts_fecha_ult_mod)
VALUES ('LoanGroup.GroupLoanAmountMaintenance.GetLoanAmountsRenovation', 1, 2, 'R', 0, getDate(), 'V', getDate())
GO

INSERT INTO dbo.ad_servicio_autorizado (ts_servicio, ts_rol, ts_producto, ts_tipo, ts_moneda, ts_fecha_aut, ts_estado, ts_fecha_ult_mod)
VALUES ('LoanGroup.GroupLoanAmountMaintenance.GetLoanAmountsRenovation', 2, 2, 'R', 0, getDate(), 'V', getDate())
GO

INSERT INTO dbo.ad_servicio_autorizado (ts_servicio, ts_rol, ts_producto, ts_tipo, ts_moneda, ts_fecha_aut, ts_estado, ts_fecha_ult_mod)
VALUES ('LoanGroup.GroupLoanAmountMaintenance.GetLoanAmountsRenovation', 3, 2, 'R', 0, getDate(), 'V', getDate())
GO

INSERT INTO dbo.ad_servicio_autorizado (ts_servicio, ts_rol, ts_producto, ts_tipo, ts_moneda, ts_fecha_aut, ts_estado, ts_fecha_ult_mod)
VALUES ('LoanGroup.GroupLoanAmountMaintenance.GetLoanAmountsRenovation', 4, 2, 'R', 0, getDate(), 'V', getDate())
GO

INSERT INTO dbo.ad_servicio_autorizado (ts_servicio, ts_rol, ts_producto, ts_tipo, ts_moneda, ts_fecha_aut, ts_estado, ts_fecha_ult_mod)
VALUES ('LoanGroup.GroupLoanAmountMaintenance.GetLoanAmountsRenovation', 5, 2, 'R', 0, getDate(), 'V', getDate())
GO

INSERT INTO dbo.ad_servicio_autorizado (ts_servicio, ts_rol, ts_producto, ts_tipo, ts_moneda, ts_fecha_aut, ts_estado, ts_fecha_ult_mod)
VALUES ('LoanGroup.GroupLoanAmountMaintenance.GetLoanAmountsRenovation', 6, 2, 'R', 0, getDate(), 'V', getDate())
GO

INSERT INTO dbo.ad_servicio_autorizado (ts_servicio, ts_rol, ts_producto, ts_tipo, ts_moneda, ts_fecha_aut, ts_estado, ts_fecha_ult_mod)
VALUES ('LoanGroup.GroupLoanAmountMaintenance.GetLoanAmountsRenovation', 7, 2, 'R', 0, getDate(), 'V', getDate())
GO

INSERT INTO dbo.ad_servicio_autorizado (ts_servicio, ts_rol, ts_producto, ts_tipo, ts_moneda, ts_fecha_aut, ts_estado, ts_fecha_ult_mod)
VALUES ('LoanGroup.GroupLoanAmountMaintenance.GetLoanAmountsRenovation', 8, 2, 'R', 0, getDate(), 'V', getDate())
GO

INSERT INTO dbo.ad_servicio_autorizado (ts_servicio, ts_rol, ts_producto, ts_tipo, ts_moneda, ts_fecha_aut, ts_estado, ts_fecha_ult_mod)
VALUES ('LoanGroup.GroupLoanAmountMaintenance.GetLoanAmountsRenovation', 10, 2, 'R', 0, getDate(), 'V', getDate())
GO

INSERT INTO dbo.ad_servicio_autorizado (ts_servicio, ts_rol, ts_producto, ts_tipo, ts_moneda, ts_fecha_aut, ts_estado, ts_fecha_ult_mod)
VALUES ('LoanGroup.GroupLoanAmountMaintenance.GetLoanAmountsRenovation', 11, 2, 'R', 0, getDate(), 'V', getDate())
GO

INSERT INTO dbo.ad_servicio_autorizado (ts_servicio, ts_rol, ts_producto, ts_tipo, ts_moneda, ts_fecha_aut, ts_estado, ts_fecha_ult_mod)
VALUES ('LoanGroup.GroupLoanAmountMaintenance.GetLoanAmountsRenovation', 12, 19, 'R', 0, getDate(), 'V', getDate())
GO

INSERT INTO dbo.ad_servicio_autorizado (ts_servicio, ts_rol, ts_producto, ts_tipo, ts_moneda, ts_fecha_aut, ts_estado, ts_fecha_ult_mod)
VALUES ('LoanGroup.GroupLoanAmountMaintenance.GetLoanAmountsRenovation', 13, 2, 'R', 0, getDate(), 'V', getDate())
GO

INSERT INTO dbo.ad_servicio_autorizado (ts_servicio, ts_rol, ts_producto, ts_tipo, ts_moneda, ts_fecha_aut, ts_estado, ts_fecha_ult_mod)
VALUES ('LoanGroup.GroupLoanAmountMaintenance.GetLoanAmountsRenovation', 14, 2, 'R', 0, getDate(), 'V', getDate())
GO

INSERT INTO dbo.ad_servicio_autorizado (ts_servicio, ts_rol, ts_producto, ts_tipo, ts_moneda, ts_fecha_aut, ts_estado, ts_fecha_ult_mod)
VALUES ('LoanGroup.GroupLoanAmountMaintenance.GetLoanAmountsRenovation', 19, 2, 'R', 0, getDate(), 'V', getDate())
GO

INSERT INTO dbo.ad_servicio_autorizado (ts_servicio, ts_rol, ts_producto, ts_tipo, ts_moneda, ts_fecha_aut, ts_estado, ts_fecha_ult_mod)
VALUES ('LoanGroup.GroupLoanAmountMaintenance.GetLoanAmountsRenovation', 29, 2, 'R', 0, getDate(), 'V', getDate())
GO



--------------------------------------------------------------------------------------------
-- REGISTRO DE SERVICIOS
--------------------------------------------------------------------------------------------
--Ruta TFS                   : 
--Nombre Archivo             : .sql
-- Parametrizar el rol

--------------------------------------------------------------------------------------------
-- SERVICIO PARA GENERAR REFERENCIAS
--------------------------------------------------------------------------------------------

-- TODO: Falta hacer la transacción
USE cobis
GO
    
DECLARE @w_rol int, @w_producto INT,@w_moneda TINYINT,@w_rol_1 int
SELECT  @w_rol = ro_rol from cobis..ad_rol where ro_descripcion='MENU POR PROCESOS'
SELECT @w_producto = 7 -- select @w_producto = pd_producto from cl_producto where pd_descripcion = 'CARTERA'
select @w_moneda = pa_tinyint from cobis..cl_parametro where pa_nemonico = 'MLO' and pa_producto = 'ADM'

/*Inserto el Rol si no existe */  
    
if not exists (select 1 from cobis..ad_rol where ro_descripcion = 'MENU POR PROCESOS')
begin
    select @w_rol_1 =  max(ro_rol)+1 from cobis..ad_rol
    insert into cobis..ad_rol (ro_rol, ro_filial, ro_descripcion, ro_fecha_crea, ro_creador, ro_estado, ro_fecha_ult_mod, ro_time_out)
    values (@w_rol_1, 1, 'MENU POR PROCESOS', getdate(), 1, 'V', getdate(), 9000)
END


if exists (select 1 from cobis..ad_rol where ro_descripcion = 'MENU POR PROCESOS')
begin
    select @w_rol = ro_rol from ad_rol where ro_descripcion = 'MENU POR PROCESOS'
	
   
    if not exists (select 1 from cts_serv_catalog where csc_service_id = 'IndividualLoan.DisbursementManagement.GenerateReferenceCreditLine' and csc_method_name = 'generateReferenceCreditLine')	
    insert into cts_serv_catalog
    (csc_service_id, csc_class_name, csc_method_name, csc_description, csc_trn, csc_support_offline, csc_component, csc_procedure_validation)
    values('IndividualLoan.DisbursementManagement.GenerateReferenceCreditLine',  'cobiscorp.ecobis.individualloan.service.IDisbursementManagement', 'generateReferenceCreditLine', '', 0, null, null, 'N')

    if not exists (select 1 from ad_servicio_autorizado where 
    ts_servicio = 'IndividualLoan.DisbursementManagement.GenerateReferenceCreditLine' and ts_rol = @w_rol and ts_producto = @w_producto and ts_moneda = @w_moneda)    
    insert into ad_servicio_autorizado
    (ts_servicio, ts_producto, ts_tipo, ts_moneda, ts_fecha_aut, ts_rol, ts_estado, ts_fecha_ult_mod)
    values('IndividualLoan.DisbursementManagement.GenerateReferenceCreditLine', @w_producto, 'R', @w_moneda, getdate(), @w_rol, 'V', getdate())
end
else
begin 
    print 'cambio rol'
	select @w_rol = ro_rol from ad_rol where ro_descripcion = 'ADMINISTRADOR'
 
    if not exists (select 1 from cts_serv_catalog where csc_service_id = 'IndividualLoan.DisbursementManagement.GenerateReferenceCreditLine' and csc_method_name = 'generateReferenceCreditLine')	
    insert into cts_serv_catalog
    (csc_service_id, csc_class_name, csc_method_name, csc_description, csc_trn, csc_support_offline, csc_component, csc_procedure_validation)
    values('IndividualLoan.DisbursementManagement.GenerateReferenceCreditLine',  'cobiscorp.ecobis.individualloan.service.IDisbursementManagement', 'generateReferenceCreditLine', '', 0, null, null, 'N')

    if not exists (select 1 from ad_servicio_autorizado where 
    ts_servicio = 'IndividualLoan.DisbursementManagement.GenerateReferenceCreditLine' and ts_rol = @w_rol and ts_producto = @w_producto and ts_moneda = @w_moneda)    
    insert into ad_servicio_autorizado
    (ts_servicio, ts_producto, ts_tipo, ts_moneda, ts_fecha_aut, ts_rol, ts_estado, ts_fecha_ult_mod)
    values('IndividualLoan.DisbursementManagement.GenerateReferenceCreditLine', @w_producto, 'R', @w_moneda, getdate(), @w_rol, 'V', getdate())	
end

go

