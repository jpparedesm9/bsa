use cobis
go


if exists (select 1 from sysobjects where name = 'sp_add_menu_role')
   drop proc sp_add_menu_role
go

CREATE proc sp_add_menu_role
as
declare
@w_producto     int, 
@w_id_menu      int, 
@w_moneda       tinyint, 
@w_id_menu_role int,
@w_menu         varchar(50), 
@w_id_rol       int

--Borrar registros

create table #roles(id_rol int)
insert into #roles select distinct id_rol from aut_menu_tmp

delete cew_menu_role
from #roles 
where mro_id_role = id_rol
     
delete ad_servicio_autorizado
from #roles 
where ts_rol = id_rol

delete ad_tr_autorizada
from #roles 
where ta_rol = id_rol
	  
delete cew_resource_rol
from #roles  
where rro_id_rol = id_rol



--CONSULTA DE MONEDA
select @w_moneda = mo_moneda
from cl_moneda
where mo_nemonico = 'MXN'

--AUTORIZACION DE SERVICIO QUE CONSULTA LAS OPCIONES DEL MENÃš
declare cursor_menu cursor for
select menu, id_rol
from aut_menu_tmp

open cursor_menu

fetch cursor_menu
into @w_menu, @w_id_rol


while @@fetch_status = 0
begin

    
    SELECT 
	@w_id_menu  = me_id,
    @w_producto = me_id_cobis_product 
    FROM cobis..cew_menu
    where me_name = @w_menu
	
	if @w_menu ='MNU_CONTAINER_INBOX_FF'
	begin
	    print '@w_id_menu: ' + convert(varchar, @w_id_menu)
	    print '@w_menu: ' + convert(varchar, @w_menu)
		print '@w_id_rol: ' + convert(varchar, @w_id_rol)
		
	end

    	
    --OPCION MENU - AUTORIZACION DE VISIBILIDAD HACIA LOS PADRES
    
    select @w_id_menu_role = @w_id_menu
    
    while exists(select 1 from cew_menu where me_id= @w_id_menu_role)
    BEGIN
    
       if not exists (select 1 from cew_menu_role where mro_id_menu = @w_id_menu_role and mro_id_role = @w_id_rol)
           insert into cew_menu_role(mro_id_menu, mro_id_role) VALUES(@w_id_menu_role,@w_id_rol)
       
       select @w_id_menu_role = me_id_parent
       from cew_menu
       where me_id = @w_id_menu_role
    end
    
    
    --SERVICIOS
    delete ad_servicio_autorizado
    from cew_menu_service 
    where ts_servicio = ms_servicio
      and ms_id_menu  = @w_id_menu
      --and ts_producto = @w_producto --Solo permite un serivio por rol no por producto
      and ts_rol      = @w_id_rol
	
    insert into ad_servicio_autorizado (
    ts_servicio, ts_producto, ts_tipo, 
    ts_moneda, ts_fecha_aut, ts_rol, 
    ts_estado, ts_fecha_ult_mod)
    select 
    ms_servicio, ms_producto, ms_tipo, 
    ms_moneda, getdate(), @w_id_rol, 
    'V', getdate() 
    from cew_menu_service 
    where ms_id_menu = @w_id_menu
    
    --TRANSACCIONES
    delete ad_tr_autorizada
    from cew_menu_transaccion 
    where ta_transaccion = mt_transaccion
      and mt_id_menu     = @w_id_menu
      and ta_producto    = @w_producto
      and ta_rol         = @w_id_rol
    
    insert into cobis..ad_tr_autorizada (
    ta_producto, ta_tipo, ta_moneda, 
    ta_transaccion, ta_rol, ta_fecha_aut, 
    ta_autorizante, ta_estado, ta_fecha_ult_mod) 
    SELECT 
    mt_producto, mt_tipo, @w_moneda, 
    mt_transaccion, @w_id_rol, getdate(),
     1, 'V', getdate()
    from cobis..cew_menu_transaccion
    WHERE mt_id_menu = @w_id_menu
    
    --RECURSOS
    delete cew_resource_rol
    from cew_menu_resource 
    where rro_id_resource = mr_id_resource
      and mr_id_menu      = @w_id_menu
      and rro_id_rol      = @w_id_rol
    
    insert into cew_resource_rol (rro_id_resource, rro_id_rol)
    select mr_id_resource, @w_id_rol from cobis..cew_menu_resource
    where mr_id_menu = @w_id_menu

	fetch cursor_menu
    into @w_menu, @w_id_rol
    
end

close cursor_menu
deallocate cursor_menu

go